%% Generated by the Erlang ASN.1 compiler version:3.0.1
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition,in module X2AP



-ifndef(_X2AP_HRL_).
-define(_X2AP_HRL_, true).

-record('PrivateIE-Field',{
id, criticality, value}).

-record('ProtocolExtensionField',{
id, criticality, extensionValue}).

-record('ProtocolIE-FieldPair',{
id, firstCriticality, firstValue, secondCriticality, secondValue}).

-record('ProtocolIE-Field',{
id, criticality, value}).

-record('PrivateMessage',{
privateIEs}). % with extension mark

-record('PrivateMessage_privateIEs_SEQOF',{
id, criticality, value}).

-record('CellMeasurementResult-Item',{
'cell-ID', hWOverLoadIndicator = asn1_NOVALUE, s1TNLOverLoadIndicator = asn1_NOVALUE, radioresourceStatus = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CellMeasurementResult-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CellMeasurementResult-List_SEQOF',{
id, criticality, value}).

-record('ResourceStatusUpdate',{
protocolIEs}). % with extension mark

-record('ResourceStatusUpdate_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ResourceStatusFailure',{
protocolIEs}). % with extension mark

-record('ResourceStatusFailure_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ResourceStatusResponse',{
protocolIEs}). % with extension mark

-record('ResourceStatusResponse_protocolIEs_SEQOF',{
id, criticality, value}).

-record('CellToReport-Item',{
'cell-ID', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CellToReport-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CellToReport-List_SEQOF',{
id, criticality, value}).

-record('ResourceStatusRequest',{
protocolIEs}). % with extension mark

-record('ResourceStatusRequest_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ENBConfigurationUpdateFailure',{
protocolIEs}). % with extension mark

-record('ENBConfigurationUpdateFailure_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ENBConfigurationUpdateAcknowledge',{
protocolIEs}). % with extension mark

-record('ENBConfigurationUpdateAcknowledge_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ServedCellsToModify-Item',{
'old-ecgi', servedCellInfo, 'neighbour-Info' = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ServedCellsToModify-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ENBConfigurationUpdate',{
protocolIEs}). % with extension mark

-record('ENBConfigurationUpdate_protocolIEs_SEQOF',{
id, criticality, value}).

-record('CellInformation-Item',{
'cell-ID', 'ul-InterferenceOverloadIndication' = asn1_NOVALUE, 'ul-HighInterferenceIndicationInfo' = asn1_NOVALUE, relativeNarrowbandTxPower = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CellInformation-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CellInformation-List_SEQOF',{
id, criticality, value}).

-record('LoadInformation',{
protocolIEs}). % with extension mark

-record('LoadInformation_protocolIEs_SEQOF',{
id, criticality, value}).

-record('X2SetupFailure',{
protocolIEs}). % with extension mark

-record('X2SetupFailure_protocolIEs_SEQOF',{
id, criticality, value}).

-record('X2SetupResponse',{
protocolIEs}). % with extension mark

-record('X2SetupResponse_protocolIEs_SEQOF',{
id, criticality, value}).

-record('X2SetupRequest',{
protocolIEs}). % with extension mark

-record('X2SetupRequest_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ResetResponse',{
protocolIEs}). % with extension mark

-record('ResetResponse_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ResetRequest',{
protocolIEs}). % with extension mark

-record('ResetRequest_protocolIEs_SEQOF',{
id, criticality, value}).

-record('ErrorIndication',{
protocolIEs}). % with extension mark

-record('ErrorIndication_protocolIEs_SEQOF',{
id, criticality, value}).

-record('HandoverCancel',{
protocolIEs}). % with extension mark

-record('HandoverCancel_protocolIEs_SEQOF',{
id, criticality, value}).

-record('UEContextRelease',{
protocolIEs}). % with extension mark

-record('UEContextRelease_protocolIEs_SEQOF',{
id, criticality, value}).

-record('E-RABs-SubjectToStatusTransfer-Item',{
'e-RAB-ID', receiveStatusofULPDCPSDUs = asn1_NOVALUE, 'uL-COUNTvalue', 'dL-COUNTvalue', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('E-RABs-SubjectToStatusTransfer-List_SEQOF',{
id, criticality, value}).

-record('SNStatusTransfer',{
protocolIEs}). % with extension mark

-record('SNStatusTransfer_protocolIEs_SEQOF',{
id, criticality, value}).

-record('HandoverPreparationFailure',{
protocolIEs}). % with extension mark

-record('HandoverPreparationFailure_protocolIEs_SEQOF',{
id, criticality, value}).

-record('E-RABs-Admitted-Item',{
'e-RAB-ID', 'uL-GTP-TunnelEndpoint' = asn1_NOVALUE, 'dL-GTP-TunnelEndpoint' = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('E-RABs-Admitted-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('E-RABs-Admitted-List_SEQOF',{
id, criticality, value}).

-record('HandoverRequestAcknowledge',{
protocolIEs}). % with extension mark

-record('HandoverRequestAcknowledge_protocolIEs_SEQOF',{
id, criticality, value}).

-record('E-RABs-ToBeSetup-Item',{
'e-RAB-ID', 'e-RAB-Level-QoS-Parameters', 'dL-Forwarding' = asn1_NOVALUE, 'uL-GTPtunnelEndpoint', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('E-RABs-ToBeSetup-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('E-RABs-ToBeSetup-List_SEQOF',{
id, criticality, value}).

-record('UE-ContextInformation',{
'mME-UE-S1AP-ID', uESecurityCapabilities, 'aS-SecurityInformation', uEaggregateMaximumBitRate, subscriberProfileIDforRFP = asn1_NOVALUE, 'e-RABs-ToBeSetup-List', 'rRC-Context', handoverRestrictionList = asn1_NOVALUE, locationReportingInformation = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('UE-ContextInformation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('HandoverRequest',{
protocolIEs}). % with extension mark

-record('HandoverRequest_protocolIEs_SEQOF',{
id, criticality, value}).

-record('UL-HighInterferenceIndicationInfo-Item',{
'target-Cell-ID', 'ul-interferenceindication', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('UL-HighInterferenceIndicationInfo-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('UESecurityCapabilities',{
encryptionAlgorithms, integrityProtectionAlgorithms, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('UESecurityCapabilities_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('UEAggregateMaximumBitRate',{
uEaggregateMaximumBitRateDownlink, uEaggregateMaximumBitRateUplink, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('UEAggregateMaximumBitRate_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('TraceActivation',{
eUTRANTraceID, interfacesToTrace, traceDepth, traceCollectionEntityIPAddress, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('TraceActivation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('SpecialSubframe-Info',{
specialSubframePatterns, cyclicPrefixDL, cyclicPrefixUL, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('SpecialSubframe-Info_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ServedCell-Information',{
pCI, cellId, tAC, broadcastPLMNs, 'eUTRA-Mode-Info', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ServedCell-Information_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ServedCells_SEQOF',{
servedCellInfo, 'neighbour-Info' = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ServedCells_SEQOF_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('S1TNLLoadIndicator',{
dLS1TNLLoadIndicator, uLS1TNLLoadIndicator, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('S1TNLLoadIndicator_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('RadioResourceStatus',{
'dL-GBR-PRB-usage', 'uL-GBR-PRB-usage', 'dL-non-GBR-PRB-usage', 'uL-non-GBR-PRB-usage', 'dL-Total-PRB-usage', 'uL-Total-PRB-usage', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('RadioResourceStatus_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('RelativeNarrowbandTxPower',{
'rNTP-PerPRB', 'rNTP-Threshold', numberOfCellSpecificAntennaPorts, 'p-B', 'pDCCH-InterferenceImpact', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('RelativeNarrowbandTxPower_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('Neighbour-Information_SEQOF',{
eCGI, pCI, eARFCN, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('Neighbour-Information_SEQOF_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('LocationReportingInformation',{
eventType, reportArea, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('LocationReportingInformation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('LastVisitedEUTRANCellInformation',{
'global-Cell-ID', cellType, 'time-UE-StayedInCell', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('LastVisitedEUTRANCellInformation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('HWLoadIndicator',{
dLHWLoadIndicator, uLHWLoadIndicator, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('HWLoadIndicator_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('HandoverRestrictionList',{
servingPLMN, equivalentPLMNs = asn1_NOVALUE, forbiddenTAs = asn1_NOVALUE, forbiddenLAs = asn1_NOVALUE, forbiddenInterRATs = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('HandoverRestrictionList_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('GUMMEI',{
'gU-Group-ID', 'mMME-Code', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('GUMMEI_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('GU-Group-ID',{
'pLMN-Identity', 'mME-Group-ID', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('GU-Group-ID_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('GTPtunnelEndpoint',{
transportLayerAddress, 'gTP-TEID', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('GTPtunnelEndpoint_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('GlobalENB-ID',{
'pLMN-Identity', 'eNB-ID', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('GlobalENB-ID_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('GBR-QosInformation',{
'e-RAB-MaximumBitrateDL', 'e-RAB-MaximumBitrateUL', 'e-RAB-GuaranteedBitrateDL', 'e-RAB-GuaranteedBitrateUL', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('GBR-QosInformation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ForbiddenLAs-Item',{
'pLMN-Identity', forbiddenLACs, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ForbiddenLAs-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ForbiddenTAs-Item',{
'pLMN-Identity', forbiddenTACs, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ForbiddenTAs-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('E-RAB-Item',{
'e-RAB-ID', cause, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('E-RAB-Item_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('E-RAB-List_SEQOF',{
id, criticality, value}).

-record('E-RAB-Level-QoS-Parameters',{
qCI, allocationAndRetentionPriority, gbrQosInformation = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('E-RAB-Level-QoS-Parameters_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('ECGI',{
'pLMN-Identity', eUTRANcellIdentifier, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('ECGI_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('TDD-Info',{
eARFCN, 'transmission-Bandwidth', subframeAssignment, 'specialSubframe-Info', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('TDD-Info_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('FDD-Info',{
'uL-EARFCN', 'dL-EARFCN', 'uL-Transmission-Bandwidth', 'dL-Transmission-Bandwidth', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('FDD-Info_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CriticalityDiagnostics-IE-List_SEQOF',{
iECriticality, 'iE-ID', typeOfError, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CriticalityDiagnostics',{
procedureCode = asn1_NOVALUE, triggeringMessage = asn1_NOVALUE, procedureCriticality = asn1_NOVALUE, iEsCriticalityDiagnostics = asn1_NOVALUE, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CriticalityDiagnostics_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('COUNTvalue',{
'pDCP-SN', hFN, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('COUNTvalue_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('CellType',{
'cell-Size', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('CellType_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('AllocationAndRetentionPriority',{
priorityLevel, 'pre-emptionCapability', 'pre-emptionVulnerability', 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('AllocationAndRetentionPriority_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('AS-SecurityInformation',{
'key-eNodeB-star', nextHopChainingCount, 'iE-Extensions' = asn1_NOVALUE}). % with extension mark

-record('AS-SecurityInformation_iE-Extensions_SEQOF',{
id, criticality, extensionValue}).

-record('UnsuccessfulOutcome',{
procedureCode, criticality, value}).

-record('SuccessfulOutcome',{
procedureCode, criticality, value}).

-record('InitiatingMessage',{
procedureCode, criticality, value}).

-define('id-ENB2-Measurement-ID', 40).
-define('id-ENB1-Measurement-ID', 39).
-define('id-ReportCharacteristics', 38).
-define('id-Measurement-ID', 37).
-define('id-SRVCCOperationPossible', 36).
-define('id-GUGroupIDToDeleteList', 35).
-define('id-GUGroupIDToAddList', 34).
-define('id-CellMeasurementResult-Item', 33).
-define('id-CellMeasurementResult', 32).
-define('id-CellToReport-Item', 31).
-define('id-ReportingPeriodicity', 30).
-define('id-CellToReport', 29).
-define('id-Registration-Request', 28).
-define('id-ServedCellsToDelete', 27).
-define('id-ServedCellsToModify', 26).
-define('id-ServedCellsToAdd', 25).
-define('id-GUGroupIDList', 24).
-define('id-GUMMEI-ID', 23).
-define('id-TimeToWait', 22).
-define('id-GlobalENB-ID', 21).
-define('id-ServedCells', 20).
-define('id-E-RABs-SubjectToStatusTransfer-Item', 19).
-define('id-E-RABs-SubjectToStatusTransfer-List', 18).
-define('id-CriticalityDiagnostics', 17).
-define('id-UE-X2AP-ID', 16).
-define('id-UE-HistoryInformation', 15).
-define('id-UE-ContextInformation', 14).
-define('id-TraceActivation', 13).
-define('id-TargeteNBtoSource-eNBTransparentContainer', 12).
-define('id-TargetCell-ID', 11).
-define('id-Old-eNB-UE-X2AP-ID', 10).
-define('id-New-eNB-UE-X2AP-ID', 9).
-define('id-CellInformation-Item', 7).
-define('id-CellInformation', 6).
-define('id-Cause', 5).
-define('id-E-RABs-ToBeSetup-Item', 4).
-define('id-E-RABs-NotAdmitted-List', 3).
-define('id-E-RAB-Item', 2).
-define('id-E-RABs-Admitted-List', 1).
-define('id-E-RABs-Admitted-Item', 0).
-define('maxnoofCells', 16).
-define('maxPools', 16).
-define('maxnoofPRBs', 110).
-define('maxnoofNeighbours', 512).
-define('maxnoofBPLMNs', 6).
-define('maxnoofForbTACs', 4096).
-define('maxnoofForbLACs', 4096).
-define('maxnoofEPLMNsPlusOne', 16).
-define('maxnoofEPLMNs', 15).
-define('maxnoofPDCP-SN', 16).
-define('maxNrOfErrors', 256).
-define('maxnoofBearers', 256).
-define('maxCellineNB', 256).
-define('maxInterfaces', 16).
-define('maxEARFCN', 65535).
-define('id-privateMessage', 11).
-define('id-resourceStatusReporting', 10).
-define('id-resourceStatusReportingInitiation', 9).
-define('id-eNBConfigurationUpdate', 8).
-define('id-reset', 7).
-define('id-x2Setup', 6).
-define('id-uEContextRelease', 5).
-define('id-snStatusTransfer', 4).
-define('id-errorIndication', 3).
-define('id-loadIndication', 2).
-define('id-handoverCancel', 1).
-define('id-handoverPreparation', 0).
-define('maxProtocolIEs', 65535).
-define('maxProtocolExtensions', 65535).
-define('maxPrivateIEs', 65535).
-endif. %% _X2AP_HRL_
