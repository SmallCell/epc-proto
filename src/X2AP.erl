%% Generated by the Erlang ASN.1 PER-compiler version:1.7
%% Purpose: encoder and decoder to the types in mod X2AP

-module('X2AP').
-include("X2AP.hrl").
-define('RT_PER',asn1rt_per_bin).
-asn1_info([{vsn,'1.7'},
            {module,'X2AP'},
            {options,[{i,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,115,114,99]},warnings,ber,errors,{cwd,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111]},{outdir,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,115,114,99]},per,verbose,asn1config,{i,[46]},{i,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,112,114,111,116,111,99,111,108,115]}]}]).

-export([encoding_rule/0]).
-export([
'enc_TriggeringMessage'/1,
'enc_ProtocolIE-ID'/1,
'enc_ProcedureCode'/1,
'enc_PrivateIE-ID'/1,
'enc_Presence'/1,
'enc_Criticality'/1,
'enc_PrivateMessage'/1,
'enc_CellMeasurementResult-Item'/1,
'enc_CellMeasurementResult-List'/1,
'enc_ResourceStatusUpdate'/1,
'enc_ResourceStatusFailure'/1,
'enc_ResourceStatusResponse'/1,
'enc_ReportingPeriodicity'/1,
'enc_CellToReport-Item'/1,
'enc_CellToReport-List'/1,
'enc_ResourceStatusRequest'/1,
'enc_ENBConfigurationUpdateFailure'/1,
'enc_ENBConfigurationUpdateAcknowledge'/1,
'enc_Old-ECGIs'/1,
'enc_ServedCellsToModify-Item'/1,
'enc_ServedCellsToModify'/1,
'enc_ENBConfigurationUpdate'/1,
'enc_CellInformation-Item'/1,
'enc_CellInformation-List'/1,
'enc_LoadInformation'/1,
'enc_X2SetupFailure'/1,
'enc_X2SetupResponse'/1,
'enc_X2SetupRequest'/1,
'enc_ResetResponse'/1,
'enc_ResetRequest'/1,
'enc_ErrorIndication'/1,
'enc_HandoverCancel'/1,
'enc_UEContextRelease'/1,
'enc_E-RABs-SubjectToStatusTransfer-Item'/1,
'enc_E-RABs-SubjectToStatusTransfer-List'/1,
'enc_SNStatusTransfer'/1,
'enc_HandoverPreparationFailure'/1,
'enc_E-RABs-Admitted-Item'/1,
'enc_E-RABs-Admitted-List'/1,
'enc_HandoverRequestAcknowledge'/1,
'enc_E-RABs-ToBeSetup-Item'/1,
'enc_E-RABs-ToBeSetup-List'/1,
'enc_UE-ContextInformation'/1,
'enc_HandoverRequest'/1,
'enc_UL-HighInterferenceIndication'/1,
'enc_UL-HighInterferenceIndicationInfo-Item'/1,
'enc_UL-HighInterferenceIndicationInfo'/1,
'enc_UL-InterferenceOverloadIndication-Item'/1,
'enc_UL-InterferenceOverloadIndication'/1,
'enc_UESecurityCapabilities'/1,
'enc_UEAggregateMaximumBitRate'/1,
'enc_UE-X2AP-ID'/1,
'enc_UE-S1AP-ID'/1,
'enc_UE-HistoryInformation'/1,
'enc_TypeOfError'/1,
'enc_TransportLayerAddress'/1,
'enc_Transmission-Bandwidth'/1,
'enc_TraceDepth'/1,
'enc_TraceCollectionEntityIPAddress'/1,
'enc_TraceActivation'/1,
'enc_Time-UE-StayedInCell'/1,
'enc_TimeToWait'/1,
'enc_TargeteNBtoSource-eNBTransparentContainer'/1,
'enc_TAC'/1,
'enc_SubscriberProfileIDforRFP'/1,
'enc_SpecialSubframePatterns'/1,
'enc_SpecialSubframe-Info'/1,
'enc_SubframeAssignment'/1,
'enc_SRVCCOperationPossible'/1,
'enc_ServedCell-Information'/1,
'enc_ServedCells'/1,
'enc_S1TNLLoadIndicator'/1,
'enc_UL-Total-PRB-usage'/1,
'enc_DL-Total-PRB-usage'/1,
'enc_UL-non-GBR-PRB-usage'/1,
'enc_DL-non-GBR-PRB-usage'/1,
'enc_UL-GBR-PRB-usage'/1,
'enc_DL-GBR-PRB-usage'/1,
'enc_RadioResourceStatus'/1,
'enc_RRC-Context'/1,
'enc_RNTP-Threshold'/1,
'enc_ReportCharacteristics'/1,
'enc_ReportArea'/1,
'enc_RelativeNarrowbandTxPower'/1,
'enc_Registration-Request'/1,
'enc_ReceiveStatusofULPDCPSDUs'/1,
'enc_QCI'/1,
'enc_PriorityLevel'/1,
'enc_Pre-emptionVulnerability'/1,
'enc_Pre-emptionCapability'/1,
'enc_PLMN-Identity'/1,
'enc_PCI'/1,
'enc_PDCP-SN'/1,
'enc_NextHopChainingCount'/1,
'enc_Neighbour-Information'/1,
'enc_Measurement-ID'/1,
'enc_MME-Code'/1,
'enc_MME-Group-ID'/1,
'enc_LocationReportingInformation'/1,
'enc_LoadIndicator'/1,
'enc_LastVisitedGERANCellInformation'/1,
'enc_LastVisitedUTRANCellInformation'/1,
'enc_LastVisitedEUTRANCellInformation'/1,
'enc_LastVisitedCell-Item'/1,
'enc_LAC'/1,
'enc_Key-eNodeB-Star'/1,
'enc_InterfacesToTrace'/1,
'enc_IntegrityProtectionAlgorithms'/1,
'enc_HWLoadIndicator'/1,
'enc_HFN'/1,
'enc_HandoverRestrictionList'/1,
'enc_GUMMEI'/1,
'enc_GU-Group-ID'/1,
'enc_GUGroupIDList'/1,
'enc_GTP-TEI'/1,
'enc_GTPtunnelEndpoint'/1,
'enc_GlobalENB-ID'/1,
'enc_GBR-QosInformation'/1,
'enc_ForbiddenLACs'/1,
'enc_ForbiddenLAs-Item'/1,
'enc_ForbiddenLAs'/1,
'enc_ForbiddenTACs'/1,
'enc_ForbiddenTAs-Item'/1,
'enc_ForbiddenTAs'/1,
'enc_ForbiddenInterRATs'/1,
'enc_EventType'/1,
'enc_EUTRANTraceID'/1,
'enc_EUTRANCellIdentifier'/1,
'enc_E-RAB-Item'/1,
'enc_E-RAB-List'/1,
'enc_E-RAB-Level-QoS-Parameters'/1,
'enc_E-RAB-ID'/1,
'enc_EPLMNs'/1,
'enc_EncryptionAlgorithms'/1,
'enc_ENB-ID'/1,
'enc_ECGI'/1,
'enc_EUTRA-Mode-Info'/1,
'enc_TDD-Info'/1,
'enc_FDD-Info'/1,
'enc_EARFCN'/1,
'enc_DL-Forwarding'/1,
'enc_CyclicPrefixUL'/1,
'enc_CyclicPrefixDL'/1,
'enc_CriticalityDiagnostics-IE-List'/1,
'enc_CriticalityDiagnostics'/1,
'enc_COUNTvalue'/1,
'enc_CellType'/1,
'enc_Cell-Size'/1,
'enc_CauseTransport'/1,
'enc_CauseRadioNetwork'/1,
'enc_CauseProtocol'/1,
'enc_CauseMisc'/1,
'enc_Cause'/1,
'enc_BroadcastPLMNs-Item'/1,
'enc_BitRate'/1,
'enc_AllocationAndRetentionPriority'/1,
'enc_AS-SecurityInformation'/1,
'enc_UnsuccessfulOutcome'/1,
'enc_SuccessfulOutcome'/1,
'enc_InitiatingMessage'/1,
'enc_X2AP-PDU'/1
]).

-export([
'dec_TriggeringMessage'/2,
'dec_ProtocolIE-ID'/2,
'dec_ProcedureCode'/2,
'dec_PrivateIE-ID'/2,
'dec_Presence'/2,
'dec_Criticality'/2,
'dec_PrivateMessage'/2,
'dec_CellMeasurementResult-Item'/2,
'dec_CellMeasurementResult-List'/2,
'dec_ResourceStatusUpdate'/2,
'dec_ResourceStatusFailure'/2,
'dec_ResourceStatusResponse'/2,
'dec_ReportingPeriodicity'/2,
'dec_CellToReport-Item'/2,
'dec_CellToReport-List'/2,
'dec_ResourceStatusRequest'/2,
'dec_ENBConfigurationUpdateFailure'/2,
'dec_ENBConfigurationUpdateAcknowledge'/2,
'dec_Old-ECGIs'/2,
'dec_ServedCellsToModify-Item'/2,
'dec_ServedCellsToModify'/2,
'dec_ENBConfigurationUpdate'/2,
'dec_CellInformation-Item'/2,
'dec_CellInformation-List'/2,
'dec_LoadInformation'/2,
'dec_X2SetupFailure'/2,
'dec_X2SetupResponse'/2,
'dec_X2SetupRequest'/2,
'dec_ResetResponse'/2,
'dec_ResetRequest'/2,
'dec_ErrorIndication'/2,
'dec_HandoverCancel'/2,
'dec_UEContextRelease'/2,
'dec_E-RABs-SubjectToStatusTransfer-Item'/2,
'dec_E-RABs-SubjectToStatusTransfer-List'/2,
'dec_SNStatusTransfer'/2,
'dec_HandoverPreparationFailure'/2,
'dec_E-RABs-Admitted-Item'/2,
'dec_E-RABs-Admitted-List'/2,
'dec_HandoverRequestAcknowledge'/2,
'dec_E-RABs-ToBeSetup-Item'/2,
'dec_E-RABs-ToBeSetup-List'/2,
'dec_UE-ContextInformation'/2,
'dec_HandoverRequest'/2,
'dec_UL-HighInterferenceIndication'/2,
'dec_UL-HighInterferenceIndicationInfo-Item'/2,
'dec_UL-HighInterferenceIndicationInfo'/2,
'dec_UL-InterferenceOverloadIndication-Item'/2,
'dec_UL-InterferenceOverloadIndication'/2,
'dec_UESecurityCapabilities'/2,
'dec_UEAggregateMaximumBitRate'/2,
'dec_UE-X2AP-ID'/2,
'dec_UE-S1AP-ID'/2,
'dec_UE-HistoryInformation'/2,
'dec_TypeOfError'/2,
'dec_TransportLayerAddress'/2,
'dec_Transmission-Bandwidth'/2,
'dec_TraceDepth'/2,
'dec_TraceCollectionEntityIPAddress'/2,
'dec_TraceActivation'/2,
'dec_Time-UE-StayedInCell'/2,
'dec_TimeToWait'/2,
'dec_TargeteNBtoSource-eNBTransparentContainer'/2,
'dec_TAC'/2,
'dec_SubscriberProfileIDforRFP'/2,
'dec_SpecialSubframePatterns'/2,
'dec_SpecialSubframe-Info'/2,
'dec_SubframeAssignment'/2,
'dec_SRVCCOperationPossible'/2,
'dec_ServedCell-Information'/2,
'dec_ServedCells'/2,
'dec_S1TNLLoadIndicator'/2,
'dec_UL-Total-PRB-usage'/2,
'dec_DL-Total-PRB-usage'/2,
'dec_UL-non-GBR-PRB-usage'/2,
'dec_DL-non-GBR-PRB-usage'/2,
'dec_UL-GBR-PRB-usage'/2,
'dec_DL-GBR-PRB-usage'/2,
'dec_RadioResourceStatus'/2,
'dec_RRC-Context'/2,
'dec_RNTP-Threshold'/2,
'dec_ReportCharacteristics'/2,
'dec_ReportArea'/2,
'dec_RelativeNarrowbandTxPower'/2,
'dec_Registration-Request'/2,
'dec_ReceiveStatusofULPDCPSDUs'/2,
'dec_QCI'/2,
'dec_PriorityLevel'/2,
'dec_Pre-emptionVulnerability'/2,
'dec_Pre-emptionCapability'/2,
'dec_PLMN-Identity'/2,
'dec_PCI'/2,
'dec_PDCP-SN'/2,
'dec_NextHopChainingCount'/2,
'dec_Neighbour-Information'/2,
'dec_Measurement-ID'/2,
'dec_MME-Code'/2,
'dec_MME-Group-ID'/2,
'dec_LocationReportingInformation'/2,
'dec_LoadIndicator'/2,
'dec_LastVisitedGERANCellInformation'/2,
'dec_LastVisitedUTRANCellInformation'/2,
'dec_LastVisitedEUTRANCellInformation'/2,
'dec_LastVisitedCell-Item'/2,
'dec_LAC'/2,
'dec_Key-eNodeB-Star'/2,
'dec_InterfacesToTrace'/2,
'dec_IntegrityProtectionAlgorithms'/2,
'dec_HWLoadIndicator'/2,
'dec_HFN'/2,
'dec_HandoverRestrictionList'/2,
'dec_GUMMEI'/2,
'dec_GU-Group-ID'/2,
'dec_GUGroupIDList'/2,
'dec_GTP-TEI'/2,
'dec_GTPtunnelEndpoint'/2,
'dec_GlobalENB-ID'/2,
'dec_GBR-QosInformation'/2,
'dec_ForbiddenLACs'/2,
'dec_ForbiddenLAs-Item'/2,
'dec_ForbiddenLAs'/2,
'dec_ForbiddenTACs'/2,
'dec_ForbiddenTAs-Item'/2,
'dec_ForbiddenTAs'/2,
'dec_ForbiddenInterRATs'/2,
'dec_EventType'/2,
'dec_EUTRANTraceID'/2,
'dec_EUTRANCellIdentifier'/2,
'dec_E-RAB-Item'/2,
'dec_E-RAB-List'/2,
'dec_E-RAB-Level-QoS-Parameters'/2,
'dec_E-RAB-ID'/2,
'dec_EPLMNs'/2,
'dec_EncryptionAlgorithms'/2,
'dec_ENB-ID'/2,
'dec_ECGI'/2,
'dec_EUTRA-Mode-Info'/2,
'dec_TDD-Info'/2,
'dec_FDD-Info'/2,
'dec_EARFCN'/2,
'dec_DL-Forwarding'/2,
'dec_CyclicPrefixUL'/2,
'dec_CyclicPrefixDL'/2,
'dec_CriticalityDiagnostics-IE-List'/2,
'dec_CriticalityDiagnostics'/2,
'dec_COUNTvalue'/2,
'dec_CellType'/2,
'dec_Cell-Size'/2,
'dec_CauseTransport'/2,
'dec_CauseRadioNetwork'/2,
'dec_CauseProtocol'/2,
'dec_CauseMisc'/2,
'dec_Cause'/2,
'dec_BroadcastPLMNs-Item'/2,
'dec_BitRate'/2,
'dec_AllocationAndRetentionPriority'/2,
'dec_AS-SecurityInformation'/2,
'dec_UnsuccessfulOutcome'/2,
'dec_SuccessfulOutcome'/2,
'dec_InitiatingMessage'/2,
'dec_X2AP-PDU'/2
]).

-export([
'id-ENB2-Measurement-ID'/0,
'id-ENB1-Measurement-ID'/0,
'id-ReportCharacteristics'/0,
'id-Measurement-ID'/0,
'id-SRVCCOperationPossible'/0,
'id-GUGroupIDToDeleteList'/0,
'id-GUGroupIDToAddList'/0,
'id-CellMeasurementResult-Item'/0,
'id-CellMeasurementResult'/0,
'id-CellToReport-Item'/0,
'id-ReportingPeriodicity'/0,
'id-CellToReport'/0,
'id-Registration-Request'/0,
'id-ServedCellsToDelete'/0,
'id-ServedCellsToModify'/0,
'id-ServedCellsToAdd'/0,
'id-GUGroupIDList'/0,
'id-GUMMEI-ID'/0,
'id-TimeToWait'/0,
'id-GlobalENB-ID'/0,
'id-ServedCells'/0,
'id-E-RABs-SubjectToStatusTransfer-Item'/0,
'id-E-RABs-SubjectToStatusTransfer-List'/0,
'id-CriticalityDiagnostics'/0,
'id-UE-X2AP-ID'/0,
'id-UE-HistoryInformation'/0,
'id-UE-ContextInformation'/0,
'id-TraceActivation'/0,
'id-TargeteNBtoSource-eNBTransparentContainer'/0,
'id-TargetCell-ID'/0,
'id-Old-eNB-UE-X2AP-ID'/0,
'id-New-eNB-UE-X2AP-ID'/0,
'id-CellInformation-Item'/0,
'id-CellInformation'/0,
'id-Cause'/0,
'id-E-RABs-ToBeSetup-Item'/0,
'id-E-RABs-NotAdmitted-List'/0,
'id-E-RAB-Item'/0,
'id-E-RABs-Admitted-List'/0,
'id-E-RABs-Admitted-Item'/0,
'maxnoofCells'/0,
'maxPools'/0,
'maxnoofPRBs'/0,
'maxnoofNeighbours'/0,
'maxnoofBPLMNs'/0,
'maxnoofForbTACs'/0,
'maxnoofForbLACs'/0,
'maxnoofEPLMNsPlusOne'/0,
'maxnoofEPLMNs'/0,
'maxnoofPDCP-SN'/0,
'maxNrOfErrors'/0,
'maxnoofBearers'/0,
'maxCellineNB'/0,
'maxInterfaces'/0,
'maxEARFCN'/0,
'id-privateMessage'/0,
'id-resourceStatusReporting'/0,
'id-resourceStatusReportingInitiation'/0,
'id-eNBConfigurationUpdate'/0,
'id-reset'/0,
'id-x2Setup'/0,
'id-uEContextRelease'/0,
'id-snStatusTransfer'/0,
'id-errorIndication'/0,
'id-loadIndication'/0,
'id-handoverCancel'/0,
'id-handoverPreparation'/0,
'maxProtocolIEs'/0,
'maxProtocolExtensions'/0,
'maxPrivateIEs'/0
]).

-export([
'enc_privateMessage'/3,
'enc_resourceStatusReporting'/3,
'enc_resourceStatusReportingInitiation'/3,
'enc_eNBConfigurationUpdate'/3,
'enc_loadIndication'/3,
'enc_x2Setup'/3,
'enc_reset'/3,
'enc_errorIndication'/3,
'enc_handoverCancel'/3,
'enc_uEContextRelease'/3,
'enc_snStatusTransfer'/3,
'enc_handoverPreparation'/3
]).

-export([
'dec_privateMessage'/4,
'dec_resourceStatusReporting'/4,
'dec_resourceStatusReportingInitiation'/4,
'dec_eNBConfigurationUpdate'/4,
'dec_loadIndication'/4,
'dec_x2Setup'/4,
'dec_reset'/4,
'dec_errorIndication'/4,
'dec_handoverCancel'/4,
'dec_uEContextRelease'/4,
'dec_snStatusTransfer'/4,
'dec_handoverPreparation'/4
]).

-export([
'getenc_CellMeasurementResult-Item-ExtIEs'/2,
'getenc_CellMeasurementResult-ItemIEs'/2,
'getenc_ResourceStatusUpdate-IEs'/2,
'getenc_ResourceStatusFailure-IEs'/2,
'getenc_ResourceStatusResponse-IEs'/2,
'getenc_CellToReport-Item-ExtIEs'/2,
'getenc_CellToReport-ItemIEs'/2,
'getenc_ResourceStatusRequest-IEs'/2,
'getenc_ENBConfigurationUpdateFailure-IEs'/2,
'getenc_ENBConfigurationUpdateAcknowledge-IEs'/2,
'getenc_ServedCellsToModify-Item-ExtIEs'/2,
'getenc_ENBConfigurationUpdate-IEs'/2,
'getenc_CellInformation-Item-ExtIEs'/2,
'getenc_CellInformation-ItemIEs'/2,
'getenc_LoadInformation-IEs'/2,
'getenc_X2SetupFailure-IEs'/2,
'getenc_X2SetupResponse-IEs'/2,
'getenc_X2SetupRequest-IEs'/2,
'getenc_ResetResponse-IEs'/2,
'getenc_ResetRequest-IEs'/2,
'getenc_ErrorIndication-IEs'/2,
'getenc_HandoverCancel-IEs'/2,
'getenc_UEContextRelease-IEs'/2,
'getenc_E-RABs-SubjectToStatusTransfer-ItemExtIEs'/2,
'getenc_E-RABs-SubjectToStatusTransfer-ItemIEs'/2,
'getenc_SNStatusTransfer-IEs'/2,
'getenc_HandoverPreparationFailure-IEs'/2,
'getenc_E-RABs-Admitted-Item-ExtIEs'/2,
'getenc_E-RABs-Admitted-ItemIEs'/2,
'getenc_HandoverRequestAcknowledge-IEs'/2,
'getenc_E-RABs-ToBeSetup-ItemExtIEs'/2,
'getenc_E-RABs-ToBeSetup-ItemIEs'/2,
'getenc_UE-ContextInformation-ExtIEs'/2,
'getenc_HandoverRequest-IEs'/2,
'getenc_UL-HighInterferenceIndicationInfo-Item-ExtIEs'/2,
'getenc_UESecurityCapabilities-ExtIEs'/2,
'getenc_UEAggregate-MaximumBitrate-ExtIEs'/2,
'getenc_TraceActivation-ExtIEs'/2,
'getenc_SpecialSubframe-Info-ExtIEs'/2,
'getenc_ServedCell-Information-ExtIEs'/2,
'getenc_ServedCell-ExtIEs'/2,
'getenc_S1TNLLoadIndicator-ExtIEs'/2,
'getenc_RadioResourceStatus-ExtIEs'/2,
'getenc_RelativeNarrowbandTxPower-ExtIEs'/2,
'getenc_Neighbour-Information-ExtIEs'/2,
'getenc_LocationReportingInformation-ExtIEs'/2,
'getenc_LastVisitedEUTRANCellInformation-ExtIEs'/2,
'getenc_HWLoadIndicator-ExtIEs'/2,
'getenc_HandoverRestrictionList-ExtIEs'/2,
'getenc_GUMMEI-ExtIEs'/2,
'getenc_GU-Group-ID-ExtIEs'/2,
'getenc_GTPtunnelEndpoint-ExtIEs'/2,
'getenc_GlobalENB-ID-ExtIEs'/2,
'getenc_GBR-QosInformation-ExtIEs'/2,
'getenc_ForbiddenLAs-Item-ExtIEs'/2,
'getenc_ForbiddenTAs-Item-ExtIEs'/2,
'getenc_E-RAB-Item-ExtIEs'/2,
'getenc_E-RAB-ItemIEs'/2,
'getenc_E-RAB-Level-QoS-Parameters-ExtIEs'/2,
'getenc_ECGI-ExtIEs'/2,
'getenc_TDD-Info-ExtIEs'/2,
'getenc_FDD-Info-ExtIEs'/2,
'getenc_CriticalityDiagnostics-IE-List-ExtIEs'/2,
'getenc_CriticalityDiagnostics-ExtIEs'/2,
'getenc_COUNTvalue-ExtIEs'/2,
'getenc_CellType-ExtIEs'/2,
'getenc_AllocationAndRetentionPriority-ExtIEs'/2,
'getenc_AS-SecurityInformation-ExtIEs'/2,
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'/2,
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'/2,
'getenc_X2AP-ELEMENTARY-PROCEDURES'/2,
'getenc_internal_object_set_argument_59'/2,
'getenc_internal_object_set_argument_69'/2,
'getenc_internal_object_set_argument_9'/2,
'getenc_internal_object_set_argument_39'/2,
'getenc_internal_object_set_argument_49'/2,
'getenc_internal_object_set_argument_19'/2,
'getenc_internal_object_set_argument_29'/2,
'getenc_internal_object_set_argument_58'/2,
'getenc_internal_object_set_argument_68'/2,
'getenc_internal_object_set_argument_8'/2,
'getenc_internal_object_set_argument_38'/2,
'getenc_internal_object_set_argument_48'/2,
'getenc_internal_object_set_argument_18'/2,
'getenc_internal_object_set_argument_28'/2,
'getenc_internal_object_set_argument_57'/2,
'getenc_internal_object_set_argument_67'/2,
'getenc_internal_object_set_argument_7'/2,
'getenc_internal_object_set_argument_37'/2,
'getenc_internal_object_set_argument_47'/2,
'getenc_internal_object_set_argument_17'/2,
'getenc_internal_object_set_argument_27'/2,
'getenc_internal_object_set_argument_56'/2,
'getenc_internal_object_set_argument_66'/2,
'getenc_internal_object_set_argument_6'/2,
'getenc_internal_object_set_argument_36'/2,
'getenc_internal_object_set_argument_46'/2,
'getenc_internal_object_set_argument_16'/2,
'getenc_internal_object_set_argument_26'/2,
'getenc_internal_object_set_argument_55'/2,
'getenc_internal_object_set_argument_65'/2,
'getenc_internal_object_set_argument_5'/2,
'getenc_internal_object_set_argument_35'/2,
'getenc_internal_object_set_argument_45'/2,
'getenc_internal_object_set_argument_15'/2,
'getenc_internal_object_set_argument_25'/2,
'getenc_internal_object_set_argument_54'/2,
'getenc_internal_object_set_argument_64'/2,
'getenc_internal_object_set_argument_4'/2,
'getenc_internal_object_set_argument_34'/2,
'getenc_internal_object_set_argument_44'/2,
'getenc_internal_object_set_argument_14'/2,
'getenc_internal_object_set_argument_24'/2,
'getenc_internal_object_set_argument_53'/2,
'getenc_internal_object_set_argument_63'/2,
'getenc_internal_object_set_argument_3'/2,
'getenc_internal_object_set_argument_33'/2,
'getenc_internal_object_set_argument_43'/2,
'getenc_internal_object_set_argument_13'/2,
'getenc_internal_object_set_argument_23'/2,
'getenc_internal_object_set_argument_52'/2,
'getenc_internal_object_set_argument_62'/2,
'getenc_internal_object_set_argument_2'/2,
'getenc_internal_object_set_argument_32'/2,
'getenc_internal_object_set_argument_42'/2,
'getenc_internal_object_set_argument_12'/2,
'getenc_internal_object_set_argument_22'/2,
'getenc_internal_object_set_argument_51'/2,
'getenc_internal_object_set_argument_61'/2,
'getenc_internal_object_set_argument_31'/2,
'getenc_internal_object_set_argument_41'/2,
'getenc_internal_object_set_argument_11'/2,
'getenc_internal_object_set_argument_21'/2,
'getenc_internal_object_set_argument_50'/2,
'getenc_internal_object_set_argument_60'/2,
'getenc_internal_object_set_argument_30'/2,
'getenc_internal_object_set_argument_40'/2,
'getenc_internal_object_set_argument_10'/2,
'getenc_internal_object_set_argument_20'/2
]).

-export([
'getdec_CellMeasurementResult-Item-ExtIEs'/2,
'getdec_CellMeasurementResult-ItemIEs'/2,
'getdec_ResourceStatusUpdate-IEs'/2,
'getdec_ResourceStatusFailure-IEs'/2,
'getdec_ResourceStatusResponse-IEs'/2,
'getdec_CellToReport-Item-ExtIEs'/2,
'getdec_CellToReport-ItemIEs'/2,
'getdec_ResourceStatusRequest-IEs'/2,
'getdec_ENBConfigurationUpdateFailure-IEs'/2,
'getdec_ENBConfigurationUpdateAcknowledge-IEs'/2,
'getdec_ServedCellsToModify-Item-ExtIEs'/2,
'getdec_ENBConfigurationUpdate-IEs'/2,
'getdec_CellInformation-Item-ExtIEs'/2,
'getdec_CellInformation-ItemIEs'/2,
'getdec_LoadInformation-IEs'/2,
'getdec_X2SetupFailure-IEs'/2,
'getdec_X2SetupResponse-IEs'/2,
'getdec_X2SetupRequest-IEs'/2,
'getdec_ResetResponse-IEs'/2,
'getdec_ResetRequest-IEs'/2,
'getdec_ErrorIndication-IEs'/2,
'getdec_HandoverCancel-IEs'/2,
'getdec_UEContextRelease-IEs'/2,
'getdec_E-RABs-SubjectToStatusTransfer-ItemExtIEs'/2,
'getdec_E-RABs-SubjectToStatusTransfer-ItemIEs'/2,
'getdec_SNStatusTransfer-IEs'/2,
'getdec_HandoverPreparationFailure-IEs'/2,
'getdec_E-RABs-Admitted-Item-ExtIEs'/2,
'getdec_E-RABs-Admitted-ItemIEs'/2,
'getdec_HandoverRequestAcknowledge-IEs'/2,
'getdec_E-RABs-ToBeSetup-ItemExtIEs'/2,
'getdec_E-RABs-ToBeSetup-ItemIEs'/2,
'getdec_UE-ContextInformation-ExtIEs'/2,
'getdec_HandoverRequest-IEs'/2,
'getdec_UL-HighInterferenceIndicationInfo-Item-ExtIEs'/2,
'getdec_UESecurityCapabilities-ExtIEs'/2,
'getdec_UEAggregate-MaximumBitrate-ExtIEs'/2,
'getdec_TraceActivation-ExtIEs'/2,
'getdec_SpecialSubframe-Info-ExtIEs'/2,
'getdec_ServedCell-Information-ExtIEs'/2,
'getdec_ServedCell-ExtIEs'/2,
'getdec_S1TNLLoadIndicator-ExtIEs'/2,
'getdec_RadioResourceStatus-ExtIEs'/2,
'getdec_RelativeNarrowbandTxPower-ExtIEs'/2,
'getdec_Neighbour-Information-ExtIEs'/2,
'getdec_LocationReportingInformation-ExtIEs'/2,
'getdec_LastVisitedEUTRANCellInformation-ExtIEs'/2,
'getdec_HWLoadIndicator-ExtIEs'/2,
'getdec_HandoverRestrictionList-ExtIEs'/2,
'getdec_GUMMEI-ExtIEs'/2,
'getdec_GU-Group-ID-ExtIEs'/2,
'getdec_GTPtunnelEndpoint-ExtIEs'/2,
'getdec_GlobalENB-ID-ExtIEs'/2,
'getdec_GBR-QosInformation-ExtIEs'/2,
'getdec_ForbiddenLAs-Item-ExtIEs'/2,
'getdec_ForbiddenTAs-Item-ExtIEs'/2,
'getdec_E-RAB-Item-ExtIEs'/2,
'getdec_E-RAB-ItemIEs'/2,
'getdec_E-RAB-Level-QoS-Parameters-ExtIEs'/2,
'getdec_ECGI-ExtIEs'/2,
'getdec_TDD-Info-ExtIEs'/2,
'getdec_FDD-Info-ExtIEs'/2,
'getdec_CriticalityDiagnostics-IE-List-ExtIEs'/2,
'getdec_CriticalityDiagnostics-ExtIEs'/2,
'getdec_COUNTvalue-ExtIEs'/2,
'getdec_CellType-ExtIEs'/2,
'getdec_AllocationAndRetentionPriority-ExtIEs'/2,
'getdec_AS-SecurityInformation-ExtIEs'/2,
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'/2,
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'/2,
'getdec_X2AP-ELEMENTARY-PROCEDURES'/2,
'getdec_internal_object_set_argument_59'/2,
'getdec_internal_object_set_argument_69'/2,
'getdec_internal_object_set_argument_9'/2,
'getdec_internal_object_set_argument_39'/2,
'getdec_internal_object_set_argument_49'/2,
'getdec_internal_object_set_argument_19'/2,
'getdec_internal_object_set_argument_29'/2,
'getdec_internal_object_set_argument_58'/2,
'getdec_internal_object_set_argument_68'/2,
'getdec_internal_object_set_argument_8'/2,
'getdec_internal_object_set_argument_38'/2,
'getdec_internal_object_set_argument_48'/2,
'getdec_internal_object_set_argument_18'/2,
'getdec_internal_object_set_argument_28'/2,
'getdec_internal_object_set_argument_57'/2,
'getdec_internal_object_set_argument_67'/2,
'getdec_internal_object_set_argument_7'/2,
'getdec_internal_object_set_argument_37'/2,
'getdec_internal_object_set_argument_47'/2,
'getdec_internal_object_set_argument_17'/2,
'getdec_internal_object_set_argument_27'/2,
'getdec_internal_object_set_argument_56'/2,
'getdec_internal_object_set_argument_66'/2,
'getdec_internal_object_set_argument_6'/2,
'getdec_internal_object_set_argument_36'/2,
'getdec_internal_object_set_argument_46'/2,
'getdec_internal_object_set_argument_16'/2,
'getdec_internal_object_set_argument_26'/2,
'getdec_internal_object_set_argument_55'/2,
'getdec_internal_object_set_argument_65'/2,
'getdec_internal_object_set_argument_5'/2,
'getdec_internal_object_set_argument_35'/2,
'getdec_internal_object_set_argument_45'/2,
'getdec_internal_object_set_argument_15'/2,
'getdec_internal_object_set_argument_25'/2,
'getdec_internal_object_set_argument_54'/2,
'getdec_internal_object_set_argument_64'/2,
'getdec_internal_object_set_argument_4'/2,
'getdec_internal_object_set_argument_34'/2,
'getdec_internal_object_set_argument_44'/2,
'getdec_internal_object_set_argument_14'/2,
'getdec_internal_object_set_argument_24'/2,
'getdec_internal_object_set_argument_53'/2,
'getdec_internal_object_set_argument_63'/2,
'getdec_internal_object_set_argument_3'/2,
'getdec_internal_object_set_argument_33'/2,
'getdec_internal_object_set_argument_43'/2,
'getdec_internal_object_set_argument_13'/2,
'getdec_internal_object_set_argument_23'/2,
'getdec_internal_object_set_argument_52'/2,
'getdec_internal_object_set_argument_62'/2,
'getdec_internal_object_set_argument_2'/2,
'getdec_internal_object_set_argument_32'/2,
'getdec_internal_object_set_argument_42'/2,
'getdec_internal_object_set_argument_12'/2,
'getdec_internal_object_set_argument_22'/2,
'getdec_internal_object_set_argument_51'/2,
'getdec_internal_object_set_argument_61'/2,
'getdec_internal_object_set_argument_31'/2,
'getdec_internal_object_set_argument_41'/2,
'getdec_internal_object_set_argument_11'/2,
'getdec_internal_object_set_argument_21'/2,
'getdec_internal_object_set_argument_50'/2,
'getdec_internal_object_set_argument_60'/2,
'getdec_internal_object_set_argument_30'/2,
'getdec_internal_object_set_argument_40'/2,
'getdec_internal_object_set_argument_10'/2,
'getdec_internal_object_set_argument_20'/2
]).

-export([info/0]).


-export([encode/2,decode/2,encode_disp/2,decode_disp/2]).

encoding_rule() ->
   per.

encode(Type,Data) ->
case catch ?RT_PER:complete(encode_disp(Type,Data)) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {Bytes,_Len} ->
    {ok,Bytes};
  Bytes when is_binary(Bytes) ->
    {ok,binary_to_list(Bytes)};
  Bytes ->
    {ok,binary_to_list(list_to_binary(Bytes))}
  end.

decode(Type,Data) ->
case catch decode_disp(Type,list_to_binary(Data)) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {X,_Rest} ->
    {ok,if_binary2list(X)};
  {X,_Rest,_Len} ->
    {ok,if_binary2list(X)}
end.

if_binary2list(B) when is_binary(B) ->
  binary_to_list(B);
if_binary2list(L) -> L.

encode_disp('TriggeringMessage',Data) -> 'enc_TriggeringMessage'(Data);
encode_disp('ProtocolIE-ID',Data) -> 'enc_ProtocolIE-ID'(Data);
encode_disp('ProcedureCode',Data) -> 'enc_ProcedureCode'(Data);
encode_disp('PrivateIE-ID',Data) -> 'enc_PrivateIE-ID'(Data);
encode_disp('Presence',Data) -> 'enc_Presence'(Data);
encode_disp('Criticality',Data) -> 'enc_Criticality'(Data);
encode_disp('PrivateMessage',Data) -> 'enc_PrivateMessage'(Data);
encode_disp('CellMeasurementResult-Item',Data) -> 'enc_CellMeasurementResult-Item'(Data);
encode_disp('CellMeasurementResult-List',Data) -> 'enc_CellMeasurementResult-List'(Data);
encode_disp('ResourceStatusUpdate',Data) -> 'enc_ResourceStatusUpdate'(Data);
encode_disp('ResourceStatusFailure',Data) -> 'enc_ResourceStatusFailure'(Data);
encode_disp('ResourceStatusResponse',Data) -> 'enc_ResourceStatusResponse'(Data);
encode_disp('ReportingPeriodicity',Data) -> 'enc_ReportingPeriodicity'(Data);
encode_disp('CellToReport-Item',Data) -> 'enc_CellToReport-Item'(Data);
encode_disp('CellToReport-List',Data) -> 'enc_CellToReport-List'(Data);
encode_disp('ResourceStatusRequest',Data) -> 'enc_ResourceStatusRequest'(Data);
encode_disp('ENBConfigurationUpdateFailure',Data) -> 'enc_ENBConfigurationUpdateFailure'(Data);
encode_disp('ENBConfigurationUpdateAcknowledge',Data) -> 'enc_ENBConfigurationUpdateAcknowledge'(Data);
encode_disp('Old-ECGIs',Data) -> 'enc_Old-ECGIs'(Data);
encode_disp('ServedCellsToModify-Item',Data) -> 'enc_ServedCellsToModify-Item'(Data);
encode_disp('ServedCellsToModify',Data) -> 'enc_ServedCellsToModify'(Data);
encode_disp('ENBConfigurationUpdate',Data) -> 'enc_ENBConfigurationUpdate'(Data);
encode_disp('CellInformation-Item',Data) -> 'enc_CellInformation-Item'(Data);
encode_disp('CellInformation-List',Data) -> 'enc_CellInformation-List'(Data);
encode_disp('LoadInformation',Data) -> 'enc_LoadInformation'(Data);
encode_disp('X2SetupFailure',Data) -> 'enc_X2SetupFailure'(Data);
encode_disp('X2SetupResponse',Data) -> 'enc_X2SetupResponse'(Data);
encode_disp('X2SetupRequest',Data) -> 'enc_X2SetupRequest'(Data);
encode_disp('ResetResponse',Data) -> 'enc_ResetResponse'(Data);
encode_disp('ResetRequest',Data) -> 'enc_ResetRequest'(Data);
encode_disp('ErrorIndication',Data) -> 'enc_ErrorIndication'(Data);
encode_disp('HandoverCancel',Data) -> 'enc_HandoverCancel'(Data);
encode_disp('UEContextRelease',Data) -> 'enc_UEContextRelease'(Data);
encode_disp('E-RABs-SubjectToStatusTransfer-Item',Data) -> 'enc_E-RABs-SubjectToStatusTransfer-Item'(Data);
encode_disp('E-RABs-SubjectToStatusTransfer-List',Data) -> 'enc_E-RABs-SubjectToStatusTransfer-List'(Data);
encode_disp('SNStatusTransfer',Data) -> 'enc_SNStatusTransfer'(Data);
encode_disp('HandoverPreparationFailure',Data) -> 'enc_HandoverPreparationFailure'(Data);
encode_disp('E-RABs-Admitted-Item',Data) -> 'enc_E-RABs-Admitted-Item'(Data);
encode_disp('E-RABs-Admitted-List',Data) -> 'enc_E-RABs-Admitted-List'(Data);
encode_disp('HandoverRequestAcknowledge',Data) -> 'enc_HandoverRequestAcknowledge'(Data);
encode_disp('E-RABs-ToBeSetup-Item',Data) -> 'enc_E-RABs-ToBeSetup-Item'(Data);
encode_disp('E-RABs-ToBeSetup-List',Data) -> 'enc_E-RABs-ToBeSetup-List'(Data);
encode_disp('UE-ContextInformation',Data) -> 'enc_UE-ContextInformation'(Data);
encode_disp('HandoverRequest',Data) -> 'enc_HandoverRequest'(Data);
encode_disp('UL-HighInterferenceIndication',Data) -> 'enc_UL-HighInterferenceIndication'(Data);
encode_disp('UL-HighInterferenceIndicationInfo-Item',Data) -> 'enc_UL-HighInterferenceIndicationInfo-Item'(Data);
encode_disp('UL-HighInterferenceIndicationInfo',Data) -> 'enc_UL-HighInterferenceIndicationInfo'(Data);
encode_disp('UL-InterferenceOverloadIndication-Item',Data) -> 'enc_UL-InterferenceOverloadIndication-Item'(Data);
encode_disp('UL-InterferenceOverloadIndication',Data) -> 'enc_UL-InterferenceOverloadIndication'(Data);
encode_disp('UESecurityCapabilities',Data) -> 'enc_UESecurityCapabilities'(Data);
encode_disp('UEAggregateMaximumBitRate',Data) -> 'enc_UEAggregateMaximumBitRate'(Data);
encode_disp('UE-X2AP-ID',Data) -> 'enc_UE-X2AP-ID'(Data);
encode_disp('UE-S1AP-ID',Data) -> 'enc_UE-S1AP-ID'(Data);
encode_disp('UE-HistoryInformation',Data) -> 'enc_UE-HistoryInformation'(Data);
encode_disp('TypeOfError',Data) -> 'enc_TypeOfError'(Data);
encode_disp('TransportLayerAddress',Data) -> 'enc_TransportLayerAddress'(Data);
encode_disp('Transmission-Bandwidth',Data) -> 'enc_Transmission-Bandwidth'(Data);
encode_disp('TraceDepth',Data) -> 'enc_TraceDepth'(Data);
encode_disp('TraceCollectionEntityIPAddress',Data) -> 'enc_TraceCollectionEntityIPAddress'(Data);
encode_disp('TraceActivation',Data) -> 'enc_TraceActivation'(Data);
encode_disp('Time-UE-StayedInCell',Data) -> 'enc_Time-UE-StayedInCell'(Data);
encode_disp('TimeToWait',Data) -> 'enc_TimeToWait'(Data);
encode_disp('TargeteNBtoSource-eNBTransparentContainer',Data) -> 'enc_TargeteNBtoSource-eNBTransparentContainer'(Data);
encode_disp('TAC',Data) -> 'enc_TAC'(Data);
encode_disp('SubscriberProfileIDforRFP',Data) -> 'enc_SubscriberProfileIDforRFP'(Data);
encode_disp('SpecialSubframePatterns',Data) -> 'enc_SpecialSubframePatterns'(Data);
encode_disp('SpecialSubframe-Info',Data) -> 'enc_SpecialSubframe-Info'(Data);
encode_disp('SubframeAssignment',Data) -> 'enc_SubframeAssignment'(Data);
encode_disp('SRVCCOperationPossible',Data) -> 'enc_SRVCCOperationPossible'(Data);
encode_disp('ServedCell-Information',Data) -> 'enc_ServedCell-Information'(Data);
encode_disp('ServedCells',Data) -> 'enc_ServedCells'(Data);
encode_disp('S1TNLLoadIndicator',Data) -> 'enc_S1TNLLoadIndicator'(Data);
encode_disp('UL-Total-PRB-usage',Data) -> 'enc_UL-Total-PRB-usage'(Data);
encode_disp('DL-Total-PRB-usage',Data) -> 'enc_DL-Total-PRB-usage'(Data);
encode_disp('UL-non-GBR-PRB-usage',Data) -> 'enc_UL-non-GBR-PRB-usage'(Data);
encode_disp('DL-non-GBR-PRB-usage',Data) -> 'enc_DL-non-GBR-PRB-usage'(Data);
encode_disp('UL-GBR-PRB-usage',Data) -> 'enc_UL-GBR-PRB-usage'(Data);
encode_disp('DL-GBR-PRB-usage',Data) -> 'enc_DL-GBR-PRB-usage'(Data);
encode_disp('RadioResourceStatus',Data) -> 'enc_RadioResourceStatus'(Data);
encode_disp('RRC-Context',Data) -> 'enc_RRC-Context'(Data);
encode_disp('RNTP-Threshold',Data) -> 'enc_RNTP-Threshold'(Data);
encode_disp('ReportCharacteristics',Data) -> 'enc_ReportCharacteristics'(Data);
encode_disp('ReportArea',Data) -> 'enc_ReportArea'(Data);
encode_disp('RelativeNarrowbandTxPower',Data) -> 'enc_RelativeNarrowbandTxPower'(Data);
encode_disp('Registration-Request',Data) -> 'enc_Registration-Request'(Data);
encode_disp('ReceiveStatusofULPDCPSDUs',Data) -> 'enc_ReceiveStatusofULPDCPSDUs'(Data);
encode_disp('QCI',Data) -> 'enc_QCI'(Data);
encode_disp('PriorityLevel',Data) -> 'enc_PriorityLevel'(Data);
encode_disp('Pre-emptionVulnerability',Data) -> 'enc_Pre-emptionVulnerability'(Data);
encode_disp('Pre-emptionCapability',Data) -> 'enc_Pre-emptionCapability'(Data);
encode_disp('PLMN-Identity',Data) -> 'enc_PLMN-Identity'(Data);
encode_disp('PCI',Data) -> 'enc_PCI'(Data);
encode_disp('PDCP-SN',Data) -> 'enc_PDCP-SN'(Data);
encode_disp('NextHopChainingCount',Data) -> 'enc_NextHopChainingCount'(Data);
encode_disp('Neighbour-Information',Data) -> 'enc_Neighbour-Information'(Data);
encode_disp('Measurement-ID',Data) -> 'enc_Measurement-ID'(Data);
encode_disp('MME-Code',Data) -> 'enc_MME-Code'(Data);
encode_disp('MME-Group-ID',Data) -> 'enc_MME-Group-ID'(Data);
encode_disp('LocationReportingInformation',Data) -> 'enc_LocationReportingInformation'(Data);
encode_disp('LoadIndicator',Data) -> 'enc_LoadIndicator'(Data);
encode_disp('LastVisitedGERANCellInformation',Data) -> 'enc_LastVisitedGERANCellInformation'(Data);
encode_disp('LastVisitedUTRANCellInformation',Data) -> 'enc_LastVisitedUTRANCellInformation'(Data);
encode_disp('LastVisitedEUTRANCellInformation',Data) -> 'enc_LastVisitedEUTRANCellInformation'(Data);
encode_disp('LastVisitedCell-Item',Data) -> 'enc_LastVisitedCell-Item'(Data);
encode_disp('LAC',Data) -> 'enc_LAC'(Data);
encode_disp('Key-eNodeB-Star',Data) -> 'enc_Key-eNodeB-Star'(Data);
encode_disp('InterfacesToTrace',Data) -> 'enc_InterfacesToTrace'(Data);
encode_disp('IntegrityProtectionAlgorithms',Data) -> 'enc_IntegrityProtectionAlgorithms'(Data);
encode_disp('HWLoadIndicator',Data) -> 'enc_HWLoadIndicator'(Data);
encode_disp('HFN',Data) -> 'enc_HFN'(Data);
encode_disp('HandoverRestrictionList',Data) -> 'enc_HandoverRestrictionList'(Data);
encode_disp('GUMMEI',Data) -> 'enc_GUMMEI'(Data);
encode_disp('GU-Group-ID',Data) -> 'enc_GU-Group-ID'(Data);
encode_disp('GUGroupIDList',Data) -> 'enc_GUGroupIDList'(Data);
encode_disp('GTP-TEI',Data) -> 'enc_GTP-TEI'(Data);
encode_disp('GTPtunnelEndpoint',Data) -> 'enc_GTPtunnelEndpoint'(Data);
encode_disp('GlobalENB-ID',Data) -> 'enc_GlobalENB-ID'(Data);
encode_disp('GBR-QosInformation',Data) -> 'enc_GBR-QosInformation'(Data);
encode_disp('ForbiddenLACs',Data) -> 'enc_ForbiddenLACs'(Data);
encode_disp('ForbiddenLAs-Item',Data) -> 'enc_ForbiddenLAs-Item'(Data);
encode_disp('ForbiddenLAs',Data) -> 'enc_ForbiddenLAs'(Data);
encode_disp('ForbiddenTACs',Data) -> 'enc_ForbiddenTACs'(Data);
encode_disp('ForbiddenTAs-Item',Data) -> 'enc_ForbiddenTAs-Item'(Data);
encode_disp('ForbiddenTAs',Data) -> 'enc_ForbiddenTAs'(Data);
encode_disp('ForbiddenInterRATs',Data) -> 'enc_ForbiddenInterRATs'(Data);
encode_disp('EventType',Data) -> 'enc_EventType'(Data);
encode_disp('EUTRANTraceID',Data) -> 'enc_EUTRANTraceID'(Data);
encode_disp('EUTRANCellIdentifier',Data) -> 'enc_EUTRANCellIdentifier'(Data);
encode_disp('E-RAB-Item',Data) -> 'enc_E-RAB-Item'(Data);
encode_disp('E-RAB-List',Data) -> 'enc_E-RAB-List'(Data);
encode_disp('E-RAB-Level-QoS-Parameters',Data) -> 'enc_E-RAB-Level-QoS-Parameters'(Data);
encode_disp('E-RAB-ID',Data) -> 'enc_E-RAB-ID'(Data);
encode_disp('EPLMNs',Data) -> 'enc_EPLMNs'(Data);
encode_disp('EncryptionAlgorithms',Data) -> 'enc_EncryptionAlgorithms'(Data);
encode_disp('ENB-ID',Data) -> 'enc_ENB-ID'(Data);
encode_disp('ECGI',Data) -> 'enc_ECGI'(Data);
encode_disp('EUTRA-Mode-Info',Data) -> 'enc_EUTRA-Mode-Info'(Data);
encode_disp('TDD-Info',Data) -> 'enc_TDD-Info'(Data);
encode_disp('FDD-Info',Data) -> 'enc_FDD-Info'(Data);
encode_disp('EARFCN',Data) -> 'enc_EARFCN'(Data);
encode_disp('DL-Forwarding',Data) -> 'enc_DL-Forwarding'(Data);
encode_disp('CyclicPrefixUL',Data) -> 'enc_CyclicPrefixUL'(Data);
encode_disp('CyclicPrefixDL',Data) -> 'enc_CyclicPrefixDL'(Data);
encode_disp('CriticalityDiagnostics-IE-List',Data) -> 'enc_CriticalityDiagnostics-IE-List'(Data);
encode_disp('CriticalityDiagnostics',Data) -> 'enc_CriticalityDiagnostics'(Data);
encode_disp('COUNTvalue',Data) -> 'enc_COUNTvalue'(Data);
encode_disp('CellType',Data) -> 'enc_CellType'(Data);
encode_disp('Cell-Size',Data) -> 'enc_Cell-Size'(Data);
encode_disp('CauseTransport',Data) -> 'enc_CauseTransport'(Data);
encode_disp('CauseRadioNetwork',Data) -> 'enc_CauseRadioNetwork'(Data);
encode_disp('CauseProtocol',Data) -> 'enc_CauseProtocol'(Data);
encode_disp('CauseMisc',Data) -> 'enc_CauseMisc'(Data);
encode_disp('Cause',Data) -> 'enc_Cause'(Data);
encode_disp('BroadcastPLMNs-Item',Data) -> 'enc_BroadcastPLMNs-Item'(Data);
encode_disp('BitRate',Data) -> 'enc_BitRate'(Data);
encode_disp('AllocationAndRetentionPriority',Data) -> 'enc_AllocationAndRetentionPriority'(Data);
encode_disp('AS-SecurityInformation',Data) -> 'enc_AS-SecurityInformation'(Data);
encode_disp('UnsuccessfulOutcome',Data) -> 'enc_UnsuccessfulOutcome'(Data);
encode_disp('SuccessfulOutcome',Data) -> 'enc_SuccessfulOutcome'(Data);
encode_disp('InitiatingMessage',Data) -> 'enc_InitiatingMessage'(Data);
encode_disp('X2AP-PDU',Data) -> 'enc_X2AP-PDU'(Data);
encode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).


decode_disp('TriggeringMessage',Data) -> 'dec_TriggeringMessage'(Data,mandatory);
decode_disp('ProtocolIE-ID',Data) -> 'dec_ProtocolIE-ID'(Data,mandatory);
decode_disp('ProcedureCode',Data) -> 'dec_ProcedureCode'(Data,mandatory);
decode_disp('PrivateIE-ID',Data) -> 'dec_PrivateIE-ID'(Data,mandatory);
decode_disp('Presence',Data) -> 'dec_Presence'(Data,mandatory);
decode_disp('Criticality',Data) -> 'dec_Criticality'(Data,mandatory);
decode_disp('PrivateMessage',Data) -> 'dec_PrivateMessage'(Data,mandatory);
decode_disp('CellMeasurementResult-Item',Data) -> 'dec_CellMeasurementResult-Item'(Data,mandatory);
decode_disp('CellMeasurementResult-List',Data) -> 'dec_CellMeasurementResult-List'(Data,mandatory);
decode_disp('ResourceStatusUpdate',Data) -> 'dec_ResourceStatusUpdate'(Data,mandatory);
decode_disp('ResourceStatusFailure',Data) -> 'dec_ResourceStatusFailure'(Data,mandatory);
decode_disp('ResourceStatusResponse',Data) -> 'dec_ResourceStatusResponse'(Data,mandatory);
decode_disp('ReportingPeriodicity',Data) -> 'dec_ReportingPeriodicity'(Data,mandatory);
decode_disp('CellToReport-Item',Data) -> 'dec_CellToReport-Item'(Data,mandatory);
decode_disp('CellToReport-List',Data) -> 'dec_CellToReport-List'(Data,mandatory);
decode_disp('ResourceStatusRequest',Data) -> 'dec_ResourceStatusRequest'(Data,mandatory);
decode_disp('ENBConfigurationUpdateFailure',Data) -> 'dec_ENBConfigurationUpdateFailure'(Data,mandatory);
decode_disp('ENBConfigurationUpdateAcknowledge',Data) -> 'dec_ENBConfigurationUpdateAcknowledge'(Data,mandatory);
decode_disp('Old-ECGIs',Data) -> 'dec_Old-ECGIs'(Data,mandatory);
decode_disp('ServedCellsToModify-Item',Data) -> 'dec_ServedCellsToModify-Item'(Data,mandatory);
decode_disp('ServedCellsToModify',Data) -> 'dec_ServedCellsToModify'(Data,mandatory);
decode_disp('ENBConfigurationUpdate',Data) -> 'dec_ENBConfigurationUpdate'(Data,mandatory);
decode_disp('CellInformation-Item',Data) -> 'dec_CellInformation-Item'(Data,mandatory);
decode_disp('CellInformation-List',Data) -> 'dec_CellInformation-List'(Data,mandatory);
decode_disp('LoadInformation',Data) -> 'dec_LoadInformation'(Data,mandatory);
decode_disp('X2SetupFailure',Data) -> 'dec_X2SetupFailure'(Data,mandatory);
decode_disp('X2SetupResponse',Data) -> 'dec_X2SetupResponse'(Data,mandatory);
decode_disp('X2SetupRequest',Data) -> 'dec_X2SetupRequest'(Data,mandatory);
decode_disp('ResetResponse',Data) -> 'dec_ResetResponse'(Data,mandatory);
decode_disp('ResetRequest',Data) -> 'dec_ResetRequest'(Data,mandatory);
decode_disp('ErrorIndication',Data) -> 'dec_ErrorIndication'(Data,mandatory);
decode_disp('HandoverCancel',Data) -> 'dec_HandoverCancel'(Data,mandatory);
decode_disp('UEContextRelease',Data) -> 'dec_UEContextRelease'(Data,mandatory);
decode_disp('E-RABs-SubjectToStatusTransfer-Item',Data) -> 'dec_E-RABs-SubjectToStatusTransfer-Item'(Data,mandatory);
decode_disp('E-RABs-SubjectToStatusTransfer-List',Data) -> 'dec_E-RABs-SubjectToStatusTransfer-List'(Data,mandatory);
decode_disp('SNStatusTransfer',Data) -> 'dec_SNStatusTransfer'(Data,mandatory);
decode_disp('HandoverPreparationFailure',Data) -> 'dec_HandoverPreparationFailure'(Data,mandatory);
decode_disp('E-RABs-Admitted-Item',Data) -> 'dec_E-RABs-Admitted-Item'(Data,mandatory);
decode_disp('E-RABs-Admitted-List',Data) -> 'dec_E-RABs-Admitted-List'(Data,mandatory);
decode_disp('HandoverRequestAcknowledge',Data) -> 'dec_HandoverRequestAcknowledge'(Data,mandatory);
decode_disp('E-RABs-ToBeSetup-Item',Data) -> 'dec_E-RABs-ToBeSetup-Item'(Data,mandatory);
decode_disp('E-RABs-ToBeSetup-List',Data) -> 'dec_E-RABs-ToBeSetup-List'(Data,mandatory);
decode_disp('UE-ContextInformation',Data) -> 'dec_UE-ContextInformation'(Data,mandatory);
decode_disp('HandoverRequest',Data) -> 'dec_HandoverRequest'(Data,mandatory);
decode_disp('UL-HighInterferenceIndication',Data) -> 'dec_UL-HighInterferenceIndication'(Data,mandatory);
decode_disp('UL-HighInterferenceIndicationInfo-Item',Data) -> 'dec_UL-HighInterferenceIndicationInfo-Item'(Data,mandatory);
decode_disp('UL-HighInterferenceIndicationInfo',Data) -> 'dec_UL-HighInterferenceIndicationInfo'(Data,mandatory);
decode_disp('UL-InterferenceOverloadIndication-Item',Data) -> 'dec_UL-InterferenceOverloadIndication-Item'(Data,mandatory);
decode_disp('UL-InterferenceOverloadIndication',Data) -> 'dec_UL-InterferenceOverloadIndication'(Data,mandatory);
decode_disp('UESecurityCapabilities',Data) -> 'dec_UESecurityCapabilities'(Data,mandatory);
decode_disp('UEAggregateMaximumBitRate',Data) -> 'dec_UEAggregateMaximumBitRate'(Data,mandatory);
decode_disp('UE-X2AP-ID',Data) -> 'dec_UE-X2AP-ID'(Data,mandatory);
decode_disp('UE-S1AP-ID',Data) -> 'dec_UE-S1AP-ID'(Data,mandatory);
decode_disp('UE-HistoryInformation',Data) -> 'dec_UE-HistoryInformation'(Data,mandatory);
decode_disp('TypeOfError',Data) -> 'dec_TypeOfError'(Data,mandatory);
decode_disp('TransportLayerAddress',Data) -> 'dec_TransportLayerAddress'(Data,mandatory);
decode_disp('Transmission-Bandwidth',Data) -> 'dec_Transmission-Bandwidth'(Data,mandatory);
decode_disp('TraceDepth',Data) -> 'dec_TraceDepth'(Data,mandatory);
decode_disp('TraceCollectionEntityIPAddress',Data) -> 'dec_TraceCollectionEntityIPAddress'(Data,mandatory);
decode_disp('TraceActivation',Data) -> 'dec_TraceActivation'(Data,mandatory);
decode_disp('Time-UE-StayedInCell',Data) -> 'dec_Time-UE-StayedInCell'(Data,mandatory);
decode_disp('TimeToWait',Data) -> 'dec_TimeToWait'(Data,mandatory);
decode_disp('TargeteNBtoSource-eNBTransparentContainer',Data) -> 'dec_TargeteNBtoSource-eNBTransparentContainer'(Data,mandatory);
decode_disp('TAC',Data) -> 'dec_TAC'(Data,mandatory);
decode_disp('SubscriberProfileIDforRFP',Data) -> 'dec_SubscriberProfileIDforRFP'(Data,mandatory);
decode_disp('SpecialSubframePatterns',Data) -> 'dec_SpecialSubframePatterns'(Data,mandatory);
decode_disp('SpecialSubframe-Info',Data) -> 'dec_SpecialSubframe-Info'(Data,mandatory);
decode_disp('SubframeAssignment',Data) -> 'dec_SubframeAssignment'(Data,mandatory);
decode_disp('SRVCCOperationPossible',Data) -> 'dec_SRVCCOperationPossible'(Data,mandatory);
decode_disp('ServedCell-Information',Data) -> 'dec_ServedCell-Information'(Data,mandatory);
decode_disp('ServedCells',Data) -> 'dec_ServedCells'(Data,mandatory);
decode_disp('S1TNLLoadIndicator',Data) -> 'dec_S1TNLLoadIndicator'(Data,mandatory);
decode_disp('UL-Total-PRB-usage',Data) -> 'dec_UL-Total-PRB-usage'(Data,mandatory);
decode_disp('DL-Total-PRB-usage',Data) -> 'dec_DL-Total-PRB-usage'(Data,mandatory);
decode_disp('UL-non-GBR-PRB-usage',Data) -> 'dec_UL-non-GBR-PRB-usage'(Data,mandatory);
decode_disp('DL-non-GBR-PRB-usage',Data) -> 'dec_DL-non-GBR-PRB-usage'(Data,mandatory);
decode_disp('UL-GBR-PRB-usage',Data) -> 'dec_UL-GBR-PRB-usage'(Data,mandatory);
decode_disp('DL-GBR-PRB-usage',Data) -> 'dec_DL-GBR-PRB-usage'(Data,mandatory);
decode_disp('RadioResourceStatus',Data) -> 'dec_RadioResourceStatus'(Data,mandatory);
decode_disp('RRC-Context',Data) -> 'dec_RRC-Context'(Data,mandatory);
decode_disp('RNTP-Threshold',Data) -> 'dec_RNTP-Threshold'(Data,mandatory);
decode_disp('ReportCharacteristics',Data) -> 'dec_ReportCharacteristics'(Data,mandatory);
decode_disp('ReportArea',Data) -> 'dec_ReportArea'(Data,mandatory);
decode_disp('RelativeNarrowbandTxPower',Data) -> 'dec_RelativeNarrowbandTxPower'(Data,mandatory);
decode_disp('Registration-Request',Data) -> 'dec_Registration-Request'(Data,mandatory);
decode_disp('ReceiveStatusofULPDCPSDUs',Data) -> 'dec_ReceiveStatusofULPDCPSDUs'(Data,mandatory);
decode_disp('QCI',Data) -> 'dec_QCI'(Data,mandatory);
decode_disp('PriorityLevel',Data) -> 'dec_PriorityLevel'(Data,mandatory);
decode_disp('Pre-emptionVulnerability',Data) -> 'dec_Pre-emptionVulnerability'(Data,mandatory);
decode_disp('Pre-emptionCapability',Data) -> 'dec_Pre-emptionCapability'(Data,mandatory);
decode_disp('PLMN-Identity',Data) -> 'dec_PLMN-Identity'(Data,mandatory);
decode_disp('PCI',Data) -> 'dec_PCI'(Data,mandatory);
decode_disp('PDCP-SN',Data) -> 'dec_PDCP-SN'(Data,mandatory);
decode_disp('NextHopChainingCount',Data) -> 'dec_NextHopChainingCount'(Data,mandatory);
decode_disp('Neighbour-Information',Data) -> 'dec_Neighbour-Information'(Data,mandatory);
decode_disp('Measurement-ID',Data) -> 'dec_Measurement-ID'(Data,mandatory);
decode_disp('MME-Code',Data) -> 'dec_MME-Code'(Data,mandatory);
decode_disp('MME-Group-ID',Data) -> 'dec_MME-Group-ID'(Data,mandatory);
decode_disp('LocationReportingInformation',Data) -> 'dec_LocationReportingInformation'(Data,mandatory);
decode_disp('LoadIndicator',Data) -> 'dec_LoadIndicator'(Data,mandatory);
decode_disp('LastVisitedGERANCellInformation',Data) -> 'dec_LastVisitedGERANCellInformation'(Data,mandatory);
decode_disp('LastVisitedUTRANCellInformation',Data) -> 'dec_LastVisitedUTRANCellInformation'(Data,mandatory);
decode_disp('LastVisitedEUTRANCellInformation',Data) -> 'dec_LastVisitedEUTRANCellInformation'(Data,mandatory);
decode_disp('LastVisitedCell-Item',Data) -> 'dec_LastVisitedCell-Item'(Data,mandatory);
decode_disp('LAC',Data) -> 'dec_LAC'(Data,mandatory);
decode_disp('Key-eNodeB-Star',Data) -> 'dec_Key-eNodeB-Star'(Data,mandatory);
decode_disp('InterfacesToTrace',Data) -> 'dec_InterfacesToTrace'(Data,mandatory);
decode_disp('IntegrityProtectionAlgorithms',Data) -> 'dec_IntegrityProtectionAlgorithms'(Data,mandatory);
decode_disp('HWLoadIndicator',Data) -> 'dec_HWLoadIndicator'(Data,mandatory);
decode_disp('HFN',Data) -> 'dec_HFN'(Data,mandatory);
decode_disp('HandoverRestrictionList',Data) -> 'dec_HandoverRestrictionList'(Data,mandatory);
decode_disp('GUMMEI',Data) -> 'dec_GUMMEI'(Data,mandatory);
decode_disp('GU-Group-ID',Data) -> 'dec_GU-Group-ID'(Data,mandatory);
decode_disp('GUGroupIDList',Data) -> 'dec_GUGroupIDList'(Data,mandatory);
decode_disp('GTP-TEI',Data) -> 'dec_GTP-TEI'(Data,mandatory);
decode_disp('GTPtunnelEndpoint',Data) -> 'dec_GTPtunnelEndpoint'(Data,mandatory);
decode_disp('GlobalENB-ID',Data) -> 'dec_GlobalENB-ID'(Data,mandatory);
decode_disp('GBR-QosInformation',Data) -> 'dec_GBR-QosInformation'(Data,mandatory);
decode_disp('ForbiddenLACs',Data) -> 'dec_ForbiddenLACs'(Data,mandatory);
decode_disp('ForbiddenLAs-Item',Data) -> 'dec_ForbiddenLAs-Item'(Data,mandatory);
decode_disp('ForbiddenLAs',Data) -> 'dec_ForbiddenLAs'(Data,mandatory);
decode_disp('ForbiddenTACs',Data) -> 'dec_ForbiddenTACs'(Data,mandatory);
decode_disp('ForbiddenTAs-Item',Data) -> 'dec_ForbiddenTAs-Item'(Data,mandatory);
decode_disp('ForbiddenTAs',Data) -> 'dec_ForbiddenTAs'(Data,mandatory);
decode_disp('ForbiddenInterRATs',Data) -> 'dec_ForbiddenInterRATs'(Data,mandatory);
decode_disp('EventType',Data) -> 'dec_EventType'(Data,mandatory);
decode_disp('EUTRANTraceID',Data) -> 'dec_EUTRANTraceID'(Data,mandatory);
decode_disp('EUTRANCellIdentifier',Data) -> 'dec_EUTRANCellIdentifier'(Data,mandatory);
decode_disp('E-RAB-Item',Data) -> 'dec_E-RAB-Item'(Data,mandatory);
decode_disp('E-RAB-List',Data) -> 'dec_E-RAB-List'(Data,mandatory);
decode_disp('E-RAB-Level-QoS-Parameters',Data) -> 'dec_E-RAB-Level-QoS-Parameters'(Data,mandatory);
decode_disp('E-RAB-ID',Data) -> 'dec_E-RAB-ID'(Data,mandatory);
decode_disp('EPLMNs',Data) -> 'dec_EPLMNs'(Data,mandatory);
decode_disp('EncryptionAlgorithms',Data) -> 'dec_EncryptionAlgorithms'(Data,mandatory);
decode_disp('ENB-ID',Data) -> 'dec_ENB-ID'(Data,mandatory);
decode_disp('ECGI',Data) -> 'dec_ECGI'(Data,mandatory);
decode_disp('EUTRA-Mode-Info',Data) -> 'dec_EUTRA-Mode-Info'(Data,mandatory);
decode_disp('TDD-Info',Data) -> 'dec_TDD-Info'(Data,mandatory);
decode_disp('FDD-Info',Data) -> 'dec_FDD-Info'(Data,mandatory);
decode_disp('EARFCN',Data) -> 'dec_EARFCN'(Data,mandatory);
decode_disp('DL-Forwarding',Data) -> 'dec_DL-Forwarding'(Data,mandatory);
decode_disp('CyclicPrefixUL',Data) -> 'dec_CyclicPrefixUL'(Data,mandatory);
decode_disp('CyclicPrefixDL',Data) -> 'dec_CyclicPrefixDL'(Data,mandatory);
decode_disp('CriticalityDiagnostics-IE-List',Data) -> 'dec_CriticalityDiagnostics-IE-List'(Data,mandatory);
decode_disp('CriticalityDiagnostics',Data) -> 'dec_CriticalityDiagnostics'(Data,mandatory);
decode_disp('COUNTvalue',Data) -> 'dec_COUNTvalue'(Data,mandatory);
decode_disp('CellType',Data) -> 'dec_CellType'(Data,mandatory);
decode_disp('Cell-Size',Data) -> 'dec_Cell-Size'(Data,mandatory);
decode_disp('CauseTransport',Data) -> 'dec_CauseTransport'(Data,mandatory);
decode_disp('CauseRadioNetwork',Data) -> 'dec_CauseRadioNetwork'(Data,mandatory);
decode_disp('CauseProtocol',Data) -> 'dec_CauseProtocol'(Data,mandatory);
decode_disp('CauseMisc',Data) -> 'dec_CauseMisc'(Data,mandatory);
decode_disp('Cause',Data) -> 'dec_Cause'(Data,mandatory);
decode_disp('BroadcastPLMNs-Item',Data) -> 'dec_BroadcastPLMNs-Item'(Data,mandatory);
decode_disp('BitRate',Data) -> 'dec_BitRate'(Data,mandatory);
decode_disp('AllocationAndRetentionPriority',Data) -> 'dec_AllocationAndRetentionPriority'(Data,mandatory);
decode_disp('AS-SecurityInformation',Data) -> 'dec_AS-SecurityInformation'(Data,mandatory);
decode_disp('UnsuccessfulOutcome',Data) -> 'dec_UnsuccessfulOutcome'(Data,mandatory);
decode_disp('SuccessfulOutcome',Data) -> 'dec_SuccessfulOutcome'(Data,mandatory);
decode_disp('InitiatingMessage',Data) -> 'dec_InitiatingMessage'(Data,mandatory);
decode_disp('X2AP-PDU',Data) -> 'dec_X2AP-PDU'(Data,mandatory);
decode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).





info() ->
   case ?MODULE:module_info() of
      MI when is_list(MI) ->
         case lists:keysearch(attributes,1,MI) of
            {value,{_,Attributes}} when is_list(Attributes) ->
               case lists:keysearch(asn1_info,1,Attributes) of
                  {value,{_,Info}} when is_list(Info) ->
                     Info;
                  _ ->
                     []
               end;
            _ ->
               []
         end
   end.

'enc_TriggeringMessage'({'TriggeringMessage',Val}) ->
'enc_TriggeringMessage'(Val);

'enc_TriggeringMessage'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'initiating-message' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'successful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'unsuccessful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TriggeringMessage'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{'initiating-message','successful-outcome','unsuccessful-outcome'}).


'enc_ProtocolIE-ID'({'ProtocolIE-ID',Val}) ->
'enc_ProtocolIE-ID'(Val);

'enc_ProtocolIE-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_ProtocolIE-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_ProcedureCode'({'ProcedureCode',Val}) ->
'enc_ProcedureCode'(Val);

'enc_ProcedureCode'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Val).


'dec_ProcedureCode'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]).


'enc_PrivateIE-ID'({'PrivateIE-ID',Val}) ->
'enc_PrivateIE-ID'(Val);

'enc_PrivateIE-ID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),[local,global], 2),
case element(1,Val) of
local ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],element(2,Val));
global ->
?RT_PER:encode_object_identifier(element(2,Val))
end
].


'dec_PrivateIE-ID'(Bytes,_) ->
{Choice,Bytes1} = ?RT_PER:getchoice(Bytes,2, 0),
{Cname,{Val,NewBytes}} = case Choice of
0 -> {local,
?RT_PER:decode_integer(Bytes1,[{'ValueRange',{0,65535}}])};
1 -> {global,
?RT_PER:decode_object_identifier(Bytes1)}
end,

{{Cname,Val},NewBytes}.

'enc_Presence'({'Presence',Val}) ->
'enc_Presence'(Val);

'enc_Presence'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'optional' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'conditional' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'mandatory' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Presence'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{optional,conditional,mandatory}).


'enc_Criticality'({'Criticality',Val}) ->
'enc_Criticality'(Val);

'enc_Criticality'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Criticality'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{reject,ignore,notify}).

'enc_PrivateMessage'(Val) ->
Val1 = ?RT_PER:list_to_record('PrivateMessage', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_PrivateMessage_privateIEs'(?RT_PER:cindex(2,Val1,privateIEs))].

'enc_PrivateMessage_privateIEs'({'PrivateMessage_privateIEs',Val}) ->
'enc_PrivateMessage_privateIEs'(Val);

'enc_PrivateMessage_privateIEs'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_PrivateMessage_privateIEs_components'(Val, [])
].
'enc_PrivateMessage_privateIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_PrivateMessage_privateIEs_components'([H|T], Acc) ->
'enc_PrivateMessage_privateIEs_components'(T, ['enc_PrivateMessage_privateIEs_PrivateIE-Field'(H)

 | Acc]).
'enc_PrivateMessage_privateIEs_PrivateIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('PrivateIE-Field', Val),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeExternaltypereference100X2APPrivateIE-IDno
'enc_PrivateIE-ID'(?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval1}->Enumval1;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ASN1_OPEN_TYPE
?RT_PER:encode_open_type([],?RT_PER:cindex(4,Val1,value))].

'dec_PrivateMessage_privateIEs_PrivateIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = 'dec_PrivateIE-ID'(Bytes,telltype),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%% attribute number 3 with type ASN1_OPEN_TYPE
{Term3,Bytes3} = fun() -> {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2, []), {binary_to_list(XTerm),XBytes} end(),
{{'PrivateIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_PrivateMessage_privateIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_PrivateMessage_privateIEs_components'(Num, Bytes1, telltype, []).
'dec_PrivateMessage_privateIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_PrivateMessage_privateIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_PrivateMessage_privateIEs_PrivateIE-Field'(Bytes, telltype),
   'dec_PrivateMessage_privateIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_PrivateMessage'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_PrivateMessage_privateIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'PrivateMessage',Term1},Bytes4}.

'enc_CellMeasurementResult-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5,6],4,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedX2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'cell-ID')),
case ?RT_PER:cindex(3,Val1,hWOverLoadIndicator) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedX2APHWLoadIndicator
'enc_HWLoadIndicator'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,s1TNLOverLoadIndicator) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type ExternaltypereferenceundefinedX2APS1TNLLoadIndicator
'enc_S1TNLLoadIndicator'(Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,radioresourceStatus) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type ExternaltypereferenceundefinedX2APRadioResourceStatus
'enc_RadioResourceStatus'(Tmpval3)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 5 with type SEQUENCE OF
'enc_CellMeasurementResult-Item_iE-Extensions'(Tmpval4)
end].

'enc_CellMeasurementResult-Item_iE-Extensions'({'CellMeasurementResult-Item_iE-Extensions',Val}) ->
'enc_CellMeasurementResult-Item_iE-Extensions'(Val);

'enc_CellMeasurementResult-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellMeasurementResult-Item_iE-Extensions_components'(Val, [])
].
'enc_CellMeasurementResult-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellMeasurementResult-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CellMeasurementResult-Item_iE-Extensions_components'(T, ['enc_CellMeasurementResult-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellMeasurementResult-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_6'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellMeasurementResult-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_6'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellMeasurementResult-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellMeasurementResult-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellMeasurementResult-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellMeasurementResult-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellMeasurementResult-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellMeasurementResult-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellMeasurementResult-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,4), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%%  attribute number 2 with type HWLoadIndicator
{Term2,Bytes4} = case Opt band (1 bsl 3) of
  _Opt2 when _Opt2 > 0 ->'dec_HWLoadIndicator'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type S1TNLLoadIndicator
{Term3,Bytes5} = case Opt band (1 bsl 2) of
  _Opt3 when _Opt3 > 0 ->'dec_S1TNLLoadIndicator'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type RadioResourceStatus
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->'dec_RadioResourceStatus'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_CellMeasurementResult-Item_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'CellMeasurementResult-Item',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_CellMeasurementResult-List'({'CellMeasurementResult-List',Val}) ->
'enc_CellMeasurementResult-List'(Val);

'enc_CellMeasurementResult-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CellMeasurementResult-List_components'(Val, [])
].
'enc_CellMeasurementResult-List_components'([], Acc) -> lists:reverse(Acc);

'enc_CellMeasurementResult-List_components'([H|T], Acc) ->
'enc_CellMeasurementResult-List_components'(T, ['enc_CellMeasurementResult-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_CellMeasurementResult-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_7'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_CellMeasurementResult-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_7'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_CellMeasurementResult-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CellMeasurementResult-List_components'(Num, Bytes1, telltype, []).
'dec_CellMeasurementResult-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellMeasurementResult-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellMeasurementResult-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_CellMeasurementResult-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ResourceStatusUpdate'(Val) ->
Val1 = ?RT_PER:list_to_record('ResourceStatusUpdate', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResourceStatusUpdate_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResourceStatusUpdate_protocolIEs'({'ResourceStatusUpdate_protocolIEs',Val}) ->
'enc_ResourceStatusUpdate_protocolIEs'(Val);

'enc_ResourceStatusUpdate_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResourceStatusUpdate_protocolIEs_components'(Val, [])
].
'enc_ResourceStatusUpdate_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResourceStatusUpdate_protocolIEs_components'([H|T], Acc) ->
'enc_ResourceStatusUpdate_protocolIEs_components'(T, ['enc_ResourceStatusUpdate_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResourceStatusUpdate_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_8'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResourceStatusUpdate_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_8'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResourceStatusUpdate_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResourceStatusUpdate_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResourceStatusUpdate_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResourceStatusUpdate_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResourceStatusUpdate_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResourceStatusUpdate_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResourceStatusUpdate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResourceStatusUpdate_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResourceStatusUpdate',Term1},Bytes4}.

'enc_ResourceStatusFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('ResourceStatusFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResourceStatusFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResourceStatusFailure_protocolIEs'({'ResourceStatusFailure_protocolIEs',Val}) ->
'enc_ResourceStatusFailure_protocolIEs'(Val);

'enc_ResourceStatusFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResourceStatusFailure_protocolIEs_components'(Val, [])
].
'enc_ResourceStatusFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResourceStatusFailure_protocolIEs_components'([H|T], Acc) ->
'enc_ResourceStatusFailure_protocolIEs_components'(T, ['enc_ResourceStatusFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResourceStatusFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_9'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResourceStatusFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_9'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResourceStatusFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResourceStatusFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResourceStatusFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResourceStatusFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResourceStatusFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResourceStatusFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResourceStatusFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResourceStatusFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResourceStatusFailure',Term1},Bytes4}.

'enc_ResourceStatusResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('ResourceStatusResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResourceStatusResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResourceStatusResponse_protocolIEs'({'ResourceStatusResponse_protocolIEs',Val}) ->
'enc_ResourceStatusResponse_protocolIEs'(Val);

'enc_ResourceStatusResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResourceStatusResponse_protocolIEs_components'(Val, [])
].
'enc_ResourceStatusResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResourceStatusResponse_protocolIEs_components'([H|T], Acc) ->
'enc_ResourceStatusResponse_protocolIEs_components'(T, ['enc_ResourceStatusResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResourceStatusResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_10'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResourceStatusResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_10'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResourceStatusResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResourceStatusResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResourceStatusResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResourceStatusResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResourceStatusResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResourceStatusResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResourceStatusResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResourceStatusResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResourceStatusResponse',Term1},Bytes4}.


'enc_ReportingPeriodicity'({'ReportingPeriodicity',Val}) ->
'enc_ReportingPeriodicity'(Val);

'enc_ReportingPeriodicity'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'one-thousand-ms' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'two-thousand-ms' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'five-thousand-ms' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'ten-thousand-ms' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ReportingPeriodicity'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{'one-thousand-ms','two-thousand-ms','five-thousand-ms','ten-thousand-ms'},{}}).

'enc_CellToReport-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference589X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'cell-ID')),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CellToReport-Item_iE-Extensions'(Tmpval1)
end].

'enc_CellToReport-Item_iE-Extensions'({'CellToReport-Item_iE-Extensions',Val}) ->
'enc_CellToReport-Item_iE-Extensions'(Val);

'enc_CellToReport-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellToReport-Item_iE-Extensions_components'(Val, [])
].
'enc_CellToReport-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellToReport-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CellToReport-Item_iE-Extensions_components'(T, ['enc_CellToReport-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellToReport-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_11'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellToReport-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_11'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellToReport-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellToReport-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellToReport-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellToReport-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellToReport-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellToReport-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellToReport-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CellToReport-Item_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CellToReport-Item',Term1,Term2},Bytes6}.


'enc_CellToReport-List'({'CellToReport-List',Val}) ->
'enc_CellToReport-List'(Val);

'enc_CellToReport-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CellToReport-List_components'(Val, [])
].
'enc_CellToReport-List_components'([], Acc) -> lists:reverse(Acc);

'enc_CellToReport-List_components'([H|T], Acc) ->
'enc_CellToReport-List_components'(T, ['enc_CellToReport-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_CellToReport-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_12'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_CellToReport-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_12'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_CellToReport-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CellToReport-List_components'(Num, Bytes1, telltype, []).
'dec_CellToReport-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellToReport-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellToReport-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_CellToReport-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ResourceStatusRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('ResourceStatusRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResourceStatusRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResourceStatusRequest_protocolIEs'({'ResourceStatusRequest_protocolIEs',Val}) ->
'enc_ResourceStatusRequest_protocolIEs'(Val);

'enc_ResourceStatusRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResourceStatusRequest_protocolIEs_components'(Val, [])
].
'enc_ResourceStatusRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResourceStatusRequest_protocolIEs_components'([H|T], Acc) ->
'enc_ResourceStatusRequest_protocolIEs_components'(T, ['enc_ResourceStatusRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResourceStatusRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_13'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResourceStatusRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_13'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResourceStatusRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResourceStatusRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResourceStatusRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResourceStatusRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResourceStatusRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResourceStatusRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResourceStatusRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResourceStatusRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResourceStatusRequest',Term1},Bytes4}.

'enc_ENBConfigurationUpdateFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdateFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdateFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdateFailure_protocolIEs'({'ENBConfigurationUpdateFailure_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdateFailure_protocolIEs'(Val);

'enc_ENBConfigurationUpdateFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdateFailure_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdateFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdateFailure_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdateFailure_protocolIEs_components'(T, ['enc_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_14'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_14'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdateFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdateFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdateFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdateFailure',Term1},Bytes4}.

'enc_ENBConfigurationUpdateAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdateAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'({'ENBConfigurationUpdateAcknowledge_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(Val);

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(T, ['enc_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_15'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_15'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdateAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdateAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdateAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdateAcknowledge',Term1},Bytes4}.


'enc_Old-ECGIs'({'Old-ECGIs',Val}) ->
'enc_Old-ECGIs'(Val);

'enc_Old-ECGIs'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_Old-ECGIs_components'(Val, [])
].
'enc_Old-ECGIs_components'([], Acc) -> lists:reverse(Acc);

'enc_Old-ECGIs_components'([H|T], Acc) ->
'enc_Old-ECGIs_components'(T, ['enc_ECGI'(H)

 | Acc]).


'dec_Old-ECGIs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_Old-ECGIs_components'(Num, Bytes1, telltype, []).
'dec_Old-ECGIs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Old-ECGIs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ECGI'(Bytes,telltype),
   'dec_Old-ECGIs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ServedCellsToModify-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4,5],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference510X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'old-ecgi')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APServedCell-Information
'enc_ServedCell-Information'(?RT_PER:cindex(3,Val1,servedCellInfo)),
case ?RT_PER:cindex(4,Val1,'neighbour-Info') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type ExternaltypereferenceundefinedX2APNeighbour-Information
'enc_Neighbour-Information'(Tmpval1)
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 4 with type SEQUENCE OF
'enc_ServedCellsToModify-Item_iE-Extensions'(Tmpval2)
end].

'enc_ServedCellsToModify-Item_iE-Extensions'({'ServedCellsToModify-Item_iE-Extensions',Val}) ->
'enc_ServedCellsToModify-Item_iE-Extensions'(Val);

'enc_ServedCellsToModify-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ServedCellsToModify-Item_iE-Extensions_components'(Val, [])
].
'enc_ServedCellsToModify-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedCellsToModify-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_ServedCellsToModify-Item_iE-Extensions_components'(T, ['enc_ServedCellsToModify-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ServedCellsToModify-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_21'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ServedCellsToModify-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_21'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ServedCellsToModify-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ServedCellsToModify-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ServedCellsToModify-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedCellsToModify-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedCellsToModify-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ServedCellsToModify-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ServedCellsToModify-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%%  attribute number 2 with type ServedCell-Information
{Term2,Bytes4} = 'dec_ServedCell-Information'(Bytes3,telltype),

%%  attribute number 3 with type Neighbour-Information
{Term3,Bytes5} = case Opt band (1 bsl 1) of
  _Opt3 when _Opt3 > 0 ->'dec_Neighbour-Information'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_ServedCellsToModify-Item_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'ServedCellsToModify-Item',Term1,Term2,Term3,Term4},Bytes8}.


'enc_ServedCellsToModify'({'ServedCellsToModify',Val}) ->
'enc_ServedCellsToModify'(Val);

'enc_ServedCellsToModify'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_ServedCellsToModify_components'(Val, [])
].
'enc_ServedCellsToModify_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedCellsToModify_components'([H|T], Acc) ->
'enc_ServedCellsToModify_components'(T, ['enc_ServedCellsToModify-Item'(H)

 | Acc]).


'dec_ServedCellsToModify'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_ServedCellsToModify_components'(Num, Bytes1, telltype, []).
'dec_ServedCellsToModify_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedCellsToModify_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedCellsToModify-Item'(Bytes,telltype),
   'dec_ServedCellsToModify_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ENBConfigurationUpdate'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdate', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdate_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdate_protocolIEs'({'ENBConfigurationUpdate_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdate_protocolIEs'(Val);

'enc_ENBConfigurationUpdate_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdate_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdate_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdate_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdate_protocolIEs_components'(T, ['enc_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_22'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_22'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdate_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdate_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdate_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdate_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdate_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdate_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdate',Term1},Bytes4}.

'enc_CellInformation-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5,6],4,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference475X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'cell-ID')),
case ?RT_PER:cindex(3,Val1,'ul-InterferenceOverloadIndication') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedX2APUL-InterferenceOverloadIndication
'enc_UL-InterferenceOverloadIndication'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,'ul-HighInterferenceIndicationInfo') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type ExternaltypereferenceundefinedX2APUL-HighInterferenceIndicationInfo
'enc_UL-HighInterferenceIndicationInfo'(Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,relativeNarrowbandTxPower) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type ExternaltypereferenceundefinedX2APRelativeNarrowbandTxPower
'enc_RelativeNarrowbandTxPower'(Tmpval3)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 5 with type SEQUENCE OF
'enc_CellInformation-Item_iE-Extensions'(Tmpval4)
end].

'enc_CellInformation-Item_iE-Extensions'({'CellInformation-Item_iE-Extensions',Val}) ->
'enc_CellInformation-Item_iE-Extensions'(Val);

'enc_CellInformation-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellInformation-Item_iE-Extensions_components'(Val, [])
].
'enc_CellInformation-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellInformation-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CellInformation-Item_iE-Extensions_components'(T, ['enc_CellInformation-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellInformation-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_25'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellInformation-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_25'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellInformation-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellInformation-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellInformation-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellInformation-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellInformation-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellInformation-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellInformation-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,4), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%%  attribute number 2 with type UL-InterferenceOverloadIndication
{Term2,Bytes4} = case Opt band (1 bsl 3) of
  _Opt2 when _Opt2 > 0 ->'dec_UL-InterferenceOverloadIndication'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type UL-HighInterferenceIndicationInfo
{Term3,Bytes5} = case Opt band (1 bsl 2) of
  _Opt3 when _Opt3 > 0 ->'dec_UL-HighInterferenceIndicationInfo'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type RelativeNarrowbandTxPower
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->'dec_RelativeNarrowbandTxPower'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_CellInformation-Item_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'CellInformation-Item',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_CellInformation-List'({'CellInformation-List',Val}) ->
'enc_CellInformation-List'(Val);

'enc_CellInformation-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CellInformation-List_components'(Val, [])
].
'enc_CellInformation-List_components'([], Acc) -> lists:reverse(Acc);

'enc_CellInformation-List_components'([H|T], Acc) ->
'enc_CellInformation-List_components'(T, ['enc_CellInformation-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_CellInformation-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_26'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_CellInformation-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_26'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_CellInformation-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CellInformation-List_components'(Num, Bytes1, telltype, []).
'dec_CellInformation-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellInformation-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellInformation-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_CellInformation-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_LoadInformation'(Val) ->
Val1 = ?RT_PER:list_to_record('LoadInformation', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_LoadInformation_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_LoadInformation_protocolIEs'({'LoadInformation_protocolIEs',Val}) ->
'enc_LoadInformation_protocolIEs'(Val);

'enc_LoadInformation_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_LoadInformation_protocolIEs_components'(Val, [])
].
'enc_LoadInformation_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_LoadInformation_protocolIEs_components'([H|T], Acc) ->
'enc_LoadInformation_protocolIEs_components'(T, ['enc_LoadInformation_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_LoadInformation_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_27'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_LoadInformation_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_27'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_LoadInformation_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_LoadInformation_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_LoadInformation_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LoadInformation_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LoadInformation_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_LoadInformation_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LoadInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_LoadInformation_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'LoadInformation',Term1},Bytes4}.

'enc_X2SetupFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('X2SetupFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_X2SetupFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_X2SetupFailure_protocolIEs'({'X2SetupFailure_protocolIEs',Val}) ->
'enc_X2SetupFailure_protocolIEs'(Val);

'enc_X2SetupFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_X2SetupFailure_protocolIEs_components'(Val, [])
].
'enc_X2SetupFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_X2SetupFailure_protocolIEs_components'([H|T], Acc) ->
'enc_X2SetupFailure_protocolIEs_components'(T, ['enc_X2SetupFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_X2SetupFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_28'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_X2SetupFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_28'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_X2SetupFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_X2SetupFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_X2SetupFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_X2SetupFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_X2SetupFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_X2SetupFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_X2SetupFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_X2SetupFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'X2SetupFailure',Term1},Bytes4}.

'enc_X2SetupResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('X2SetupResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_X2SetupResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_X2SetupResponse_protocolIEs'({'X2SetupResponse_protocolIEs',Val}) ->
'enc_X2SetupResponse_protocolIEs'(Val);

'enc_X2SetupResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_X2SetupResponse_protocolIEs_components'(Val, [])
].
'enc_X2SetupResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_X2SetupResponse_protocolIEs_components'([H|T], Acc) ->
'enc_X2SetupResponse_protocolIEs_components'(T, ['enc_X2SetupResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_X2SetupResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_29'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_X2SetupResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_29'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_X2SetupResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_X2SetupResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_X2SetupResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_X2SetupResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_X2SetupResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_X2SetupResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_X2SetupResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_X2SetupResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'X2SetupResponse',Term1},Bytes4}.

'enc_X2SetupRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('X2SetupRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_X2SetupRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_X2SetupRequest_protocolIEs'({'X2SetupRequest_protocolIEs',Val}) ->
'enc_X2SetupRequest_protocolIEs'(Val);

'enc_X2SetupRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_X2SetupRequest_protocolIEs_components'(Val, [])
].
'enc_X2SetupRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_X2SetupRequest_protocolIEs_components'([H|T], Acc) ->
'enc_X2SetupRequest_protocolIEs_components'(T, ['enc_X2SetupRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_X2SetupRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_30'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_X2SetupRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_30'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_X2SetupRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_X2SetupRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_X2SetupRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_X2SetupRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_X2SetupRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_X2SetupRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_X2SetupRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_X2SetupRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'X2SetupRequest',Term1},Bytes4}.

'enc_ResetResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('ResetResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResetResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResetResponse_protocolIEs'({'ResetResponse_protocolIEs',Val}) ->
'enc_ResetResponse_protocolIEs'(Val);

'enc_ResetResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResetResponse_protocolIEs_components'(Val, [])
].
'enc_ResetResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResetResponse_protocolIEs_components'([H|T], Acc) ->
'enc_ResetResponse_protocolIEs_components'(T, ['enc_ResetResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResetResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_31'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResetResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_31'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResetResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResetResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResetResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResetResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResetResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResetResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResetResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResetResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResetResponse',Term1},Bytes4}.

'enc_ResetRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('ResetRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResetRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResetRequest_protocolIEs'({'ResetRequest_protocolIEs',Val}) ->
'enc_ResetRequest_protocolIEs'(Val);

'enc_ResetRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResetRequest_protocolIEs_components'(Val, [])
].
'enc_ResetRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResetRequest_protocolIEs_components'([H|T], Acc) ->
'enc_ResetRequest_protocolIEs_components'(T, ['enc_ResetRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResetRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_32'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResetRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_32'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResetRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResetRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResetRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResetRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResetRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResetRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResetRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResetRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResetRequest',Term1},Bytes4}.

'enc_ErrorIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('ErrorIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ErrorIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ErrorIndication_protocolIEs'({'ErrorIndication_protocolIEs',Val}) ->
'enc_ErrorIndication_protocolIEs'(Val);

'enc_ErrorIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ErrorIndication_protocolIEs_components'(Val, [])
].
'enc_ErrorIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ErrorIndication_protocolIEs_components'([H|T], Acc) ->
'enc_ErrorIndication_protocolIEs_components'(T, ['enc_ErrorIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ErrorIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_33'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ErrorIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_33'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ErrorIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ErrorIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ErrorIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ErrorIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ErrorIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ErrorIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ErrorIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ErrorIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ErrorIndication',Term1},Bytes4}.

'enc_HandoverCancel'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverCancel', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverCancel_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverCancel_protocolIEs'({'HandoverCancel_protocolIEs',Val}) ->
'enc_HandoverCancel_protocolIEs'(Val);

'enc_HandoverCancel_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverCancel_protocolIEs_components'(Val, [])
].
'enc_HandoverCancel_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverCancel_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverCancel_protocolIEs_components'(T, ['enc_HandoverCancel_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverCancel_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_34'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverCancel_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_34'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverCancel_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverCancel_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverCancel_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverCancel_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverCancel_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverCancel_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverCancel'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverCancel_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverCancel',Term1},Bytes4}.

'enc_UEContextRelease'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextRelease', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextRelease_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextRelease_protocolIEs'({'UEContextRelease_protocolIEs',Val}) ->
'enc_UEContextRelease_protocolIEs'(Val);

'enc_UEContextRelease_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextRelease_protocolIEs_components'(Val, [])
].
'enc_UEContextRelease_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextRelease_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextRelease_protocolIEs_components'(T, ['enc_UEContextRelease_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextRelease_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_35'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextRelease_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_35'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextRelease_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextRelease_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextRelease_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextRelease_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextRelease_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextRelease_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextRelease'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextRelease_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextRelease',Term1},Bytes4}.

'enc_E-RABs-SubjectToStatusTransfer-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,6],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,receiveStatusofULPDCPSDUs) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',4096}],Tmpval1,[])
end,

%% attribute number 3 with type ExternaltypereferenceundefinedX2APCOUNTvalue
'enc_COUNTvalue'(?RT_PER:cindex(4,Val1,'uL-COUNTvalue')),

%% attribute number 4 with type Externaltypereference290X2APCOUNTvalue
'enc_COUNTvalue'(?RT_PER:cindex(5,Val1,'dL-COUNTvalue')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 5 with type SEQUENCE OF
'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'(Tmpval2)
end].

'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'({'E-RABs-SubjectToStatusTransfer-Item_iE-Extensions',Val}) ->
'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'(Val);

'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(Val, [])
].
'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(T, ['enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_37'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_37'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABs-SubjectToStatusTransfer-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = case Opt band (1 bsl 1) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',4096}],[]);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type COUNTvalue
{Term3,Bytes5} = 'dec_COUNTvalue'(Bytes4,telltype),

%%  attribute number 4 with type COUNTvalue
{Term4,Bytes6} = 'dec_COUNTvalue'(Bytes5,telltype),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_E-RABs-SubjectToStatusTransfer-Item_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'E-RABs-SubjectToStatusTransfer-Item',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_E-RABs-SubjectToStatusTransfer-List'({'E-RABs-SubjectToStatusTransfer-List',Val}) ->
'enc_E-RABs-SubjectToStatusTransfer-List'(Val);

'enc_E-RABs-SubjectToStatusTransfer-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABs-SubjectToStatusTransfer-List_components'(Val, [])
].
'enc_E-RABs-SubjectToStatusTransfer-List_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-SubjectToStatusTransfer-List_components'([H|T], Acc) ->
'enc_E-RABs-SubjectToStatusTransfer-List_components'(T, ['enc_E-RABs-SubjectToStatusTransfer-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABs-SubjectToStatusTransfer-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_38'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABs-SubjectToStatusTransfer-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_38'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABs-SubjectToStatusTransfer-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABs-SubjectToStatusTransfer-List_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-SubjectToStatusTransfer-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-SubjectToStatusTransfer-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-SubjectToStatusTransfer-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABs-SubjectToStatusTransfer-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_SNStatusTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('SNStatusTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_SNStatusTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_SNStatusTransfer_protocolIEs'({'SNStatusTransfer_protocolIEs',Val}) ->
'enc_SNStatusTransfer_protocolIEs'(Val);

'enc_SNStatusTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_SNStatusTransfer_protocolIEs_components'(Val, [])
].
'enc_SNStatusTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_SNStatusTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_SNStatusTransfer_protocolIEs_components'(T, ['enc_SNStatusTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_SNStatusTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_39'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_SNStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_39'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_SNStatusTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_SNStatusTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_SNStatusTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SNStatusTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SNStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_SNStatusTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SNStatusTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_SNStatusTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'SNStatusTransfer',Term1},Bytes4}.

'enc_HandoverPreparationFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverPreparationFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverPreparationFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverPreparationFailure_protocolIEs'({'HandoverPreparationFailure_protocolIEs',Val}) ->
'enc_HandoverPreparationFailure_protocolIEs'(Val);

'enc_HandoverPreparationFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverPreparationFailure_protocolIEs_components'(Val, [])
].
'enc_HandoverPreparationFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverPreparationFailure_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverPreparationFailure_protocolIEs_components'(T, ['enc_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_40'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_40'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverPreparationFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverPreparationFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverPreparationFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverPreparationFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverPreparationFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverPreparationFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverPreparationFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverPreparationFailure',Term1},Bytes4}.

'enc_E-RABs-Admitted-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5],3,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,'uL-GTP-TunnelEndpoint') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedX2APGTPtunnelEndpoint
'enc_GTPtunnelEndpoint'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,'dL-GTP-TunnelEndpoint') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type Externaltypereference231X2APGTPtunnelEndpoint
'enc_GTPtunnelEndpoint'(Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABs-Admitted-Item_iE-Extensions'(Tmpval3)
end].

'enc_E-RABs-Admitted-Item_iE-Extensions'({'E-RABs-Admitted-Item_iE-Extensions',Val}) ->
'enc_E-RABs-Admitted-Item_iE-Extensions'(Val);

'enc_E-RABs-Admitted-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABs-Admitted-Item_iE-Extensions_components'(Val, [])
].
'enc_E-RABs-Admitted-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-Admitted-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABs-Admitted-Item_iE-Extensions_components'(T, ['enc_E-RABs-Admitted-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABs-Admitted-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_42'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABs-Admitted-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_42'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABs-Admitted-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABs-Admitted-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-Admitted-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-Admitted-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-Admitted-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABs-Admitted-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABs-Admitted-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,3), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type GTPtunnelEndpoint
{Term2,Bytes4} = case Opt band (1 bsl 2) of
  _Opt2 when _Opt2 > 0 ->'dec_GTPtunnelEndpoint'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type GTPtunnelEndpoint
{Term3,Bytes5} = case Opt band (1 bsl 1) of
  _Opt3 when _Opt3 > 0 ->'dec_GTPtunnelEndpoint'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABs-Admitted-Item_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABs-Admitted-Item',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABs-Admitted-List'({'E-RABs-Admitted-List',Val}) ->
'enc_E-RABs-Admitted-List'(Val);

'enc_E-RABs-Admitted-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABs-Admitted-List_components'(Val, [])
].
'enc_E-RABs-Admitted-List_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-Admitted-List_components'([H|T], Acc) ->
'enc_E-RABs-Admitted-List_components'(T, ['enc_E-RABs-Admitted-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABs-Admitted-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_43'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABs-Admitted-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_43'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABs-Admitted-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABs-Admitted-List_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-Admitted-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-Admitted-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-Admitted-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABs-Admitted-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_HandoverRequestAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverRequestAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverRequestAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverRequestAcknowledge_protocolIEs'({'HandoverRequestAcknowledge_protocolIEs',Val}) ->
'enc_HandoverRequestAcknowledge_protocolIEs'(Val);

'enc_HandoverRequestAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverRequestAcknowledge_protocolIEs_components'(Val, [])
].
'enc_HandoverRequestAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRequestAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverRequestAcknowledge_protocolIEs_components'(T, ['enc_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_44'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_44'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRequestAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverRequestAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRequestAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverRequestAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverRequestAcknowledge',Term1},Bytes4}.

'enc_E-RABs-ToBeSetup-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4,6],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APE-RAB-Level-QoS-Parameters
'enc_E-RAB-Level-QoS-Parameters'(?RT_PER:cindex(3,Val1,'e-RAB-Level-QoS-Parameters')),
case ?RT_PER:cindex(4,Val1,'dL-Forwarding') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type ENUMERATED
case (case Tmpval1 of {_,Enumval2}-> Enumval2;_->Tmpval1 end) of
'dL-forwardingProposed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,

%% attribute number 4 with type Externaltypereference190X2APGTPtunnelEndpoint
'enc_GTPtunnelEndpoint'(?RT_PER:cindex(5,Val1,'uL-GTPtunnelEndpoint')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 5 with type SEQUENCE OF
'enc_E-RABs-ToBeSetup-Item_iE-Extensions'(Tmpval2)
end].

'enc_E-RABs-ToBeSetup-Item_iE-Extensions'({'E-RABs-ToBeSetup-Item_iE-Extensions',Val}) ->
'enc_E-RABs-ToBeSetup-Item_iE-Extensions'(Val);

'enc_E-RABs-ToBeSetup-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABs-ToBeSetup-Item_iE-Extensions_components'(Val, [])
].
'enc_E-RABs-ToBeSetup-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-ToBeSetup-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABs-ToBeSetup-Item_iE-Extensions_components'(T, ['enc_E-RABs-ToBeSetup-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABs-ToBeSetup-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_48'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABs-ToBeSetup-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_48'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABs-ToBeSetup-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABs-ToBeSetup-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-ToBeSetup-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-ToBeSetup-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-ToBeSetup-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABs-ToBeSetup-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABs-ToBeSetup-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type E-RAB-Level-QoS-Parameters
{Term2,Bytes4} = 'dec_E-RAB-Level-QoS-Parameters'(Bytes3,telltype),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = case Opt band (1 bsl 1) of
  _Opt3 when _Opt3 > 0 ->?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,0}}],{{'dL-forwardingProposed'},{}});
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type GTPtunnelEndpoint
{Term4,Bytes6} = 'dec_GTPtunnelEndpoint'(Bytes5,telltype),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_E-RABs-ToBeSetup-Item_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'E-RABs-ToBeSetup-Item',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_E-RABs-ToBeSetup-List'({'E-RABs-ToBeSetup-List',Val}) ->
'enc_E-RABs-ToBeSetup-List'(Val);

'enc_E-RABs-ToBeSetup-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABs-ToBeSetup-List_components'(Val, [])
].
'enc_E-RABs-ToBeSetup-List_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABs-ToBeSetup-List_components'([H|T], Acc) ->
'enc_E-RABs-ToBeSetup-List_components'(T, ['enc_E-RABs-ToBeSetup-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABs-ToBeSetup-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_49'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABs-ToBeSetup-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_49'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABs-ToBeSetup-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABs-ToBeSetup-List_components'(Num, Bytes1, telltype, []).
'dec_E-RABs-ToBeSetup-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABs-ToBeSetup-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABs-ToBeSetup-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABs-ToBeSetup-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_UE-ContextInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6,9,10,11],4,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],?RT_PER:cindex(2,Val1,'mME-UE-S1AP-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APUESecurityCapabilities
'enc_UESecurityCapabilities'(?RT_PER:cindex(3,Val1,uESecurityCapabilities)),

%% attribute number 3 with type ExternaltypereferenceundefinedX2APAS-SecurityInformation
'enc_AS-SecurityInformation'(?RT_PER:cindex(4,Val1,'aS-SecurityInformation')),

%% attribute number 4 with type ExternaltypereferenceundefinedX2APUEAggregateMaximumBitRate
'enc_UEAggregateMaximumBitRate'(?RT_PER:cindex(5,Val1,uEaggregateMaximumBitRate)),
case ?RT_PER:cindex(6,Val1,subscriberProfileIDforRFP) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{1,256}}],Tmpval1)
end,

%% attribute number 6 with type Externaltypereference167X2APE-RABs-ToBeSetup-List
'enc_E-RABs-ToBeSetup-List'(?RT_PER:cindex(7,Val1,'e-RABs-ToBeSetup-List')),

%% attribute number 7 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(8,Val1,'rRC-Context')),
case ?RT_PER:cindex(9,Val1,handoverRestrictionList) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 8 with type ExternaltypereferenceundefinedX2APHandoverRestrictionList
'enc_HandoverRestrictionList'(Tmpval2)
end,
case ?RT_PER:cindex(10,Val1,locationReportingInformation) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 9 with type ExternaltypereferenceundefinedX2APLocationReportingInformation
'enc_LocationReportingInformation'(Tmpval3)
end,
case ?RT_PER:cindex(11,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 10 with type SEQUENCE OF
'enc_UE-ContextInformation_iE-Extensions'(Tmpval4)
end].

'enc_UE-ContextInformation_iE-Extensions'({'UE-ContextInformation_iE-Extensions',Val}) ->
'enc_UE-ContextInformation_iE-Extensions'(Val);

'enc_UE-ContextInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UE-ContextInformation_iE-Extensions_components'(Val, [])
].
'enc_UE-ContextInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-ContextInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_UE-ContextInformation_iE-Extensions_components'(T, ['enc_UE-ContextInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UE-ContextInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_57'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UE-ContextInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_57'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UE-ContextInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UE-ContextInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UE-ContextInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-ContextInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UE-ContextInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UE-ContextInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UE-ContextInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,4), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4294967295}}]),

%%  attribute number 2 with type UESecurityCapabilities
{Term2,Bytes4} = 'dec_UESecurityCapabilities'(Bytes3,telltype),

%%  attribute number 3 with type AS-SecurityInformation
{Term3,Bytes5} = 'dec_AS-SecurityInformation'(Bytes4,telltype),

%%  attribute number 4 with type UEAggregateMaximumBitRate
{Term4,Bytes6} = 'dec_UEAggregateMaximumBitRate'(Bytes5,telltype),

%% attribute number 5 with type INTEGER
{Term5,Bytes7} = case Opt band (1 bsl 3) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_integer(Bytes6,[{'ValueRange',{1,256}}]);
0 ->{asn1_NOVALUE,Bytes6}

end,

%%  attribute number 6 with type E-RABs-ToBeSetup-List
{Term6,Bytes8} = 'dec_E-RABs-ToBeSetup-List'(Bytes7,telltype),

%% attribute number 7 with type OCTET STRING
{Term7,Bytes9} = ?RT_PER:decode_octet_string(Bytes8,[]),

%%  attribute number 8 with type HandoverRestrictionList
{Term8,Bytes10} = case Opt band (1 bsl 2) of
  _Opt8 when _Opt8 > 0 ->'dec_HandoverRestrictionList'(Bytes9,telltype);
0 ->{asn1_NOVALUE,Bytes9}

end,

%%  attribute number 9 with type LocationReportingInformation
{Term9,Bytes11} = case Opt band (1 bsl 1) of
  _Opt9 when _Opt9 > 0 ->'dec_LocationReportingInformation'(Bytes10,telltype);
0 ->{asn1_NOVALUE,Bytes10}

end,

%% attribute number 10 with type SEQUENCE OF
{Term10,Bytes12} = case Opt band (1 bsl 0) of
  _Opt10 when _Opt10 > 0 ->'dec_UE-ContextInformation_iE-Extensions'(Bytes11, telltype);
0 ->{asn1_NOVALUE,Bytes11}

end,
{Extensions,Bytes13} = ?RT_PER:getextension(Ext,Bytes12),
Bytes14= ?RT_PER:skipextensions(Bytes13,1,Extensions)
,
{{'UE-ContextInformation',Term1,Term2,Term3,Term4,Term5,Term6,Term7,Term8,Term9,Term10},Bytes14}.

'enc_HandoverRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverRequest_protocolIEs'({'HandoverRequest_protocolIEs',Val}) ->
'enc_HandoverRequest_protocolIEs'(Val);

'enc_HandoverRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverRequest_protocolIEs_components'(Val, [])
].
'enc_HandoverRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRequest_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverRequest_protocolIEs_components'(T, ['enc_HandoverRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_58'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_58'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverRequest',Term1},Bytes4}.


'enc_UL-HighInterferenceIndication'({'UL-HighInterferenceIndication',Val}) ->
'enc_UL-HighInterferenceIndication'(Val);

'enc_UL-HighInterferenceIndication'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,110},[]}}],Val,[]).


'dec_UL-HighInterferenceIndication'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{1,110},[]}}],[]).

'enc_UL-HighInterferenceIndicationInfo-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference855X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'target-Cell-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,110},[]}}],?RT_PER:cindex(3,Val1,'ul-interferenceindication'),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'(Tmpval1)
end].

'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'({'UL-HighInterferenceIndicationInfo-Item_iE-Extensions',Val}) ->
'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'(Val);

'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(Val, [])
].
'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(T, ['enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_23'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_23'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UL-HighInterferenceIndicationInfo-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,110},[]}}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UL-HighInterferenceIndicationInfo-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UL-HighInterferenceIndicationInfo-Item',Term1,Term2,Term3},Bytes7}.


'enc_UL-HighInterferenceIndicationInfo'({'UL-HighInterferenceIndicationInfo',Val}) ->
'enc_UL-HighInterferenceIndicationInfo'(Val);

'enc_UL-HighInterferenceIndicationInfo'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_UL-HighInterferenceIndicationInfo_components'(Val, [])
].
'enc_UL-HighInterferenceIndicationInfo_components'([], Acc) -> lists:reverse(Acc);

'enc_UL-HighInterferenceIndicationInfo_components'([H|T], Acc) ->
'enc_UL-HighInterferenceIndicationInfo_components'(T, ['enc_UL-HighInterferenceIndicationInfo-Item'(H)

 | Acc]).


'dec_UL-HighInterferenceIndicationInfo'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_UL-HighInterferenceIndicationInfo_components'(Num, Bytes1, telltype, []).
'dec_UL-HighInterferenceIndicationInfo_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UL-HighInterferenceIndicationInfo_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UL-HighInterferenceIndicationInfo-Item'(Bytes,telltype),
   'dec_UL-HighInterferenceIndicationInfo_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_UL-InterferenceOverloadIndication-Item'({'UL-InterferenceOverloadIndication-Item',Val}) ->
'enc_UL-InterferenceOverloadIndication-Item'(Val);

'enc_UL-InterferenceOverloadIndication-Item'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'high-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'medium-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'low-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_UL-InterferenceOverloadIndication-Item'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{{'high-interference','medium-interference','low-interference'},{}}).


'enc_UL-InterferenceOverloadIndication'({'UL-InterferenceOverloadIndication',Val}) ->
'enc_UL-InterferenceOverloadIndication'(Val);

'enc_UL-InterferenceOverloadIndication'(Val) ->
[

   ?RT_PER:encode_length({1,110},length(Val)),
   'enc_UL-InterferenceOverloadIndication_components'(Val, [])
].
'enc_UL-InterferenceOverloadIndication_components'([], Acc) -> lists:reverse(Acc);

'enc_UL-InterferenceOverloadIndication_components'([H|T], Acc) ->
'enc_UL-InterferenceOverloadIndication_components'(T, [case (case H of {_,Enumval1}-> Enumval1;_->H end) of
'high-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'medium-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'low-interference' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end | Acc]).


'dec_UL-InterferenceOverloadIndication'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,110}),
'dec_UL-InterferenceOverloadIndication_components'(Num, Bytes1, telltype, []).
'dec_UL-InterferenceOverloadIndication_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UL-InterferenceOverloadIndication_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{{'high-interference','medium-interference','low-interference'},{}}),
   'dec_UL-InterferenceOverloadIndication_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_UESecurityCapabilities'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],?RT_PER:cindex(2,Val1,encryptionAlgorithms),[]),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],?RT_PER:cindex(3,Val1,integrityProtectionAlgorithms),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UESecurityCapabilities_iE-Extensions'(Tmpval1)
end].

'enc_UESecurityCapabilities_iE-Extensions'({'UESecurityCapabilities_iE-Extensions',Val}) ->
'enc_UESecurityCapabilities_iE-Extensions'(Val);

'enc_UESecurityCapabilities_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UESecurityCapabilities_iE-Extensions_components'(Val, [])
].
'enc_UESecurityCapabilities_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UESecurityCapabilities_iE-Extensions_components'([H|T], Acc) ->
'enc_UESecurityCapabilities_iE-Extensions_components'(T, ['enc_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_50'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_50'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UESecurityCapabilities_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UESecurityCapabilities_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UESecurityCapabilities_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UESecurityCapabilities_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UESecurityCapabilities_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UESecurityCapabilities'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',{{16,16},[]}}],[]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{16,16},[]}}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UESecurityCapabilities_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UESecurityCapabilities',Term1,Term2,Term3},Bytes7}.

'enc_UEAggregateMaximumBitRate'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(2,Val1,uEaggregateMaximumBitRateDownlink)),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(3,Val1,uEaggregateMaximumBitRateUplink)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UEAggregateMaximumBitRate_iE-Extensions'(Tmpval1)
end].

'enc_UEAggregateMaximumBitRate_iE-Extensions'({'UEAggregateMaximumBitRate_iE-Extensions',Val}) ->
'enc_UEAggregateMaximumBitRate_iE-Extensions'(Val);

'enc_UEAggregateMaximumBitRate_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UEAggregateMaximumBitRate_iE-Extensions_components'(Val, [])
].
'enc_UEAggregateMaximumBitRate_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UEAggregateMaximumBitRate_iE-Extensions_components'([H|T], Acc) ->
'enc_UEAggregateMaximumBitRate_iE-Extensions_components'(T, ['enc_UEAggregateMaximumBitRate_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UEAggregateMaximumBitRate_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_52'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UEAggregateMaximumBitRate_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_52'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UEAggregateMaximumBitRate_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UEAggregateMaximumBitRate_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UEAggregateMaximumBitRate_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEAggregateMaximumBitRate_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEAggregateMaximumBitRate_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UEAggregateMaximumBitRate_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEAggregateMaximumBitRate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,10000000000}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,10000000000}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UEAggregateMaximumBitRate_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UEAggregateMaximumBitRate',Term1,Term2,Term3},Bytes7}.


'enc_UE-X2AP-ID'({'UE-X2AP-ID',Val}) ->
'enc_UE-X2AP-ID'(Val);

'enc_UE-X2AP-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_UE-X2AP-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_UE-S1AP-ID'({'UE-S1AP-ID',Val}) ->
'enc_UE-S1AP-ID'(Val);

'enc_UE-S1AP-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],Val).


'dec_UE-S1AP-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4294967295}}]).


'enc_UE-HistoryInformation'({'UE-HistoryInformation',Val}) ->
'enc_UE-HistoryInformation'(Val);

'enc_UE-HistoryInformation'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_UE-HistoryInformation_components'(Val, [])
].
'enc_UE-HistoryInformation_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-HistoryInformation_components'([H|T], Acc) ->
'enc_UE-HistoryInformation_components'(T, ['enc_LastVisitedCell-Item'(H)

 | Acc]).


'dec_UE-HistoryInformation'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_UE-HistoryInformation_components'(Num, Bytes1, telltype, []).
'dec_UE-HistoryInformation_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-HistoryInformation_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LastVisitedCell-Item'(Bytes,telltype),
   'dec_UE-HistoryInformation_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_TypeOfError'({'TypeOfError',Val}) ->
'enc_TypeOfError'(Val);

'enc_TypeOfError'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'not-understood' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'missing' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TypeOfError'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{'not-understood',missing},{}}).


'enc_TransportLayerAddress'({'TransportLayerAddress',Val}) ->
'enc_TransportLayerAddress'(Val);

'enc_TransportLayerAddress'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Val,[]).


'dec_TransportLayerAddress'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{1,160},[]}}],[]).


'enc_Transmission-Bandwidth'({'Transmission-Bandwidth',Val}) ->
'enc_Transmission-Bandwidth'(Val);

'enc_Transmission-Bandwidth'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'bw6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'bw15' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'bw25' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'bw50' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'bw75' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'bw100' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Transmission-Bandwidth'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{bw6,bw15,bw25,bw50,bw75,bw100},{}}).


'enc_TraceDepth'({'TraceDepth',Val}) ->
'enc_TraceDepth'(Val);

'enc_TraceDepth'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'minimum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'maximum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'minimumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'mediumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'maximumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TraceDepth'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{minimum,medium,maximum,minimumWithoutVendorSpecificExtension,mediumWithoutVendorSpecificExtension,maximumWithoutVendorSpecificExtension},{}}).


'enc_TraceCollectionEntityIPAddress'({'TraceCollectionEntityIPAddress',Val}) ->
'enc_TraceCollectionEntityIPAddress'(Val);

'enc_TraceCollectionEntityIPAddress'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Val,[]).


'dec_TraceCollectionEntityIPAddress'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{1,160},[]}}],[]).

'enc_TraceActivation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',8}],?RT_PER:cindex(2,Val1,eUTRANTraceID)),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',8}],?RT_PER:cindex(3,Val1,interfacesToTrace),[]),

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,traceDepth) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(4,Val1,traceDepth) end) of
'minimum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'maximum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'minimumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'mediumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'maximumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 4 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(5,Val1,traceCollectionEntityIPAddress),[]),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_TraceActivation_iE-Extensions'(Tmpval1)
end].

'enc_TraceActivation_iE-Extensions'({'TraceActivation_iE-Extensions',Val}) ->
'enc_TraceActivation_iE-Extensions'(Val);

'enc_TraceActivation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TraceActivation_iE-Extensions_components'(Val, [])
].
'enc_TraceActivation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TraceActivation_iE-Extensions_components'([H|T], Acc) ->
'enc_TraceActivation_iE-Extensions_components'(T, ['enc_TraceActivation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TraceActivation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_61'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TraceActivation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_61'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TraceActivation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TraceActivation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TraceActivation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TraceActivation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TraceActivation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TraceActivation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TraceActivation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',8}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',8}],[]),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,5}}],{{minimum,medium,maximum,minimumWithoutVendorSpecificExtension,mediumWithoutVendorSpecificExtension,maximumWithoutVendorSpecificExtension},{}}),

%% attribute number 4 with type BIT STRING
{Term4,Bytes6} = ?RT_PER:decode_bit_string(Bytes5,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_TraceActivation_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'TraceActivation',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_Time-UE-StayedInCell'({'Time-UE-StayedInCell',Val}) ->
'enc_Time-UE-StayedInCell'(Val);

'enc_Time-UE-StayedInCell'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_Time-UE-StayedInCell'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_TimeToWait'({'TimeToWait',Val}) ->
'enc_TimeToWait'(Val);

'enc_TimeToWait'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'v1s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'v2s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'v5s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'v10s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'v20s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'v60s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TimeToWait'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{v1s,v2s,v5s,v10s,v20s,v60s},{}}).


'enc_TargeteNBtoSource-eNBTransparentContainer'({'TargeteNBtoSource-eNBTransparentContainer',Val}) ->
'enc_TargeteNBtoSource-eNBTransparentContainer'(Val);

'enc_TargeteNBtoSource-eNBTransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_TargeteNBtoSource-eNBTransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_TAC'({'TAC',Val}) ->
'enc_TAC'(Val);

'enc_TAC'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_TAC'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).


'enc_SubscriberProfileIDforRFP'({'SubscriberProfileIDforRFP',Val}) ->
'enc_SubscriberProfileIDforRFP'(Val);

'enc_SubscriberProfileIDforRFP'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{1,256}}],Val).


'dec_SubscriberProfileIDforRFP'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{1,256}}]).


'enc_SpecialSubframePatterns'({'SpecialSubframePatterns',Val}) ->
'enc_SpecialSubframePatterns'(Val);

'enc_SpecialSubframePatterns'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'ssp0' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 0)];
'ssp1' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 1)];
'ssp2' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 2)];
'ssp3' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 3)];
'ssp4' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 4)];
'ssp5' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 5)];
'ssp6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 6)];
'ssp7' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 7)];
'ssp8' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 8)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SpecialSubframePatterns'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,8}}],{{ssp0,ssp1,ssp2,ssp3,ssp4,ssp5,ssp6,ssp7,ssp8},{}}).

'enc_SpecialSubframe-Info'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,specialSubframePatterns) of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,specialSubframePatterns) end) of
'ssp0' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 0)];
'ssp1' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 1)];
'ssp2' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 2)];
'ssp3' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 3)];
'ssp4' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 4)];
'ssp5' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 5)];
'ssp6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 6)];
'ssp7' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 7)];
'ssp8' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,8}}], 8)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,cyclicPrefixDL) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(3,Val1,cyclicPrefixDL) end) of
'normal' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'extended' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,cyclicPrefixUL) of {_,Enumval5}-> Enumval5;_->?RT_PER:cindex(4,Val1,cyclicPrefixUL) end) of
'normal' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'extended' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_SpecialSubframe-Info_iE-Extensions'(Tmpval1)
end].

'enc_SpecialSubframe-Info_iE-Extensions'({'SpecialSubframe-Info_iE-Extensions',Val}) ->
'enc_SpecialSubframe-Info_iE-Extensions'(Val);

'enc_SpecialSubframe-Info_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SpecialSubframe-Info_iE-Extensions_components'(Val, [])
].
'enc_SpecialSubframe-Info_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SpecialSubframe-Info_iE-Extensions_components'([H|T], Acc) ->
'enc_SpecialSubframe-Info_iE-Extensions_components'(T, ['enc_SpecialSubframe-Info_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SpecialSubframe-Info_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_17'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SpecialSubframe-Info_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_17'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SpecialSubframe-Info_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SpecialSubframe-Info_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SpecialSubframe-Info_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SpecialSubframe-Info_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SpecialSubframe-Info_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SpecialSubframe-Info_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SpecialSubframe-Info'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,8}}],{{ssp0,ssp1,ssp2,ssp3,ssp4,ssp5,ssp6,ssp7,ssp8},{}}),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,1}}],{{normal,extended},{}}),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,1}}],{{normal,extended},{}}),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_SpecialSubframe-Info_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'SpecialSubframe-Info',Term1,Term2,Term3,Term4},Bytes8}.


'enc_SubframeAssignment'({'SubframeAssignment',Val}) ->
'enc_SubframeAssignment'(Val);

'enc_SubframeAssignment'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'sa0' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'sa1' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'sa2' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'sa3' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'sa4' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'sa5' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'sa6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SubframeAssignment'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,6}}],{{sa0,sa1,sa2,sa3,sa4,sa5,sa6},{}}).


'enc_SRVCCOperationPossible'({'SRVCCOperationPossible',Val}) ->
'enc_SRVCCOperationPossible'(Val);

'enc_SRVCCOperationPossible'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'possible' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SRVCCOperationPossible'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{possible},{}}).

'enc_ServedCell-Information'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([7],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,503}},[]}],?RT_PER:cindex(2,Val1,pCI)),

%% attribute number 2 with type Externaltypereference688X2APECGI
'enc_ECGI'(?RT_PER:cindex(3,Val1,cellId)),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(4,Val1,tAC)),

%% attribute number 4 with type ExternaltypereferenceundefinedX2APBroadcastPLMNs-Item
'enc_BroadcastPLMNs-Item'(?RT_PER:cindex(5,Val1,broadcastPLMNs)),

%% attribute number 5 with type ExternaltypereferenceundefinedX2APEUTRA-Mode-Info
'enc_EUTRA-Mode-Info'(?RT_PER:cindex(6,Val1,'eUTRA-Mode-Info')),
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 6 with type SEQUENCE OF
'enc_ServedCell-Information_iE-Extensions'(Tmpval1)
end].

'enc_ServedCell-Information_iE-Extensions'({'ServedCell-Information_iE-Extensions',Val}) ->
'enc_ServedCell-Information_iE-Extensions'(Val);

'enc_ServedCell-Information_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ServedCell-Information_iE-Extensions_components'(Val, [])
].
'enc_ServedCell-Information_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedCell-Information_iE-Extensions_components'([H|T], Acc) ->
'enc_ServedCell-Information_iE-Extensions_components'(T, ['enc_ServedCell-Information_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ServedCell-Information_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_19'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ServedCell-Information_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_19'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ServedCell-Information_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ServedCell-Information_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ServedCell-Information_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedCell-Information_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedCell-Information_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ServedCell-Information_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ServedCell-Information'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,503}},[]}]),

%%  attribute number 2 with type ECGI
{Term2,Bytes4} = 'dec_ECGI'(Bytes3,telltype),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',2}]),

%%  attribute number 4 with type BroadcastPLMNs-Item
{Term4,Bytes6} = 'dec_BroadcastPLMNs-Item'(Bytes5,telltype),

%%  attribute number 5 with type EUTRA-Mode-Info
{Term5,Bytes7} = 'dec_EUTRA-Mode-Info'(Bytes6,telltype),

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_ServedCell-Information_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'ServedCell-Information',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_ServedCells'({'ServedCells',Val}) ->
'enc_ServedCells'(Val);

'enc_ServedCells'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_ServedCells_components'(Val, [])
].
'enc_ServedCells_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedCells_components'([H|T], Acc) ->
'enc_ServedCells_components'(T, ['enc_ServedCells_SEQOF'(H)

 | Acc]).
'enc_ServedCells_SEQOF'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference676X2APServedCell-Information
'enc_ServedCell-Information'(?RT_PER:cindex(2,Val1,servedCellInfo)),
case ?RT_PER:cindex(3,Val1,'neighbour-Info') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type Externaltypereference677X2APNeighbour-Information
'enc_Neighbour-Information'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ServedCells_SEQOF_iE-Extensions'(Tmpval2)
end].

'enc_ServedCells_SEQOF_iE-Extensions'({'ServedCells_SEQOF_iE-Extensions',Val}) ->
'enc_ServedCells_SEQOF_iE-Extensions'(Val);

'enc_ServedCells_SEQOF_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ServedCells_SEQOF_iE-Extensions_components'(Val, [])
].
'enc_ServedCells_SEQOF_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedCells_SEQOF_iE-Extensions_components'([H|T], Acc) ->
'enc_ServedCells_SEQOF_iE-Extensions_components'(T, ['enc_ServedCells_SEQOF_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ServedCells_SEQOF_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_62'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ServedCells_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_62'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ServedCells_SEQOF_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ServedCells_SEQOF_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ServedCells_SEQOF_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedCells_SEQOF_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedCells_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ServedCells_SEQOF_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).

'dec_ServedCells_SEQOF'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%%  attribute number 1 with type ServedCell-Information
{Term1,Bytes3} = 'dec_ServedCell-Information'(Bytes2,telltype),

%%  attribute number 2 with type Neighbour-Information
{Term2,Bytes4} = case Opt band (1 bsl 1) of
  _Opt2 when _Opt2 > 0 ->'dec_Neighbour-Information'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ServedCells_SEQOF_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ServedCells_SEQOF',Term1,Term2,Term3},Bytes7}.



'dec_ServedCells'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_ServedCells_components'(Num, Bytes1, telltype, []).
'dec_ServedCells_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedCells_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedCells_SEQOF'(Bytes, telltype),
   'dec_ServedCells_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_S1TNLLoadIndicator'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,dLS1TNLLoadIndicator) of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,dLS1TNLLoadIndicator) end) of
'lowLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'mediumLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'highLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'overLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,uLS1TNLLoadIndicator) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(3,Val1,uLS1TNLLoadIndicator) end) of
'lowLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'mediumLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'highLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'overLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_S1TNLLoadIndicator_iE-Extensions'(Tmpval1)
end].

'enc_S1TNLLoadIndicator_iE-Extensions'({'S1TNLLoadIndicator_iE-Extensions',Val}) ->
'enc_S1TNLLoadIndicator_iE-Extensions'(Val);

'enc_S1TNLLoadIndicator_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_S1TNLLoadIndicator_iE-Extensions_components'(Val, [])
].
'enc_S1TNLLoadIndicator_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_S1TNLLoadIndicator_iE-Extensions_components'([H|T], Acc) ->
'enc_S1TNLLoadIndicator_iE-Extensions_components'(T, ['enc_S1TNLLoadIndicator_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_S1TNLLoadIndicator_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_4'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_S1TNLLoadIndicator_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_4'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_S1TNLLoadIndicator_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_S1TNLLoadIndicator_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_S1TNLLoadIndicator_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_S1TNLLoadIndicator_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_S1TNLLoadIndicator_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_S1TNLLoadIndicator_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_S1TNLLoadIndicator'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,3}}],{{lowLoad,mediumLoad,highLoad,overLoad},{}}),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,3}}],{{lowLoad,mediumLoad,highLoad,overLoad},{}}),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_S1TNLLoadIndicator_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'S1TNLLoadIndicator',Term1,Term2,Term3},Bytes7}.


'enc_UL-Total-PRB-usage'({'UL-Total-PRB-usage',Val}) ->
'enc_UL-Total-PRB-usage'(Val);

'enc_UL-Total-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_UL-Total-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).


'enc_DL-Total-PRB-usage'({'DL-Total-PRB-usage',Val}) ->
'enc_DL-Total-PRB-usage'(Val);

'enc_DL-Total-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_DL-Total-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).


'enc_UL-non-GBR-PRB-usage'({'UL-non-GBR-PRB-usage',Val}) ->
'enc_UL-non-GBR-PRB-usage'(Val);

'enc_UL-non-GBR-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_UL-non-GBR-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).


'enc_DL-non-GBR-PRB-usage'({'DL-non-GBR-PRB-usage',Val}) ->
'enc_DL-non-GBR-PRB-usage'(Val);

'enc_DL-non-GBR-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_DL-non-GBR-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).


'enc_UL-GBR-PRB-usage'({'UL-GBR-PRB-usage',Val}) ->
'enc_UL-GBR-PRB-usage'(Val);

'enc_UL-GBR-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_UL-GBR-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).


'enc_DL-GBR-PRB-usage'({'DL-GBR-PRB-usage',Val}) ->
'enc_DL-GBR-PRB-usage'(Val);

'enc_DL-GBR-PRB-usage'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,100}}],Val).


'dec_DL-GBR-PRB-usage'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,100}}]).

'enc_RadioResourceStatus'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([8],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(2,Val1,'dL-GBR-PRB-usage')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(3,Val1,'uL-GBR-PRB-usage')),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(4,Val1,'dL-non-GBR-PRB-usage')),

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(5,Val1,'uL-non-GBR-PRB-usage')),

%% attribute number 5 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(6,Val1,'dL-Total-PRB-usage')),

%% attribute number 6 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,100}}],?RT_PER:cindex(7,Val1,'uL-Total-PRB-usage')),
case ?RT_PER:cindex(8,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 7 with type SEQUENCE OF
'enc_RadioResourceStatus_iE-Extensions'(Tmpval1)
end].

'enc_RadioResourceStatus_iE-Extensions'({'RadioResourceStatus_iE-Extensions',Val}) ->
'enc_RadioResourceStatus_iE-Extensions'(Val);

'enc_RadioResourceStatus_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_RadioResourceStatus_iE-Extensions_components'(Val, [])
].
'enc_RadioResourceStatus_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_RadioResourceStatus_iE-Extensions_components'([H|T], Acc) ->
'enc_RadioResourceStatus_iE-Extensions_components'(T, ['enc_RadioResourceStatus_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_RadioResourceStatus_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_5'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_RadioResourceStatus_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_5'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_RadioResourceStatus_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_RadioResourceStatus_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_RadioResourceStatus_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_RadioResourceStatus_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_RadioResourceStatus_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_RadioResourceStatus_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_RadioResourceStatus'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,100}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,100}}]),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,100}}]),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = ?RT_PER:decode_integer(Bytes5,[{'ValueRange',{0,100}}]),

%% attribute number 5 with type INTEGER
{Term5,Bytes7} = ?RT_PER:decode_integer(Bytes6,[{'ValueRange',{0,100}}]),

%% attribute number 6 with type INTEGER
{Term6,Bytes8} = ?RT_PER:decode_integer(Bytes7,[{'ValueRange',{0,100}}]),

%% attribute number 7 with type SEQUENCE OF
{Term7,Bytes9} = case Opt band (1 bsl 0) of
  _Opt7 when _Opt7 > 0 ->'dec_RadioResourceStatus_iE-Extensions'(Bytes8, telltype);
0 ->{asn1_NOVALUE,Bytes8}

end,
{Extensions,Bytes10} = ?RT_PER:getextension(Ext,Bytes9),
Bytes11= ?RT_PER:skipextensions(Bytes10,1,Extensions)
,
{{'RadioResourceStatus',Term1,Term2,Term3,Term4,Term5,Term6,Term7},Bytes11}.


'enc_RRC-Context'({'RRC-Context',Val}) ->
'enc_RRC-Context'(Val);

'enc_RRC-Context'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_RRC-Context'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_RNTP-Threshold'({'RNTP-Threshold',Val}) ->
'enc_RNTP-Threshold'(Val);

'enc_RNTP-Threshold'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'minusInfinity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 0)];
'minusEleven' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 1)];
'minusTen' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 2)];
'minusNine' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 3)];
'minusEight' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 4)];
'minusSeven' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 5)];
'minusSix' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 6)];
'minusFive' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 7)];
'minusFour' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 8)];
'minusThree' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 9)];
'minusTwo' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 10)];
'minusOne' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 11)];
'zero' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 12)];
'one' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 13)];
'two' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 14)];
'three' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 15)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_RNTP-Threshold'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,15}}],{{minusInfinity,minusEleven,minusTen,minusNine,minusEight,minusSeven,minusSix,minusFive,minusFour,minusThree,minusTwo,minusOne,zero,one,two,three},{}}).


'enc_ReportCharacteristics'({'ReportCharacteristics',Val}) ->
'enc_ReportCharacteristics'(Val);

'enc_ReportCharacteristics'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',32}],Val,[]).


'dec_ReportCharacteristics'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',32}],[]).


'enc_ReportArea'({'ReportArea',Val}) ->
'enc_ReportArea'(Val);

'enc_ReportArea'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'ecgi' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ReportArea'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{ecgi},{}}).

'enc_RelativeNarrowbandTxPower'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([7],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{6,110},[]}}],?RT_PER:cindex(2,Val1,'rNTP-PerPRB'),[]),

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,'rNTP-Threshold') of {_,Enumval2}-> Enumval2;_->?RT_PER:cindex(3,Val1,'rNTP-Threshold') end) of
'minusInfinity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 0)];
'minusEleven' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 1)];
'minusTen' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 2)];
'minusNine' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 3)];
'minusEight' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 4)];
'minusSeven' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 5)];
'minusSix' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 6)];
'minusFive' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 7)];
'minusFour' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 8)];
'minusThree' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 9)];
'minusTwo' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 10)];
'minusOne' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 11)];
'zero' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 12)];
'one' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 13)];
'two' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 14)];
'three' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,15}}], 15)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,numberOfCellSpecificAntennaPorts) of {_,Enumval4}-> Enumval4;_->?RT_PER:cindex(4,Val1,numberOfCellSpecificAntennaPorts) end) of
'one' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'two' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'four' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,3}},[]}],?RT_PER:cindex(5,Val1,'p-B')),

%% attribute number 5 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,4}},[]}],?RT_PER:cindex(6,Val1,'pDCCH-InterferenceImpact')),
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 6 with type SEQUENCE OF
'enc_RelativeNarrowbandTxPower_iE-Extensions'(Tmpval1)
end].

'enc_RelativeNarrowbandTxPower_iE-Extensions'({'RelativeNarrowbandTxPower_iE-Extensions',Val}) ->
'enc_RelativeNarrowbandTxPower_iE-Extensions'(Val);

'enc_RelativeNarrowbandTxPower_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_RelativeNarrowbandTxPower_iE-Extensions_components'(Val, [])
].
'enc_RelativeNarrowbandTxPower_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_RelativeNarrowbandTxPower_iE-Extensions_components'([H|T], Acc) ->
'enc_RelativeNarrowbandTxPower_iE-Extensions_components'(T, ['enc_RelativeNarrowbandTxPower_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_RelativeNarrowbandTxPower_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_24'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_RelativeNarrowbandTxPower_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_24'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_RelativeNarrowbandTxPower_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_RelativeNarrowbandTxPower_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_RelativeNarrowbandTxPower_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_RelativeNarrowbandTxPower_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_RelativeNarrowbandTxPower_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_RelativeNarrowbandTxPower_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_RelativeNarrowbandTxPower'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',{{6,110},[]}}],[]),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,15}}],{{minusInfinity,minusEleven,minusTen,minusNine,minusEight,minusSeven,minusSix,minusFive,minusFour,minusThree,minusTwo,minusOne,zero,one,two,three},{}}),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,2}}],{{one,two,four},{}}),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = ?RT_PER:decode_integer(Bytes5,[{{'ValueRange',{0,3}},[]}]),

%% attribute number 5 with type INTEGER
{Term5,Bytes7} = ?RT_PER:decode_integer(Bytes6,[{{'ValueRange',{0,4}},[]}]),

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_RelativeNarrowbandTxPower_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'RelativeNarrowbandTxPower',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_Registration-Request'({'Registration-Request',Val}) ->
'enc_Registration-Request'(Val);

'enc_Registration-Request'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'start' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'stop' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Registration-Request'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{start,stop},{}}).


'enc_ReceiveStatusofULPDCPSDUs'({'ReceiveStatusofULPDCPSDUs',Val}) ->
'enc_ReceiveStatusofULPDCPSDUs'(Val);

'enc_ReceiveStatusofULPDCPSDUs'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',4096}],Val,[]).


'dec_ReceiveStatusofULPDCPSDUs'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',4096}],[]).


'enc_QCI'({'QCI',Val}) ->
'enc_QCI'(Val);

'enc_QCI'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Val).


'dec_QCI'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]).


'enc_PriorityLevel'({'PriorityLevel',Val}) ->
'enc_PriorityLevel'(Val);

'enc_PriorityLevel'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,15}}],Val,[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]).


'dec_PriorityLevel'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,15}}],[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]).


'enc_Pre-emptionVulnerability'({'Pre-emptionVulnerability',Val}) ->
'enc_Pre-emptionVulnerability'(Val);

'enc_Pre-emptionVulnerability'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'not-pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Pre-emptionVulnerability'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{'not-pre-emptable','pre-emptable'}).


'enc_Pre-emptionCapability'({'Pre-emptionCapability',Val}) ->
'enc_Pre-emptionCapability'(Val);

'enc_Pre-emptionCapability'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'shall-not-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'may-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Pre-emptionCapability'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{'shall-not-trigger-pre-emption','may-trigger-pre-emption'}).


'enc_PLMN-Identity'({'PLMN-Identity',Val}) ->
'enc_PLMN-Identity'(Val);

'enc_PLMN-Identity'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',3}],Val).


'dec_PLMN-Identity'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]).


'enc_PCI'({'PCI',Val}) ->
'enc_PCI'(Val);

'enc_PCI'(Val) ->
?RT_PER:encode_integer([{{'ValueRange',{0,503}},[]}],Val).


'dec_PCI'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{{'ValueRange',{0,503}},[]}]).


'enc_PDCP-SN'({'PDCP-SN',Val}) ->
'enc_PDCP-SN'(Val);

'enc_PDCP-SN'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_PDCP-SN'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_NextHopChainingCount'({'NextHopChainingCount',Val}) ->
'enc_NextHopChainingCount'(Val);

'enc_NextHopChainingCount'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,7}}],Val).


'dec_NextHopChainingCount'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,7}}]).


'enc_Neighbour-Information'({'Neighbour-Information',Val}) ->
'enc_Neighbour-Information'(Val);

'enc_Neighbour-Information'(Val) ->
[

   ?RT_PER:encode_length({0,512},length(Val)),
   'enc_Neighbour-Information_components'(Val, [])
].
'enc_Neighbour-Information_components'([], Acc) -> lists:reverse(Acc);

'enc_Neighbour-Information_components'([H|T], Acc) ->
'enc_Neighbour-Information_components'(T, ['enc_Neighbour-Information_SEQOF'(H)

 | Acc]).
'enc_Neighbour-Information_SEQOF'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference536X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,eCGI)),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,503}},[]}],?RT_PER:cindex(3,Val1,pCI)),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(4,Val1,eARFCN)),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_Neighbour-Information_SEQOF_iE-Extensions'(Tmpval1)
end].

'enc_Neighbour-Information_SEQOF_iE-Extensions'({'Neighbour-Information_SEQOF_iE-Extensions',Val}) ->
'enc_Neighbour-Information_SEQOF_iE-Extensions'(Val);

'enc_Neighbour-Information_SEQOF_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_Neighbour-Information_SEQOF_iE-Extensions_components'(Val, [])
].
'enc_Neighbour-Information_SEQOF_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_Neighbour-Information_SEQOF_iE-Extensions_components'([H|T], Acc) ->
'enc_Neighbour-Information_SEQOF_iE-Extensions_components'(T, ['enc_Neighbour-Information_SEQOF_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_Neighbour-Information_SEQOF_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_20'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_Neighbour-Information_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_20'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_Neighbour-Information_SEQOF_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_Neighbour-Information_SEQOF_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_Neighbour-Information_SEQOF_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Neighbour-Information_SEQOF_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Neighbour-Information_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_Neighbour-Information_SEQOF_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).

'dec_Neighbour-Information_SEQOF'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{{'ValueRange',{0,503}},[]}]),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,65535}}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_Neighbour-Information_SEQOF_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'Neighbour-Information_SEQOF',Term1,Term2,Term3,Term4},Bytes8}.



'dec_Neighbour-Information'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,512}),
'dec_Neighbour-Information_components'(Num, Bytes1, telltype, []).
'dec_Neighbour-Information_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Neighbour-Information_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Neighbour-Information_SEQOF'(Bytes, telltype),
   'dec_Neighbour-Information_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_Measurement-ID'({'Measurement-ID',Val}) ->
'enc_Measurement-ID'(Val);

'enc_Measurement-ID'(Val) ->
?RT_PER:encode_integer([{{'ValueRange',{1,4095}},[]}],Val).


'dec_Measurement-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{{'ValueRange',{1,4095}},[]}]).


'enc_MME-Code'({'MME-Code',Val}) ->
'enc_MME-Code'(Val);

'enc_MME-Code'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',1}],Val).


'dec_MME-Code'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',1}]).


'enc_MME-Group-ID'({'MME-Group-ID',Val}) ->
'enc_MME-Group-ID'(Val);

'enc_MME-Group-ID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_MME-Group-ID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).

'enc_LocationReportingInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,eventType) of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,eventType) end) of
'change-of-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,reportArea) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(3,Val1,reportArea) end) of
'ecgi' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_LocationReportingInformation_iE-Extensions'(Tmpval1)
end].

'enc_LocationReportingInformation_iE-Extensions'({'LocationReportingInformation_iE-Extensions',Val}) ->
'enc_LocationReportingInformation_iE-Extensions'(Val);

'enc_LocationReportingInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_LocationReportingInformation_iE-Extensions_components'(Val, [])
].
'enc_LocationReportingInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_LocationReportingInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_LocationReportingInformation_iE-Extensions_components'(T, ['enc_LocationReportingInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_LocationReportingInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_56'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_LocationReportingInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_56'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_LocationReportingInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_LocationReportingInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_LocationReportingInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LocationReportingInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LocationReportingInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_LocationReportingInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LocationReportingInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,0}}],{{'change-of-serving-cell'},{}}),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,0}}],{{ecgi},{}}),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_LocationReportingInformation_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'LocationReportingInformation',Term1,Term2,Term3},Bytes7}.


'enc_LoadIndicator'({'LoadIndicator',Val}) ->
'enc_LoadIndicator'(Val);

'enc_LoadIndicator'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'lowLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'mediumLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'highLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'overLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_LoadIndicator'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{lowLoad,mediumLoad,highLoad,overLoad},{}}).


'enc_LastVisitedGERANCellInformation'({'LastVisitedGERANCellInformation',Val}) ->
'enc_LastVisitedGERANCellInformation'(Val);

'enc_LastVisitedGERANCellInformation'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[undefined],[]}, {1,0}),
case element(1,Val) of
undefined ->
?RT_PER:encode_null(element(2,Val))
end
].


'dec_LastVisitedGERANCellInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,1,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*1 of
0 -> {undefined,
?RT_PER:decode_null(Bytes2)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_LastVisitedUTRANCellInformation'({'LastVisitedUTRANCellInformation',Val}) ->
'enc_LastVisitedUTRANCellInformation'(Val);

'enc_LastVisitedUTRANCellInformation'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_LastVisitedUTRANCellInformation'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_LastVisitedEUTRANCellInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference484X2APECGI
'enc_ECGI'(?RT_PER:cindex(2,Val1,'global-Cell-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APCellType
'enc_CellType'(?RT_PER:cindex(3,Val1,cellType)),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],?RT_PER:cindex(4,Val1,'time-UE-StayedInCell')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Tmpval1)
end].

'enc_LastVisitedEUTRANCellInformation_iE-Extensions'({'LastVisitedEUTRANCellInformation_iE-Extensions',Val}) ->
'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Val);

'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Val, [])
].
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'(T, ['enc_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_60'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_60'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_LastVisitedEUTRANCellInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LastVisitedEUTRANCellInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ECGI
{Term1,Bytes3} = 'dec_ECGI'(Bytes2,telltype),

%%  attribute number 2 with type CellType
{Term2,Bytes4} = 'dec_CellType'(Bytes3,telltype),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,4095}}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_LastVisitedEUTRANCellInformation_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'LastVisitedEUTRANCellInformation',Term1,Term2,Term3,Term4},Bytes8}.


'enc_LastVisitedCell-Item'({'LastVisitedCell-Item',Val}) ->
'enc_LastVisitedCell-Item'(Val);

'enc_LastVisitedCell-Item'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['e-UTRAN-Cell','uTRAN-Cell','gERAN-Cell'],[]}, {3,0}),
case element(1,Val) of
'e-UTRAN-Cell' ->
'enc_LastVisitedEUTRANCellInformation'(element(2,Val));
'uTRAN-Cell' ->
?RT_PER:encode_octet_string([],element(2,Val));
'gERAN-Cell' ->
'enc_LastVisitedGERANCellInformation'(element(2,Val))
end
].


'dec_LastVisitedCell-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {'e-UTRAN-Cell',
'dec_LastVisitedEUTRANCellInformation'(Bytes2,telltype)};
1 -> {'uTRAN-Cell',
?RT_PER:decode_octet_string(Bytes2,[])};
2 -> {'gERAN-Cell',
'dec_LastVisitedGERANCellInformation'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_LAC'({'LAC',Val}) ->
'enc_LAC'(Val);

'enc_LAC'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_LAC'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).


'enc_Key-eNodeB-Star'({'Key-eNodeB-Star',Val}) ->
'enc_Key-eNodeB-Star'(Val);

'enc_Key-eNodeB-Star'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',256}],Val,[]).


'dec_Key-eNodeB-Star'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',256}],[]).


'enc_InterfacesToTrace'({'InterfacesToTrace',Val}) ->
'enc_InterfacesToTrace'(Val);

'enc_InterfacesToTrace'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',8}],Val,[]).


'dec_InterfacesToTrace'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',8}],[]).


'enc_IntegrityProtectionAlgorithms'({'IntegrityProtectionAlgorithms',Val}) ->
'enc_IntegrityProtectionAlgorithms'(Val);

'enc_IntegrityProtectionAlgorithms'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],Val,[]).


'dec_IntegrityProtectionAlgorithms'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{16,16},[]}}],[]).

'enc_HWLoadIndicator'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,dLHWLoadIndicator) of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,dLHWLoadIndicator) end) of
'lowLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'mediumLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'highLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'overLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,uLHWLoadIndicator) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(3,Val1,uLHWLoadIndicator) end) of
'lowLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'mediumLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'highLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'overLoad' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_HWLoadIndicator_iE-Extensions'(Tmpval1)
end].

'enc_HWLoadIndicator_iE-Extensions'({'HWLoadIndicator_iE-Extensions',Val}) ->
'enc_HWLoadIndicator_iE-Extensions'(Val);

'enc_HWLoadIndicator_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_HWLoadIndicator_iE-Extensions_components'(Val, [])
].
'enc_HWLoadIndicator_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_HWLoadIndicator_iE-Extensions_components'([H|T], Acc) ->
'enc_HWLoadIndicator_iE-Extensions_components'(T, ['enc_HWLoadIndicator_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_HWLoadIndicator_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_3'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_HWLoadIndicator_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_3'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_HWLoadIndicator_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_HWLoadIndicator_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_HWLoadIndicator_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HWLoadIndicator_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HWLoadIndicator_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_HWLoadIndicator_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HWLoadIndicator'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,3}}],{{lowLoad,mediumLoad,highLoad,overLoad},{}}),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,3}}],{{lowLoad,mediumLoad,highLoad,overLoad},{}}),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_HWLoadIndicator_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'HWLoadIndicator',Term1,Term2,Term3},Bytes7}.


'enc_HFN'({'HFN',Val}) ->
'enc_HFN'(Val);

'enc_HFN'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,1048575}}],Val).


'dec_HFN'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,1048575}}]).

'enc_HandoverRestrictionList'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5,6,7],5,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,servingPLMN)),
case ?RT_PER:cindex(3,Val1,equivalentPLMNs) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedX2APEPLMNs
'enc_EPLMNs'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,forbiddenTAs) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type ExternaltypereferenceundefinedX2APForbiddenTAs
'enc_ForbiddenTAs'(Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,forbiddenLAs) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type ExternaltypereferenceundefinedX2APForbiddenLAs
'enc_ForbiddenLAs'(Tmpval3)
end,
case ?RT_PER:cindex(6,Val1,forbiddenInterRATs) of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 5 with type ENUMERATED
case (case Tmpval4 of {_,Enumval2}-> Enumval2;_->Tmpval4 end) of
'all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'geran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'utran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'cdma2000' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 6 with type SEQUENCE OF
'enc_HandoverRestrictionList_iE-Extensions'(Tmpval5)
end].

'enc_HandoverRestrictionList_iE-Extensions'({'HandoverRestrictionList_iE-Extensions',Val}) ->
'enc_HandoverRestrictionList_iE-Extensions'(Val);

'enc_HandoverRestrictionList_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_HandoverRestrictionList_iE-Extensions_components'(Val, [])
].
'enc_HandoverRestrictionList_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRestrictionList_iE-Extensions_components'([H|T], Acc) ->
'enc_HandoverRestrictionList_iE-Extensions_components'(T, ['enc_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_55'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_55'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRestrictionList_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_HandoverRestrictionList_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_HandoverRestrictionList_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRestrictionList_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_HandoverRestrictionList_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRestrictionList'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type EPLMNs
{Term2,Bytes4} = case Opt band (1 bsl 4) of
  _Opt2 when _Opt2 > 0 ->'dec_EPLMNs'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type ForbiddenTAs
{Term3,Bytes5} = case Opt band (1 bsl 3) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenTAs'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type ForbiddenLAs
{Term4,Bytes6} = case Opt band (1 bsl 2) of
  _Opt4 when _Opt4 > 0 ->'dec_ForbiddenLAs'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type ENUMERATED
{Term5,Bytes7} = case Opt band (1 bsl 1) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_enumerated(Bytes6,[{'ValueRange',{0,3}}],{{all,geran,utran,cdma2000},{}});
0 ->{asn1_NOVALUE,Bytes6}

end,

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_HandoverRestrictionList_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'HandoverRestrictionList',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.

'enc_GUMMEI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedX2APGU-Group-ID
'enc_GU-Group-ID'(?RT_PER:cindex(2,Val1,'gU-Group-ID')),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],?RT_PER:cindex(3,Val1,'mMME-Code')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_GUMMEI_iE-Extensions'(Tmpval1)
end].

'enc_GUMMEI_iE-Extensions'({'GUMMEI_iE-Extensions',Val}) ->
'enc_GUMMEI_iE-Extensions'(Val);

'enc_GUMMEI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GUMMEI_iE-Extensions_components'(Val, [])
].
'enc_GUMMEI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GUMMEI_iE-Extensions_components'([H|T], Acc) ->
'enc_GUMMEI_iE-Extensions_components'(T, ['enc_GUMMEI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GUMMEI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_64'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GUMMEI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_64'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GUMMEI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GUMMEI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GUMMEI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GUMMEI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GUMMEI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GUMMEI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GUMMEI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type GU-Group-ID
{Term1,Bytes3} = 'dec_GU-Group-ID'(Bytes2,telltype),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',1}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_GUMMEI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'GUMMEI',Term1,Term2,Term3},Bytes7}.

'enc_GU-Group-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(3,Val1,'mME-Group-ID')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_GU-Group-ID_iE-Extensions'(Tmpval1)
end].

'enc_GU-Group-ID_iE-Extensions'({'GU-Group-ID_iE-Extensions',Val}) ->
'enc_GU-Group-ID_iE-Extensions'(Val);

'enc_GU-Group-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GU-Group-ID_iE-Extensions_components'(Val, [])
].
'enc_GU-Group-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GU-Group-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_GU-Group-ID_iE-Extensions_components'(T, ['enc_GU-Group-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GU-Group-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_63'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GU-Group-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_63'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GU-Group-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GU-Group-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GU-Group-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GU-Group-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GU-Group-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GU-Group-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GU-Group-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',2}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_GU-Group-ID_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'GU-Group-ID',Term1,Term2,Term3},Bytes7}.


'enc_GUGroupIDList'({'GUGroupIDList',Val}) ->
'enc_GUGroupIDList'(Val);

'enc_GUGroupIDList'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_GUGroupIDList_components'(Val, [])
].
'enc_GUGroupIDList_components'([], Acc) -> lists:reverse(Acc);

'enc_GUGroupIDList_components'([H|T], Acc) ->
'enc_GUGroupIDList_components'(T, ['enc_GU-Group-ID'(H)

 | Acc]).


'dec_GUGroupIDList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_GUGroupIDList_components'(Num, Bytes1, telltype, []).
'dec_GUGroupIDList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GUGroupIDList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GU-Group-ID'(Bytes,telltype),
   'dec_GUGroupIDList_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_GTP-TEI'({'GTP-TEI',Val}) ->
'enc_GTP-TEI'(Val);

'enc_GTP-TEI'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Val).


'dec_GTP-TEI'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',4}]).

'enc_GTPtunnelEndpoint'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(2,Val1,transportLayerAddress),[]),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(3,Val1,'gTP-TEID')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_GTPtunnelEndpoint_iE-Extensions'(Tmpval1)
end].

'enc_GTPtunnelEndpoint_iE-Extensions'({'GTPtunnelEndpoint_iE-Extensions',Val}) ->
'enc_GTPtunnelEndpoint_iE-Extensions'(Val);

'enc_GTPtunnelEndpoint_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GTPtunnelEndpoint_iE-Extensions_components'(Val, [])
].
'enc_GTPtunnelEndpoint_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GTPtunnelEndpoint_iE-Extensions_components'([H|T], Acc) ->
'enc_GTPtunnelEndpoint_iE-Extensions_components'(T, ['enc_GTPtunnelEndpoint_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GTPtunnelEndpoint_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_41'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GTPtunnelEndpoint_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_41'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GTPtunnelEndpoint_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GTPtunnelEndpoint_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GTPtunnelEndpoint_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GTPtunnelEndpoint_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GTPtunnelEndpoint_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GTPtunnelEndpoint_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GTPtunnelEndpoint'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',4}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_GTPtunnelEndpoint_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'GTPtunnelEndpoint',Term1,Term2,Term3},Bytes7}.

'enc_GlobalENB-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APENB-ID
'enc_ENB-ID'(?RT_PER:cindex(3,Val1,'eNB-ID')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_GlobalENB-ID_iE-Extensions'(Tmpval1)
end].

'enc_GlobalENB-ID_iE-Extensions'({'GlobalENB-ID_iE-Extensions',Val}) ->
'enc_GlobalENB-ID_iE-Extensions'(Val);

'enc_GlobalENB-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GlobalENB-ID_iE-Extensions_components'(Val, [])
].
'enc_GlobalENB-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GlobalENB-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_GlobalENB-ID_iE-Extensions_components'(T, ['enc_GlobalENB-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GlobalENB-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_65'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GlobalENB-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_65'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GlobalENB-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GlobalENB-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GlobalENB-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GlobalENB-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GlobalENB-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GlobalENB-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GlobalENB-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ENB-ID
{Term2,Bytes4} = 'dec_ENB-ID'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_GlobalENB-ID_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'GlobalENB-ID',Term1,Term2,Term3},Bytes7}.

'enc_GBR-QosInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(2,Val1,'e-RAB-MaximumBitrateDL')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(3,Val1,'e-RAB-MaximumBitrateUL')),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(4,Val1,'e-RAB-GuaranteedBitrateDL')),

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(5,Val1,'e-RAB-GuaranteedBitrateUL')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_GBR-QosInformation_iE-Extensions'(Tmpval1)
end].

'enc_GBR-QosInformation_iE-Extensions'({'GBR-QosInformation_iE-Extensions',Val}) ->
'enc_GBR-QosInformation_iE-Extensions'(Val);

'enc_GBR-QosInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GBR-QosInformation_iE-Extensions_components'(Val, [])
].
'enc_GBR-QosInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GBR-QosInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_GBR-QosInformation_iE-Extensions_components'(T, ['enc_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_46'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_46'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GBR-QosInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GBR-QosInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GBR-QosInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GBR-QosInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GBR-QosInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GBR-QosInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,10000000000}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,10000000000}}]),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,10000000000}}]),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = ?RT_PER:decode_integer(Bytes5,[{'ValueRange',{0,10000000000}}]),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_GBR-QosInformation_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'GBR-QosInformation',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_ForbiddenLACs'({'ForbiddenLACs',Val}) ->
'enc_ForbiddenLACs'(Val);

'enc_ForbiddenLACs'(Val) ->
[

   ?RT_PER:encode_length({1,4096},length(Val)),
   'enc_ForbiddenLACs_components'(Val, [])
].
'enc_ForbiddenLACs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLACs_components'([H|T], Acc) ->
'enc_ForbiddenLACs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',2}],H) | Acc]).


'dec_ForbiddenLACs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,4096}),
'dec_ForbiddenLACs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLACs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLACs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]),
   'dec_ForbiddenLACs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ForbiddenLAs-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APForbiddenLACs
'enc_ForbiddenLACs'(?RT_PER:cindex(3,Val1,forbiddenLACs)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ForbiddenLAs-Item_iE-Extensions'(Tmpval1)
end].

'enc_ForbiddenLAs-Item_iE-Extensions'({'ForbiddenLAs-Item_iE-Extensions',Val}) ->
'enc_ForbiddenLAs-Item_iE-Extensions'(Val);

'enc_ForbiddenLAs-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ForbiddenLAs-Item_iE-Extensions_components'(Val, [])
].
'enc_ForbiddenLAs-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLAs-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_ForbiddenLAs-Item_iE-Extensions_components'(T, ['enc_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_54'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_54'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ForbiddenLAs-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLAs-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ForbiddenLAs-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ForbiddenLACs
{Term2,Bytes4} = 'dec_ForbiddenLACs'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenLAs-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ForbiddenLAs-Item',Term1,Term2,Term3},Bytes7}.


'enc_ForbiddenLAs'({'ForbiddenLAs',Val}) ->
'enc_ForbiddenLAs'(Val);

'enc_ForbiddenLAs'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_ForbiddenLAs_components'(Val, [])
].
'enc_ForbiddenLAs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLAs_components'([H|T], Acc) ->
'enc_ForbiddenLAs_components'(T, ['enc_ForbiddenLAs-Item'(H)

 | Acc]).


'dec_ForbiddenLAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_ForbiddenLAs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenLAs-Item'(Bytes,telltype),
   'dec_ForbiddenLAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ForbiddenTACs'({'ForbiddenTACs',Val}) ->
'enc_ForbiddenTACs'(Val);

'enc_ForbiddenTACs'(Val) ->
[

   ?RT_PER:encode_length({1,4096},length(Val)),
   'enc_ForbiddenTACs_components'(Val, [])
].
'enc_ForbiddenTACs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTACs_components'([H|T], Acc) ->
'enc_ForbiddenTACs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',2}],H) | Acc]).


'dec_ForbiddenTACs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,4096}),
'dec_ForbiddenTACs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTACs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTACs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]),
   'dec_ForbiddenTACs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ForbiddenTAs-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APForbiddenTACs
'enc_ForbiddenTACs'(?RT_PER:cindex(3,Val1,forbiddenTACs)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ForbiddenTAs-Item_iE-Extensions'(Tmpval1)
end].

'enc_ForbiddenTAs-Item_iE-Extensions'({'ForbiddenTAs-Item_iE-Extensions',Val}) ->
'enc_ForbiddenTAs-Item_iE-Extensions'(Val);

'enc_ForbiddenTAs-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ForbiddenTAs-Item_iE-Extensions_components'(Val, [])
].
'enc_ForbiddenTAs-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTAs-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_ForbiddenTAs-Item_iE-Extensions_components'(T, ['enc_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_53'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_53'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ForbiddenTAs-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTAs-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ForbiddenTAs-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ForbiddenTACs
{Term2,Bytes4} = 'dec_ForbiddenTACs'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenTAs-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ForbiddenTAs-Item',Term1,Term2,Term3},Bytes7}.


'enc_ForbiddenTAs'({'ForbiddenTAs',Val}) ->
'enc_ForbiddenTAs'(Val);

'enc_ForbiddenTAs'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_ForbiddenTAs_components'(Val, [])
].
'enc_ForbiddenTAs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTAs_components'([H|T], Acc) ->
'enc_ForbiddenTAs_components'(T, ['enc_ForbiddenTAs-Item'(H)

 | Acc]).


'dec_ForbiddenTAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_ForbiddenTAs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenTAs-Item'(Bytes,telltype),
   'dec_ForbiddenTAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ForbiddenInterRATs'({'ForbiddenInterRATs',Val}) ->
'enc_ForbiddenInterRATs'(Val);

'enc_ForbiddenInterRATs'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'geran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'utran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'cdma2000' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ForbiddenInterRATs'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{all,geran,utran,cdma2000},{}}).


'enc_EventType'({'EventType',Val}) ->
'enc_EventType'(Val);

'enc_EventType'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'change-of-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_EventType'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'change-of-serving-cell'},{}}).


'enc_EUTRANTraceID'({'EUTRANTraceID',Val}) ->
'enc_EUTRANTraceID'(Val);

'enc_EUTRANTraceID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',8}],Val).


'dec_EUTRANTraceID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',8}]).


'enc_EUTRANCellIdentifier'({'EUTRANCellIdentifier',Val}) ->
'enc_EUTRANCellIdentifier'(Val);

'enc_EUTRANCellIdentifier'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',28}],Val,[]).


'dec_EUTRANCellIdentifier'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',28}],[]).

'enc_E-RAB-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APCause
'enc_Cause'(?RT_PER:cindex(3,Val1,cause)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_E-RAB-Item_iE-Extensions'(Tmpval1)
end].

'enc_E-RAB-Item_iE-Extensions'({'E-RAB-Item_iE-Extensions',Val}) ->
'enc_E-RAB-Item_iE-Extensions'(Val);

'enc_E-RAB-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RAB-Item_iE-Extensions_components'(Val, [])
].
'enc_E-RAB-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RAB-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RAB-Item_iE-Extensions_components'(T, ['enc_E-RAB-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RAB-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_66'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RAB-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_66'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RAB-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RAB-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RAB-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RAB-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RAB-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RAB-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RAB-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type Cause
{Term2,Bytes4} = 'dec_Cause'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_E-RAB-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'E-RAB-Item',Term1,Term2,Term3},Bytes7}.


'enc_E-RAB-List'({'E-RAB-List',Val}) ->
'enc_E-RAB-List'(Val);

'enc_E-RAB-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RAB-List_components'(Val, [])
].
'enc_E-RAB-List_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RAB-List_components'([H|T], Acc) ->
'enc_E-RAB-List_components'(T, ['enc_E-RAB-List_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RAB-List_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_67'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RAB-List_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_67'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RAB-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RAB-List_components'(Num, Bytes1, telltype, []).
'dec_E-RAB-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RAB-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RAB-List_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RAB-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RAB-Level-QoS-Parameters'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4,5],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,qCI)),

%% attribute number 2 with type ExternaltypereferenceundefinedX2APAllocationAndRetentionPriority
'enc_AllocationAndRetentionPriority'(?RT_PER:cindex(3,Val1,allocationAndRetentionPriority)),
case ?RT_PER:cindex(4,Val1,gbrQosInformation) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type ExternaltypereferenceundefinedX2APGBR-QosInformation
'enc_GBR-QosInformation'(Tmpval1)
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RAB-Level-QoS-Parameters_iE-Extensions'(Tmpval2)
end].

'enc_E-RAB-Level-QoS-Parameters_iE-Extensions'({'E-RAB-Level-QoS-Parameters_iE-Extensions',Val}) ->
'enc_E-RAB-Level-QoS-Parameters_iE-Extensions'(Val);

'enc_E-RAB-Level-QoS-Parameters_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(Val, [])
].
'enc_E-RAB-Level-QoS-Parameters_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RAB-Level-QoS-Parameters_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(T, ['enc_E-RAB-Level-QoS-Parameters_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RAB-Level-QoS-Parameters_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_47'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_47'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RAB-Level-QoS-Parameters_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RAB-Level-QoS-Parameters_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RAB-Level-QoS-Parameters'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type AllocationAndRetentionPriority
{Term2,Bytes4} = 'dec_AllocationAndRetentionPriority'(Bytes3,telltype),

%%  attribute number 3 with type GBR-QosInformation
{Term3,Bytes5} = case Opt band (1 bsl 1) of
  _Opt3 when _Opt3 > 0 ->'dec_GBR-QosInformation'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RAB-Level-QoS-Parameters_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RAB-Level-QoS-Parameters',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RAB-ID'({'E-RAB-ID',Val}) ->
'enc_E-RAB-ID'(Val);

'enc_E-RAB-ID'(Val) ->
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],Val).


'dec_E-RAB-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{{'ValueRange',{0,15}},[]}]).


'enc_EPLMNs'({'EPLMNs',Val}) ->
'enc_EPLMNs'(Val);

'enc_EPLMNs'(Val) ->
[

   ?RT_PER:encode_length({1,15},length(Val)),
   'enc_EPLMNs_components'(Val, [])
].
'enc_EPLMNs_components'([], Acc) -> lists:reverse(Acc);

'enc_EPLMNs_components'([H|T], Acc) ->
'enc_EPLMNs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_EPLMNs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,15}),
'dec_EPLMNs_components'(Num, Bytes1, telltype, []).
'dec_EPLMNs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EPLMNs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_EPLMNs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_EncryptionAlgorithms'({'EncryptionAlgorithms',Val}) ->
'enc_EncryptionAlgorithms'(Val);

'enc_EncryptionAlgorithms'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],Val,[]).


'dec_EncryptionAlgorithms'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{16,16},[]}}],[]).


'enc_ENB-ID'({'ENB-ID',Val}) ->
'enc_ENB-ID'(Val);

'enc_ENB-ID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['macro-eNB-ID','home-eNB-ID'],[]}, {2,0}),
case element(1,Val) of
'macro-eNB-ID' ->
?RT_PER:encode_bit_string([{'SizeConstraint',20}],element(2,Val),[]);
'home-eNB-ID' ->
?RT_PER:encode_bit_string([{'SizeConstraint',28}],element(2,Val),[])
end
].


'dec_ENB-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {'macro-eNB-ID',
?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',20}],[])};
1 -> {'home-eNB-ID',
?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',28}],[])};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_ECGI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',28}],?RT_PER:cindex(3,Val1,eUTRANcellIdentifier),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ECGI_iE-Extensions'(Tmpval1)
end].

'enc_ECGI_iE-Extensions'({'ECGI_iE-Extensions',Val}) ->
'enc_ECGI_iE-Extensions'(Val);

'enc_ECGI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ECGI_iE-Extensions_components'(Val, [])
].
'enc_ECGI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ECGI_iE-Extensions_components'([H|T], Acc) ->
'enc_ECGI_iE-Extensions_components'(T, ['enc_ECGI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ECGI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_2'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ECGI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_2'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ECGI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ECGI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ECGI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ECGI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ECGI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ECGI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ECGI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',28}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ECGI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ECGI',Term1,Term2,Term3},Bytes7}.


'enc_EUTRA-Mode-Info'({'EUTRA-Mode-Info',Val}) ->
'enc_EUTRA-Mode-Info'(Val);

'enc_EUTRA-Mode-Info'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[fDD,tDD],[]}, {2,0}),
case element(1,Val) of
fDD ->
'enc_FDD-Info'(element(2,Val));
tDD ->
'enc_TDD-Info'(element(2,Val))
end
].


'dec_EUTRA-Mode-Info'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {fDD,
'dec_FDD-Info'(Bytes2,telltype)};
1 -> {tDD,
'dec_TDD-Info'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_TDD-Info'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,eARFCN)),

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,'transmission-Bandwidth') of {_,Enumval2}-> Enumval2;_->?RT_PER:cindex(3,Val1,'transmission-Bandwidth') end) of
'bw6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'bw15' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'bw25' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'bw50' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'bw75' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'bw100' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,subframeAssignment) of {_,Enumval4}-> Enumval4;_->?RT_PER:cindex(4,Val1,subframeAssignment) end) of
'sa0' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'sa1' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'sa2' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'sa3' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'sa4' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'sa5' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'sa6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 4 with type ExternaltypereferenceundefinedX2APSpecialSubframe-Info
'enc_SpecialSubframe-Info'(?RT_PER:cindex(5,Val1,'specialSubframe-Info')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_TDD-Info_iE-Extensions'(Tmpval1)
end].

'enc_TDD-Info_iE-Extensions'({'TDD-Info_iE-Extensions',Val}) ->
'enc_TDD-Info_iE-Extensions'(Val);

'enc_TDD-Info_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TDD-Info_iE-Extensions_components'(Val, [])
].
'enc_TDD-Info_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TDD-Info_iE-Extensions_components'([H|T], Acc) ->
'enc_TDD-Info_iE-Extensions_components'(T, ['enc_TDD-Info_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TDD-Info_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_18'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TDD-Info_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_18'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TDD-Info_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TDD-Info_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TDD-Info_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TDD-Info_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TDD-Info_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TDD-Info_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TDD-Info'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,65535}}]),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,5}}],{{bw6,bw15,bw25,bw50,bw75,bw100},{}}),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,6}}],{{sa0,sa1,sa2,sa3,sa4,sa5,sa6},{}}),

%%  attribute number 4 with type SpecialSubframe-Info
{Term4,Bytes6} = 'dec_SpecialSubframe-Info'(Bytes5,telltype),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_TDD-Info_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'TDD-Info',Term1,Term2,Term3,Term4,Term5},Bytes9}.

'enc_FDD-Info'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,'uL-EARFCN')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(3,Val1,'dL-EARFCN')),

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,'uL-Transmission-Bandwidth') of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(4,Val1,'uL-Transmission-Bandwidth') end) of
'bw6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'bw15' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'bw25' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'bw50' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'bw75' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'bw100' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 4 with type ENUMERATED
case (case ?RT_PER:cindex(5,Val1,'dL-Transmission-Bandwidth') of {_,Enumval5}-> Enumval5;_->?RT_PER:cindex(5,Val1,'dL-Transmission-Bandwidth') end) of
'bw6' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'bw15' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'bw25' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'bw50' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'bw75' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'bw100' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_FDD-Info_iE-Extensions'(Tmpval1)
end].

'enc_FDD-Info_iE-Extensions'({'FDD-Info_iE-Extensions',Val}) ->
'enc_FDD-Info_iE-Extensions'(Val);

'enc_FDD-Info_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_FDD-Info_iE-Extensions_components'(Val, [])
].
'enc_FDD-Info_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_FDD-Info_iE-Extensions_components'([H|T], Acc) ->
'enc_FDD-Info_iE-Extensions_components'(T, ['enc_FDD-Info_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_FDD-Info_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_16'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_FDD-Info_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_16'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_FDD-Info_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_FDD-Info_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_FDD-Info_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_FDD-Info_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_FDD-Info_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_FDD-Info_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_FDD-Info'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,65535}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,65535}}]),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,5}}],{{bw6,bw15,bw25,bw50,bw75,bw100},{}}),

%% attribute number 4 with type ENUMERATED
{Term4,Bytes6} = ?RT_PER:decode_enumerated(Bytes5,[{'ValueRange',{0,5}}],{{bw6,bw15,bw25,bw50,bw75,bw100},{}}),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_FDD-Info_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'FDD-Info',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_EARFCN'({'EARFCN',Val}) ->
'enc_EARFCN'(Val);

'enc_EARFCN'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_EARFCN'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_DL-Forwarding'({'DL-Forwarding',Val}) ->
'enc_DL-Forwarding'(Val);

'enc_DL-Forwarding'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'dL-forwardingProposed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_DL-Forwarding'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'dL-forwardingProposed'},{}}).


'enc_CyclicPrefixUL'({'CyclicPrefixUL',Val}) ->
'enc_CyclicPrefixUL'(Val);

'enc_CyclicPrefixUL'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'normal' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'extended' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CyclicPrefixUL'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{normal,extended},{}}).


'enc_CyclicPrefixDL'({'CyclicPrefixDL',Val}) ->
'enc_CyclicPrefixDL'(Val);

'enc_CyclicPrefixDL'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'normal' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'extended' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CyclicPrefixDL'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{normal,extended},{}}).


'enc_CriticalityDiagnostics-IE-List'({'CriticalityDiagnostics-IE-List',Val}) ->
'enc_CriticalityDiagnostics-IE-List'(Val);

'enc_CriticalityDiagnostics-IE-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CriticalityDiagnostics-IE-List_components'(Val, [])
].
'enc_CriticalityDiagnostics-IE-List_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics-IE-List_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics-IE-List_components'(T, ['enc_CriticalityDiagnostics-IE-List_SEQOF'(H)

 | Acc]).
'enc_CriticalityDiagnostics-IE-List_SEQOF'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,iECriticality) of {_,Enumval1}->Enumval1;_->?RT_PER:cindex(2,Val1,iECriticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(3,Val1,'iE-ID')),

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,typeOfError) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(4,Val1,typeOfError) end) of
'not-understood' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'missing' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'(Tmpval1)
end].

'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'({'CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions',Val}) ->
'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'(Val);

'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(Val, [])
].
'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(T, ['enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_68'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_68'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).

'dec_CriticalityDiagnostics-IE-List_SEQOF'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,65535}}]),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,1}}],{{'not-understood',missing},{}}),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_CriticalityDiagnostics-IE-List_SEQOF_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'CriticalityDiagnostics-IE-List_SEQOF',Term1,Term2,Term3,Term4},Bytes8}.



'dec_CriticalityDiagnostics-IE-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CriticalityDiagnostics-IE-List_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics-IE-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics-IE-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics-IE-List_SEQOF'(Bytes, telltype),
   'dec_CriticalityDiagnostics-IE-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_CriticalityDiagnostics'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([2,3,4,5,6],5,Val),
[
?RT_PER:setext(false), Opt,
case ?RT_PER:cindex(2,Val1,procedureCode) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Tmpval1)
end,
case ?RT_PER:cindex(3,Val1,triggeringMessage) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 2 with type ENUMERATED
case (case Tmpval2 of {_,Enumval2}->Enumval2;_->Tmpval2 end) of
'initiating-message' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'successful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'unsuccessful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(4,Val1,procedureCriticality) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 3 with type ENUMERATED
case (case Tmpval3 of {_,Enumval3}->Enumval3;_->Tmpval3 end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(5,Val1,iEsCriticalityDiagnostics) of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 4 with type Externaltypereference178X2APCriticalityDiagnostics-IE-List
'enc_CriticalityDiagnostics-IE-List'(Tmpval4)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 5 with type SEQUENCE OF
'enc_CriticalityDiagnostics_iE-Extensions'(Tmpval5)
end].

'enc_CriticalityDiagnostics_iE-Extensions'({'CriticalityDiagnostics_iE-Extensions',Val}) ->
'enc_CriticalityDiagnostics_iE-Extensions'(Val);

'enc_CriticalityDiagnostics_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CriticalityDiagnostics_iE-Extensions_components'(Val, [])
].
'enc_CriticalityDiagnostics_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics_iE-Extensions_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics_iE-Extensions_components'(T, ['enc_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_69'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_69'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CriticalityDiagnostics_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CriticalityDiagnostics_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CriticalityDiagnostics_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CriticalityDiagnostics'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = case Opt band (1 bsl 4) of
  _Opt1 when _Opt1 > 0 ->?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,255}}]);
0 ->{asn1_NOVALUE,Bytes2}

end,

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = case Opt band (1 bsl 3) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,2}}],{'initiating-message','successful-outcome','unsuccessful-outcome'});
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = case Opt band (1 bsl 2) of
  _Opt3 when _Opt3 > 0 ->?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,2}}],{reject,ignore,notify});
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type CriticalityDiagnostics-IE-List
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->'dec_CriticalityDiagnostics-IE-List'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_CriticalityDiagnostics_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'CriticalityDiagnostics',Term1,Term2,Term3,Term4,Term5},Bytes9}.

'enc_COUNTvalue'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],?RT_PER:cindex(2,Val1,'pDCP-SN')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,1048575}}],?RT_PER:cindex(3,Val1,hFN)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_COUNTvalue_iE-Extensions'(Tmpval1)
end].

'enc_COUNTvalue_iE-Extensions'({'COUNTvalue_iE-Extensions',Val}) ->
'enc_COUNTvalue_iE-Extensions'(Val);

'enc_COUNTvalue_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_COUNTvalue_iE-Extensions_components'(Val, [])
].
'enc_COUNTvalue_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_COUNTvalue_iE-Extensions_components'([H|T], Acc) ->
'enc_COUNTvalue_iE-Extensions_components'(T, ['enc_COUNTvalue_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_36'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_36'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_COUNTvalue_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_COUNTvalue_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_COUNTvalue_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_COUNTvalue_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_COUNTvalue_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_COUNTvalue'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4095}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,1048575}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_COUNTvalue_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'COUNTvalue',Term1,Term2,Term3},Bytes7}.

'enc_CellType'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,'cell-Size') of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,'cell-Size') end) of
'verysmall' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'small' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'large' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CellType_iE-Extensions'(Tmpval1)
end].

'enc_CellType_iE-Extensions'({'CellType_iE-Extensions',Val}) ->
'enc_CellType_iE-Extensions'(Val);

'enc_CellType_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellType_iE-Extensions_components'(Val, [])
].
'enc_CellType_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellType_iE-Extensions_components'([H|T], Acc) ->
'enc_CellType_iE-Extensions_components'(T, ['enc_CellType_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellType_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_59'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellType_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_59'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellType_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellType_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellType_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellType_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellType_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellType_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellType'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,3}}],{{verysmall,small,medium,large},{}}),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CellType_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CellType',Term1,Term2},Bytes6}.


'enc_Cell-Size'({'Cell-Size',Val}) ->
'enc_Cell-Size'(Val);

'enc_Cell-Size'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'verysmall' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'small' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'large' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Cell-Size'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{verysmall,small,medium,large},{}}).


'enc_CauseTransport'({'CauseTransport',Val}) ->
'enc_CauseTransport'(Val);

'enc_CauseTransport'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'transport-resource-unavailable' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseTransport'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{'transport-resource-unavailable',unspecified},{}}).


'enc_CauseRadioNetwork'({'CauseRadioNetwork',Val}) ->
'enc_CauseRadioNetwork'(Val);

'enc_CauseRadioNetwork'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'handover-desirable-for-radio-reasons' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 0)];
'time-critical-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 1)];
'resource-optimisation-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 2)];
'reduce-load-in-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 3)];
'partial-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 4)];
'unknown-new-eNB-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 5)];
'unknown-old-eNB-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 6)];
'unknown-pair-of-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 7)];
'ho-target-not-allowed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 8)];
'tx2relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 9)];
'trelocprep-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 10)];
'cell-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 11)];
'no-radio-resources-available-in-target-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 12)];
'invalid-MME-GroupID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 13)];
'unknown-MME-Code' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 14)];
'encryption-and-or-integrity-protection-algorithms-not-supported' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 15)];
'reportCharacteristicsEmpty' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 16)];
'noReportPeriodicity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 17)];
'existingMeasurementID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 18)];
'unknown-eNB-Measurement-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 19)];
'measurement-temporarily-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 20)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 21)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseRadioNetwork'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,21}}],{{'handover-desirable-for-radio-reasons','time-critical-handover','resource-optimisation-handover','reduce-load-in-serving-cell','partial-handover','unknown-new-eNB-UE-X2AP-ID','unknown-old-eNB-UE-X2AP-ID','unknown-pair-of-UE-X2AP-ID','ho-target-not-allowed','tx2relocoverall-expiry','trelocprep-expiry','cell-not-available','no-radio-resources-available-in-target-cell','invalid-MME-GroupID','unknown-MME-Code','encryption-and-or-integrity-protection-algorithms-not-supported',reportCharacteristicsEmpty,noReportPeriodicity,existingMeasurementID,'unknown-eNB-Measurement-ID','measurement-temporarily-not-available',unspecified},{}}).


'enc_CauseProtocol'({'CauseProtocol',Val}) ->
'enc_CauseProtocol'(Val);

'enc_CauseProtocol'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'transfer-syntax-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'abstract-syntax-error-reject' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'abstract-syntax-error-ignore-and-notify' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'message-not-compatible-with-receiver-state' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'semantic-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'abstract-syntax-error-falsely-constructed-message' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseProtocol'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,6}}],{{'transfer-syntax-error','abstract-syntax-error-reject','abstract-syntax-error-ignore-and-notify','message-not-compatible-with-receiver-state','semantic-error',unspecified,'abstract-syntax-error-falsely-constructed-message'},{}}).


'enc_CauseMisc'({'CauseMisc',Val}) ->
'enc_CauseMisc'(Val);

'enc_CauseMisc'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'control-processing-overload' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 0)];
'hardware-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 1)];
'om-intervention' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 2)];
'not-enough-user-plane-processing-resources' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 3)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 4)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseMisc'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,4}}],{{'control-processing-overload','hardware-failure','om-intervention','not-enough-user-plane-processing-resources',unspecified},{}}).


'enc_Cause'({'Cause',Val}) ->
'enc_Cause'(Val);

'enc_Cause'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[radioNetwork,transport,protocol,misc],[]}, {4,0}),
case element(1,Val) of
radioNetwork ->
case (case element(2,Val) of {_,Enumval1}-> Enumval1;_->element(2,Val) end) of
'handover-desirable-for-radio-reasons' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 0)];
'time-critical-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 1)];
'resource-optimisation-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 2)];
'reduce-load-in-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 3)];
'partial-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 4)];
'unknown-new-eNB-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 5)];
'unknown-old-eNB-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 6)];
'unknown-pair-of-UE-X2AP-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 7)];
'ho-target-not-allowed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 8)];
'tx2relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 9)];
'trelocprep-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 10)];
'cell-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 11)];
'no-radio-resources-available-in-target-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 12)];
'invalid-MME-GroupID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 13)];
'unknown-MME-Code' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 14)];
'encryption-and-or-integrity-protection-algorithms-not-supported' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 15)];
'reportCharacteristicsEmpty' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 16)];
'noReportPeriodicity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 17)];
'existingMeasurementID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 18)];
'unknown-eNB-Measurement-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 19)];
'measurement-temporarily-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 20)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,21}}], 21)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
transport ->
case (case element(2,Val) of {_,Enumval3}-> Enumval3;_->element(2,Val) end) of
'transport-resource-unavailable' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
protocol ->
case (case element(2,Val) of {_,Enumval5}-> Enumval5;_->element(2,Val) end) of
'transfer-syntax-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'abstract-syntax-error-reject' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'abstract-syntax-error-ignore-and-notify' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'message-not-compatible-with-receiver-state' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'semantic-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'abstract-syntax-error-falsely-constructed-message' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
misc ->
case (case element(2,Val) of {_,Enumval7}-> Enumval7;_->element(2,Val) end) of
'control-processing-overload' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 0)];
'hardware-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 1)];
'om-intervention' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 2)];
'not-enough-user-plane-processing-resources' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 3)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 4)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end
].


'dec_Cause'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,4,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*4 of
0 -> {radioNetwork,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,21}}],{{'handover-desirable-for-radio-reasons','time-critical-handover','resource-optimisation-handover','reduce-load-in-serving-cell','partial-handover','unknown-new-eNB-UE-X2AP-ID','unknown-old-eNB-UE-X2AP-ID','unknown-pair-of-UE-X2AP-ID','ho-target-not-allowed','tx2relocoverall-expiry','trelocprep-expiry','cell-not-available','no-radio-resources-available-in-target-cell','invalid-MME-GroupID','unknown-MME-Code','encryption-and-or-integrity-protection-algorithms-not-supported',reportCharacteristicsEmpty,noReportPeriodicity,existingMeasurementID,'unknown-eNB-Measurement-ID','measurement-temporarily-not-available',unspecified},{}})};
1 -> {transport,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,1}}],{{'transport-resource-unavailable',unspecified},{}})};
2 -> {protocol,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,6}}],{{'transfer-syntax-error','abstract-syntax-error-reject','abstract-syntax-error-ignore-and-notify','message-not-compatible-with-receiver-state','semantic-error',unspecified,'abstract-syntax-error-falsely-constructed-message'},{}})};
3 -> {misc,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,4}}],{{'control-processing-overload','hardware-failure','om-intervention','not-enough-user-plane-processing-resources',unspecified},{}})};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_BroadcastPLMNs-Item'({'BroadcastPLMNs-Item',Val}) ->
'enc_BroadcastPLMNs-Item'(Val);

'enc_BroadcastPLMNs-Item'(Val) ->
[

   ?RT_PER:encode_length({1,6},length(Val)),
   'enc_BroadcastPLMNs-Item_components'(Val, [])
].
'enc_BroadcastPLMNs-Item_components'([], Acc) -> lists:reverse(Acc);

'enc_BroadcastPLMNs-Item_components'([H|T], Acc) ->
'enc_BroadcastPLMNs-Item_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_BroadcastPLMNs-Item'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,6}),
'dec_BroadcastPLMNs-Item_components'(Num, Bytes1, telltype, []).
'dec_BroadcastPLMNs-Item_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_BroadcastPLMNs-Item_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_BroadcastPLMNs-Item_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_BitRate'({'BitRate',Val}) ->
'enc_BitRate'(Val);

'enc_BitRate'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],Val).


'dec_BitRate'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,10000000000}}]).

'enc_AllocationAndRetentionPriority'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,15}}],?RT_PER:cindex(2,Val1,priorityLevel),[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]),

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,'pre-emptionCapability') of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,'pre-emptionCapability') end) of
'shall-not-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'may-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,'pre-emptionVulnerability') of {_,Enumval3}->Enumval3;_->?RT_PER:cindex(4,Val1,'pre-emptionVulnerability') end) of
'not-pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_AllocationAndRetentionPriority_iE-Extensions'(Tmpval1)
end].

'enc_AllocationAndRetentionPriority_iE-Extensions'({'AllocationAndRetentionPriority_iE-Extensions',Val}) ->
'enc_AllocationAndRetentionPriority_iE-Extensions'(Val);

'enc_AllocationAndRetentionPriority_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_AllocationAndRetentionPriority_iE-Extensions_components'(Val, [])
].
'enc_AllocationAndRetentionPriority_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_AllocationAndRetentionPriority_iE-Extensions_components'([H|T], Acc) ->
'enc_AllocationAndRetentionPriority_iE-Extensions_components'(T, ['enc_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_45'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_45'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_AllocationAndRetentionPriority_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_AllocationAndRetentionPriority'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,15}}],[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,1}}],{'shall-not-trigger-pre-emption','may-trigger-pre-emption'}),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,1}}],{'not-pre-emptable','pre-emptable'}),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_AllocationAndRetentionPriority_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'AllocationAndRetentionPriority',Term1,Term2,Term3,Term4},Bytes8}.

'enc_AS-SecurityInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',256}],?RT_PER:cindex(2,Val1,'key-eNodeB-star'),[]),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,7}}],?RT_PER:cindex(3,Val1,nextHopChainingCount)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_AS-SecurityInformation_iE-Extensions'(Tmpval1)
end].

'enc_AS-SecurityInformation_iE-Extensions'({'AS-SecurityInformation_iE-Extensions',Val}) ->
'enc_AS-SecurityInformation_iE-Extensions'(Val);

'enc_AS-SecurityInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_AS-SecurityInformation_iE-Extensions_components'(Val, [])
].
'enc_AS-SecurityInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_AS-SecurityInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_AS-SecurityInformation_iE-Extensions_components'(T, ['enc_AS-SecurityInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_AS-SecurityInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'X2AP':'getenc_internal_object_set_argument_51'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_AS-SecurityInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'X2AP':'getdec_internal_object_set_argument_51'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_AS-SecurityInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_AS-SecurityInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_AS-SecurityInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_AS-SecurityInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_AS-SecurityInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_AS-SecurityInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_AS-SecurityInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',256}],[]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,7}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_AS-SecurityInformation_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'AS-SecurityInformation',Term1,Term2,Term3},Bytes7}.

'enc_UnsuccessfulOutcome'(Val) ->
Val1 = ?RT_PER:list_to_record('UnsuccessfulOutcome', Val),
ObjprocedureCode = 
  'X2AP':'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldUnsuccessfulOutcome
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('UnsuccessfulOutcome', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_UnsuccessfulOutcome'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type UnsuccessfulOutcome
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'X2AP':'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('UnsuccessfulOutcome', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'UnsuccessfulOutcome',Term1,Term2,Term3},Bytes3}.

'enc_SuccessfulOutcome'(Val) ->
Val1 = ?RT_PER:list_to_record('SuccessfulOutcome', Val),
ObjprocedureCode = 
  'X2AP':'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldSuccessfulOutcome
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('SuccessfulOutcome', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_SuccessfulOutcome'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type SuccessfulOutcome
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'X2AP':'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('SuccessfulOutcome', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'SuccessfulOutcome',Term1,Term2,Term3},Bytes3}.

'enc_InitiatingMessage'(Val) ->
Val1 = ?RT_PER:list_to_record('InitiatingMessage', Val),
ObjprocedureCode = 
  'X2AP':'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldInitiatingMessage
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('InitiatingMessage', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_InitiatingMessage'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type InitiatingMessage
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'X2AP':'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('InitiatingMessage', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'InitiatingMessage',Term1,Term2,Term3},Bytes3}.


'enc_X2AP-PDU'({'X2AP-PDU',Val}) ->
'enc_X2AP-PDU'(Val);

'enc_X2AP-PDU'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[initiatingMessage,successfulOutcome,unsuccessfulOutcome],[]}, {3,0}),
case element(1,Val) of
initiatingMessage ->
'enc_InitiatingMessage'(element(2,Val));
successfulOutcome ->
'enc_SuccessfulOutcome'(element(2,Val));
unsuccessfulOutcome ->
'enc_UnsuccessfulOutcome'(element(2,Val))
end
].


'dec_X2AP-PDU'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {initiatingMessage,
'dec_InitiatingMessage'(Bytes2,telltype)};
1 -> {successfulOutcome,
'dec_SuccessfulOutcome'(Bytes2,telltype)};
2 -> {unsuccessfulOutcome,
'dec_UnsuccessfulOutcome'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'id-ENB2-Measurement-ID'() ->
40.

'id-ENB1-Measurement-ID'() ->
39.

'id-ReportCharacteristics'() ->
38.

'id-Measurement-ID'() ->
37.

'id-SRVCCOperationPossible'() ->
36.

'id-GUGroupIDToDeleteList'() ->
35.

'id-GUGroupIDToAddList'() ->
34.

'id-CellMeasurementResult-Item'() ->
33.

'id-CellMeasurementResult'() ->
32.

'id-CellToReport-Item'() ->
31.

'id-ReportingPeriodicity'() ->
30.

'id-CellToReport'() ->
29.

'id-Registration-Request'() ->
28.

'id-ServedCellsToDelete'() ->
27.

'id-ServedCellsToModify'() ->
26.

'id-ServedCellsToAdd'() ->
25.

'id-GUGroupIDList'() ->
24.

'id-GUMMEI-ID'() ->
23.

'id-TimeToWait'() ->
22.

'id-GlobalENB-ID'() ->
21.

'id-ServedCells'() ->
20.

'id-E-RABs-SubjectToStatusTransfer-Item'() ->
19.

'id-E-RABs-SubjectToStatusTransfer-List'() ->
18.

'id-CriticalityDiagnostics'() ->
17.

'id-UE-X2AP-ID'() ->
16.

'id-UE-HistoryInformation'() ->
15.

'id-UE-ContextInformation'() ->
14.

'id-TraceActivation'() ->
13.

'id-TargeteNBtoSource-eNBTransparentContainer'() ->
12.

'id-TargetCell-ID'() ->
11.

'id-Old-eNB-UE-X2AP-ID'() ->
10.

'id-New-eNB-UE-X2AP-ID'() ->
9.

'id-CellInformation-Item'() ->
7.

'id-CellInformation'() ->
6.

'id-Cause'() ->
5.

'id-E-RABs-ToBeSetup-Item'() ->
4.

'id-E-RABs-NotAdmitted-List'() ->
3.

'id-E-RAB-Item'() ->
2.

'id-E-RABs-Admitted-List'() ->
1.

'id-E-RABs-Admitted-Item'() ->
0.

'maxnoofCells'() ->
16.

'maxPools'() ->
16.

'maxnoofPRBs'() ->
110.

'maxnoofNeighbours'() ->
512.

'maxnoofBPLMNs'() ->
6.

'maxnoofForbTACs'() ->
4096.

'maxnoofForbLACs'() ->
4096.

'maxnoofEPLMNsPlusOne'() ->
16.

'maxnoofEPLMNs'() ->
15.

'maxnoofPDCP-SN'() ->
16.

'maxNrOfErrors'() ->
256.

'maxnoofBearers'() ->
256.

'maxCellineNB'() ->
256.

'maxInterfaces'() ->
16.

'maxEARFCN'() ->
65535.

'id-privateMessage'() ->
11.

'id-resourceStatusReporting'() ->
10.

'id-resourceStatusReportingInitiation'() ->
9.

'id-eNBConfigurationUpdate'() ->
8.

'id-reset'() ->
7.

'id-x2Setup'() ->
6.

'id-uEContextRelease'() ->
5.

'id-snStatusTransfer'() ->
4.

'id-errorIndication'() ->
3.

'id-loadIndication'() ->
2.

'id-handoverCancel'() ->
1.

'id-handoverPreparation'() ->
0.

'maxProtocolIEs'() ->
65535.

'maxProtocolExtensions'() ->
65535.

'maxPrivateIEs'() ->
65535.




%%================================
%%  privateMessage
%%================================
'enc_privateMessage'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_PrivateMessage'(Val);
'enc_privateMessage'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_privateMessage'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_privateMessage'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_PrivateMessage'(Bytes, telltype);
'dec_privateMessage'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_privateMessage'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  resourceStatusReporting
%%================================
'enc_resourceStatusReporting'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ResourceStatusUpdate'(Val);
'enc_resourceStatusReporting'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_resourceStatusReporting'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_resourceStatusReporting'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ResourceStatusUpdate'(Bytes, telltype);
'dec_resourceStatusReporting'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_resourceStatusReporting'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  resourceStatusReportingInitiation
%%================================
'enc_resourceStatusReportingInitiation'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ResourceStatusRequest'(Val);
'enc_resourceStatusReportingInitiation'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ResourceStatusResponse'(Val);
'enc_resourceStatusReportingInitiation'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ResourceStatusFailure'(Val).


'dec_resourceStatusReportingInitiation'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ResourceStatusRequest'(Bytes, telltype);
'dec_resourceStatusReportingInitiation'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ResourceStatusResponse'(Bytes, telltype);
'dec_resourceStatusReportingInitiation'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ResourceStatusFailure'(Bytes, telltype).





%%================================
%%  eNBConfigurationUpdate
%%================================
'enc_eNBConfigurationUpdate'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdate'(Val);
'enc_eNBConfigurationUpdate'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdateAcknowledge'(Val);
'enc_eNBConfigurationUpdate'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdateFailure'(Val).


'dec_eNBConfigurationUpdate'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdate'(Bytes, telltype);
'dec_eNBConfigurationUpdate'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdateAcknowledge'(Bytes, telltype);
'dec_eNBConfigurationUpdate'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdateFailure'(Bytes, telltype).





%%================================
%%  loadIndication
%%================================
'enc_loadIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_LoadInformation'(Val);
'enc_loadIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_loadIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_loadIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_LoadInformation'(Bytes, telltype);
'dec_loadIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_loadIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  x2Setup
%%================================
'enc_x2Setup'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_X2SetupRequest'(Val);
'enc_x2Setup'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_X2SetupResponse'(Val);
'enc_x2Setup'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_X2SetupFailure'(Val).


'dec_x2Setup'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_X2SetupRequest'(Bytes, telltype);
'dec_x2Setup'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_X2SetupResponse'(Bytes, telltype);
'dec_x2Setup'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_X2SetupFailure'(Bytes, telltype).





%%================================
%%  reset
%%================================
'enc_reset'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ResetRequest'(Val);
'enc_reset'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ResetResponse'(Val);
'enc_reset'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_reset'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ResetRequest'(Bytes, telltype);
'dec_reset'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ResetResponse'(Bytes, telltype);
'dec_reset'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  errorIndication
%%================================
'enc_errorIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ErrorIndication'(Val);
'enc_errorIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_errorIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_errorIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ErrorIndication'(Bytes, telltype);
'dec_errorIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_errorIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  handoverCancel
%%================================
'enc_handoverCancel'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverCancel'(Val);
'enc_handoverCancel'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_handoverCancel'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_handoverCancel'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverCancel'(Bytes, telltype);
'dec_handoverCancel'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_handoverCancel'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uEContextRelease
%%================================
'enc_uEContextRelease'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UEContextRelease'(Val);
'enc_uEContextRelease'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_uEContextRelease'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uEContextRelease'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextRelease'(Bytes, telltype);
'dec_uEContextRelease'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_uEContextRelease'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  snStatusTransfer
%%================================
'enc_snStatusTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_SNStatusTransfer'(Val);
'enc_snStatusTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_snStatusTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_snStatusTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_SNStatusTransfer'(Bytes, telltype);
'dec_snStatusTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_snStatusTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  handoverPreparation
%%================================
'enc_handoverPreparation'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverRequest'(Val);
'enc_handoverPreparation'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverRequestAcknowledge'(Val);
'enc_handoverPreparation'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverPreparationFailure'(Val).


'dec_handoverPreparation'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverRequest'(Bytes, telltype);
'dec_handoverPreparation'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverRequestAcknowledge'(Bytes, telltype);
'dec_handoverPreparation'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverPreparationFailure'(Bytes, telltype).





%%================================
%%  CellMeasurementResult-Item-ExtIEs
%%================================
'getenc_CellMeasurementResult-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellMeasurementResult-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellMeasurementResult-ItemIEs
%%================================
'getenc_CellMeasurementResult-ItemIEs'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellMeasurementResult-Item'(Val)
      end
   end;
'getenc_CellMeasurementResult-ItemIEs'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_CellMeasurementResult-ItemIEs'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellMeasurementResult-Item'(Val, telltype)
      end
   end;
'getdec_CellMeasurementResult-ItemIEs'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  ResourceStatusUpdate-IEs
%%================================
'getenc_ResourceStatusUpdate-IEs'(id,32) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellMeasurementResult-List'(Val)
      end
   end;
'getenc_ResourceStatusUpdate-IEs'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusUpdate-IEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusUpdate-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResourceStatusUpdate-IEs'(id,32) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellMeasurementResult-List'(Val, telltype)
      end
   end;
'getdec_ResourceStatusUpdate-IEs'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusUpdate-IEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusUpdate-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResourceStatusFailure-IEs
%%================================
'getenc_ResourceStatusFailure-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ResourceStatusFailure-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ResourceStatusFailure-IEs'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusFailure-IEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusFailure-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResourceStatusFailure-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ResourceStatusFailure-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ResourceStatusFailure-IEs'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusFailure-IEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusFailure-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResourceStatusResponse-IEs
%%================================
'getenc_ResourceStatusResponse-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ResourceStatusResponse-IEs'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusResponse-IEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusResponse-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResourceStatusResponse-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ResourceStatusResponse-IEs'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusResponse-IEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusResponse-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellToReport-Item-ExtIEs
%%================================
'getenc_CellToReport-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellToReport-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellToReport-ItemIEs
%%================================
'getenc_CellToReport-ItemIEs'(id,31) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellToReport-Item'(Val)
      end
   end;
'getenc_CellToReport-ItemIEs'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_CellToReport-ItemIEs'(id,31) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellToReport-Item'(Val, telltype)
      end
   end;
'getdec_CellToReport-ItemIEs'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  ResourceStatusRequest-IEs
%%================================
'getenc_ResourceStatusRequest-IEs'(id,28) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Registration-Request'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(id,29) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellToReport-List'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(id,30) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ReportingPeriodicity'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(id,38) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ReportCharacteristics'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_ResourceStatusRequest-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResourceStatusRequest-IEs'(id,28) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Registration-Request'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(id,29) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellToReport-List'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(id,30) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ReportingPeriodicity'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(id,38) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ReportCharacteristics'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_ResourceStatusRequest-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdateFailure-IEs
%%================================
'getenc_ENBConfigurationUpdateFailure-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailure-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailure-IEs'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailure-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdateFailure-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailure-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailure-IEs'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailure-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdateAcknowledge-IEs
%%================================
'getenc_ENBConfigurationUpdateAcknowledge-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateAcknowledge-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdateAcknowledge-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateAcknowledge-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ServedCellsToModify-Item-ExtIEs
%%================================
'getenc_ServedCellsToModify-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ServedCellsToModify-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdate-IEs
%%================================
'getenc_ENBConfigurationUpdate-IEs'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_ENBConfigurationUpdate-IEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCellsToModify'(Val)
      end
   end;
'getenc_ENBConfigurationUpdate-IEs'(id,27) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Old-ECGIs'(Val)
      end
   end;
'getenc_ENBConfigurationUpdate-IEs'(id,34) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_ENBConfigurationUpdate-IEs'(id,35) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_ENBConfigurationUpdate-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdate-IEs'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdate-IEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCellsToModify'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdate-IEs'(id,27) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Old-ECGIs'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdate-IEs'(id,34) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdate-IEs'(id,35) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdate-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellInformation-Item-ExtIEs
%%================================
'getenc_CellInformation-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellInformation-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellInformation-ItemIEs
%%================================
'getenc_CellInformation-ItemIEs'(id,7) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellInformation-Item'(Val)
      end
   end;
'getenc_CellInformation-ItemIEs'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_CellInformation-ItemIEs'(id,7) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellInformation-Item'(Val, telltype)
      end
   end;
'getdec_CellInformation-ItemIEs'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  LoadInformation-IEs
%%================================
'getenc_LoadInformation-IEs'(id,6) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellInformation-List'(Val)
      end
   end;
'getenc_LoadInformation-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LoadInformation-IEs'(id,6) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellInformation-List'(Val, telltype)
      end
   end;
'getdec_LoadInformation-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2SetupFailure-IEs
%%================================
'getenc_X2SetupFailure-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_X2SetupFailure-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_X2SetupFailure-IEs'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_X2SetupFailure-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2SetupFailure-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_X2SetupFailure-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_X2SetupFailure-IEs'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_X2SetupFailure-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2SetupResponse-IEs
%%================================
'getenc_X2SetupResponse-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_X2SetupResponse-IEs'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_X2SetupResponse-IEs'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GlobalENB-ID'(Val)
      end
   end;
'getenc_X2SetupResponse-IEs'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_X2SetupResponse-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2SetupResponse-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_X2SetupResponse-IEs'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_X2SetupResponse-IEs'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GlobalENB-ID'(Val, telltype)
      end
   end;
'getdec_X2SetupResponse-IEs'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_X2SetupResponse-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2SetupRequest-IEs
%%================================
'getenc_X2SetupRequest-IEs'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_X2SetupRequest-IEs'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GlobalENB-ID'(Val)
      end
   end;
'getenc_X2SetupRequest-IEs'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_X2SetupRequest-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2SetupRequest-IEs'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_X2SetupRequest-IEs'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GlobalENB-ID'(Val, telltype)
      end
   end;
'getdec_X2SetupRequest-IEs'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_X2SetupRequest-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResetResponse-IEs
%%================================
'getenc_ResetResponse-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ResetResponse-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResetResponse-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ResetResponse-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResetRequest-IEs
%%================================
'getenc_ResetRequest-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ResetRequest-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResetRequest-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ResetRequest-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ErrorIndication-IEs
%%================================
'getenc_ErrorIndication-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ErrorIndication-IEs'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_ErrorIndication-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_ErrorIndication-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ErrorIndication-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ErrorIndication-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ErrorIndication-IEs'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_ErrorIndication-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_ErrorIndication-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ErrorIndication-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverCancel-IEs
%%================================
'getenc_HandoverCancel-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverCancel-IEs'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverCancel-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverCancel-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverCancel-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverCancel-IEs'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancel-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancel-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextRelease-IEs
%%================================
'getenc_UEContextRelease-IEs'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_UEContextRelease-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_UEContextRelease-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextRelease-IEs'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextRelease-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextRelease-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-SubjectToStatusTransfer-ItemExtIEs
%%================================
'getenc_E-RABs-SubjectToStatusTransfer-ItemExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABs-SubjectToStatusTransfer-ItemExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-SubjectToStatusTransfer-ItemIEs
%%================================
'getenc_E-RABs-SubjectToStatusTransfer-ItemIEs'(id,19) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-SubjectToStatusTransfer-Item'(Val)
      end
   end;
'getenc_E-RABs-SubjectToStatusTransfer-ItemIEs'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_E-RABs-SubjectToStatusTransfer-ItemIEs'(id,19) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-SubjectToStatusTransfer-Item'(Val, telltype)
      end
   end;
'getdec_E-RABs-SubjectToStatusTransfer-ItemIEs'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  SNStatusTransfer-IEs
%%================================
'getenc_SNStatusTransfer-IEs'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_SNStatusTransfer-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_SNStatusTransfer-IEs'(id,18) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-SubjectToStatusTransfer-List'(Val)
      end
   end;
'getenc_SNStatusTransfer-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SNStatusTransfer-IEs'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_SNStatusTransfer-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_SNStatusTransfer-IEs'(id,18) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-SubjectToStatusTransfer-List'(Val, telltype)
      end
   end;
'getdec_SNStatusTransfer-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverPreparationFailure-IEs
%%================================
'getenc_HandoverPreparationFailure-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverPreparationFailure-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverPreparationFailure-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverPreparationFailure-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverPreparationFailure-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailure-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailure-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailure-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-Admitted-Item-ExtIEs
%%================================
'getenc_E-RABs-Admitted-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABs-Admitted-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-Admitted-ItemIEs
%%================================
'getenc_E-RABs-Admitted-ItemIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-Admitted-Item'(Val)
      end
   end;
'getenc_E-RABs-Admitted-ItemIEs'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_E-RABs-Admitted-ItemIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-Admitted-Item'(Val, telltype)
      end
   end;
'getdec_E-RABs-Admitted-ItemIEs'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  HandoverRequestAcknowledge-IEs
%%================================
'getenc_HandoverRequestAcknowledge-IEs'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-Admitted-List'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(id,3) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RAB-List'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TargeteNBtoSource-eNBTransparentContainer'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledge-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRequestAcknowledge-IEs'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-Admitted-List'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(id,3) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RAB-List'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TargeteNBtoSource-eNBTransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledge-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-ToBeSetup-ItemExtIEs
%%================================
'getenc_E-RABs-ToBeSetup-ItemExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABs-ToBeSetup-ItemExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABs-ToBeSetup-ItemIEs
%%================================
'getenc_E-RABs-ToBeSetup-ItemIEs'(id,4) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-ToBeSetup-Item'(Val)
      end
   end;
'getenc_E-RABs-ToBeSetup-ItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABs-ToBeSetup-ItemIEs'(id,4) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-ToBeSetup-Item'(Val, telltype)
      end
   end;
'getdec_E-RABs-ToBeSetup-ItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UE-ContextInformation-ExtIEs
%%================================
'getenc_UE-ContextInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UE-ContextInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRequest-IEs
%%================================
'getenc_HandoverRequest-IEs'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,11) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ECGI'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,13) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,14) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-ContextInformation'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,15) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-HistoryInformation'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,23) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUMMEI'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(id,36) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_HandoverRequest-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRequest-IEs'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,11) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ECGI'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,13) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,14) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-ContextInformation'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,15) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-HistoryInformation'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,23) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUMMEI'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(id,36) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_HandoverRequest-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UL-HighInterferenceIndicationInfo-Item-ExtIEs
%%================================
'getenc_UL-HighInterferenceIndicationInfo-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UL-HighInterferenceIndicationInfo-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UESecurityCapabilities-ExtIEs
%%================================
'getenc_UESecurityCapabilities-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UESecurityCapabilities-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEAggregate-MaximumBitrate-ExtIEs
%%================================
'getenc_UEAggregate-MaximumBitrate-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEAggregate-MaximumBitrate-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TraceActivation-ExtIEs
%%================================
'getenc_TraceActivation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TraceActivation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SpecialSubframe-Info-ExtIEs
%%================================
'getenc_SpecialSubframe-Info-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SpecialSubframe-Info-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ServedCell-Information-ExtIEs
%%================================
'getenc_ServedCell-Information-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ServedCell-Information-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ServedCell-ExtIEs
%%================================
'getenc_ServedCell-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ServedCell-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1TNLLoadIndicator-ExtIEs
%%================================
'getenc_S1TNLLoadIndicator-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1TNLLoadIndicator-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  RadioResourceStatus-ExtIEs
%%================================
'getenc_RadioResourceStatus-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_RadioResourceStatus-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  RelativeNarrowbandTxPower-ExtIEs
%%================================
'getenc_RelativeNarrowbandTxPower-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_RelativeNarrowbandTxPower-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  Neighbour-Information-ExtIEs
%%================================
'getenc_Neighbour-Information-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_Neighbour-Information-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LocationReportingInformation-ExtIEs
%%================================
'getenc_LocationReportingInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LocationReportingInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LastVisitedEUTRANCellInformation-ExtIEs
%%================================
'getenc_LastVisitedEUTRANCellInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LastVisitedEUTRANCellInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HWLoadIndicator-ExtIEs
%%================================
'getenc_HWLoadIndicator-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HWLoadIndicator-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRestrictionList-ExtIEs
%%================================
'getenc_HandoverRestrictionList-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRestrictionList-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GUMMEI-ExtIEs
%%================================
'getenc_GUMMEI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GUMMEI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GU-Group-ID-ExtIEs
%%================================
'getenc_GU-Group-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GU-Group-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GTPtunnelEndpoint-ExtIEs
%%================================
'getenc_GTPtunnelEndpoint-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GTPtunnelEndpoint-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GlobalENB-ID-ExtIEs
%%================================
'getenc_GlobalENB-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GlobalENB-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GBR-QosInformation-ExtIEs
%%================================
'getenc_GBR-QosInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GBR-QosInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ForbiddenLAs-Item-ExtIEs
%%================================
'getenc_ForbiddenLAs-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ForbiddenLAs-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ForbiddenTAs-Item-ExtIEs
%%================================
'getenc_ForbiddenTAs-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ForbiddenTAs-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RAB-Item-ExtIEs
%%================================
'getenc_E-RAB-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RAB-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RAB-ItemIEs
%%================================
'getenc_E-RAB-ItemIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RAB-Item'(Val)
      end
   end;
'getenc_E-RAB-ItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RAB-ItemIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RAB-Item'(Val, telltype)
      end
   end;
'getdec_E-RAB-ItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RAB-Level-QoS-Parameters-ExtIEs
%%================================
'getenc_E-RAB-Level-QoS-Parameters-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RAB-Level-QoS-Parameters-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ECGI-ExtIEs
%%================================
'getenc_ECGI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ECGI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TDD-Info-ExtIEs
%%================================
'getenc_TDD-Info-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TDD-Info-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  FDD-Info-ExtIEs
%%================================
'getenc_FDD-Info-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_FDD-Info-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CriticalityDiagnostics-IE-List-ExtIEs
%%================================
'getenc_CriticalityDiagnostics-IE-List-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CriticalityDiagnostics-IE-List-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CriticalityDiagnostics-ExtIEs
%%================================
'getenc_CriticalityDiagnostics-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CriticalityDiagnostics-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  COUNTvalue-ExtIEs
%%================================
'getenc_COUNTvalue-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_COUNTvalue-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellType-ExtIEs
%%================================
'getenc_CellType-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellType-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  AllocationAndRetentionPriority-ExtIEs
%%================================
'getenc_AllocationAndRetentionPriority-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_AllocationAndRetentionPriority-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  AS-SecurityInformation-ExtIEs
%%================================
'getenc_AS-SecurityInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_AS-SecurityInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2AP-ELEMENTARY-PROCEDURES-CLASS-2
%%================================
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,3) ->
    fun 'enc_errorIndication'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,1) ->
    fun 'enc_handoverCancel'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,2) ->
    fun 'enc_loadIndication'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,11) ->
    fun 'enc_privateMessage'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,10) ->
    fun 'enc_resourceStatusReporting'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,4) ->
    fun 'enc_snStatusTransfer'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,5) ->
    fun 'enc_uEContextRelease'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,3) ->
    fun 'dec_errorIndication'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,1) ->
    fun 'dec_handoverCancel'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,2) ->
    fun 'dec_loadIndication'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,11) ->
    fun 'dec_privateMessage'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,10) ->
    fun 'dec_resourceStatusReporting'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,4) ->
    fun 'dec_snStatusTransfer'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,5) ->
    fun 'dec_uEContextRelease'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-2'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2AP-ELEMENTARY-PROCEDURES-CLASS-1
%%================================
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,8) ->
    fun 'enc_eNBConfigurationUpdate'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,0) ->
    fun 'enc_handoverPreparation'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,7) ->
    fun 'enc_reset'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,9) ->
    fun 'enc_resourceStatusReportingInitiation'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,6) ->
    fun 'enc_x2Setup'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,8) ->
    fun 'dec_eNBConfigurationUpdate'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,0) ->
    fun 'dec_handoverPreparation'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,7) ->
    fun 'dec_reset'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,9) ->
    fun 'dec_resourceStatusReportingInitiation'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,6) ->
    fun 'dec_x2Setup'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES-CLASS-1'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2AP-ELEMENTARY-PROCEDURES
%%================================
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,8) ->
    fun 'enc_eNBConfigurationUpdate'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,3) ->
    fun 'enc_errorIndication'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,1) ->
    fun 'enc_handoverCancel'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,0) ->
    fun 'enc_handoverPreparation'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,2) ->
    fun 'enc_loadIndication'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,11) ->
    fun 'enc_privateMessage'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,7) ->
    fun 'enc_reset'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,10) ->
    fun 'enc_resourceStatusReporting'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,9) ->
    fun 'enc_resourceStatusReportingInitiation'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,4) ->
    fun 'enc_snStatusTransfer'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,5) ->
    fun 'enc_uEContextRelease'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,6) ->
    fun 'enc_x2Setup'/3;
'getenc_X2AP-ELEMENTARY-PROCEDURES'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,8) ->
    fun 'dec_eNBConfigurationUpdate'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,3) ->
    fun 'dec_errorIndication'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,1) ->
    fun 'dec_handoverCancel'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,0) ->
    fun 'dec_handoverPreparation'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,2) ->
    fun 'dec_loadIndication'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,11) ->
    fun 'dec_privateMessage'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,7) ->
    fun 'dec_reset'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,10) ->
    fun 'dec_resourceStatusReporting'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,9) ->
    fun 'dec_resourceStatusReportingInitiation'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,4) ->
    fun 'dec_snStatusTransfer'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,5) ->
    fun 'dec_uEContextRelease'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(procedureCode,6) ->
    fun 'dec_x2Setup'/4;
'getdec_X2AP-ELEMENTARY-PROCEDURES'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_59
%%================================
'getenc_internal_object_set_argument_59'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_59'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_69
%%================================
'getenc_internal_object_set_argument_69'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_69'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_9
%%================================
'getenc_internal_object_set_argument_9'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_9'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_9'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_9'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_9'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_9'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_9'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_9'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_9'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_9'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_39
%%================================
'getenc_internal_object_set_argument_39'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_39'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_39'(id,18) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-SubjectToStatusTransfer-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_39'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_39'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_39'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_39'(id,18) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-SubjectToStatusTransfer-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_39'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_49
%%================================
'getenc_internal_object_set_argument_49'(id,4) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-ToBeSetup-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_49'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_49'(id,4) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-ToBeSetup-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_49'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_19
%%================================
'getenc_internal_object_set_argument_19'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_19'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_29
%%================================
'getenc_internal_object_set_argument_29'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_29'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_internal_object_set_argument_29'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GlobalENB-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_29'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_internal_object_set_argument_29'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_29'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_29'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_29'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GlobalENB-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_29'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_29'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_58
%%================================
'getenc_internal_object_set_argument_58'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,11) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ECGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,13) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,14) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-ContextInformation'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,15) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-HistoryInformation'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,23) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUMMEI'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,36) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_58'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,11) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ECGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,13) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,14) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-ContextInformation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,15) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-HistoryInformation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,23) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUMMEI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,36) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_68
%%================================
'getenc_internal_object_set_argument_68'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_68'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_8
%%================================
'getenc_internal_object_set_argument_8'(id,32) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellMeasurementResult-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_8'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_8'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_8'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_8'(id,32) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellMeasurementResult-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_8'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_8'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_8'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_38
%%================================
'getenc_internal_object_set_argument_38'(id,19) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-SubjectToStatusTransfer-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_38'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_38'(id,19) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-SubjectToStatusTransfer-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_38'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_48
%%================================
'getenc_internal_object_set_argument_48'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_48'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_18
%%================================
'getenc_internal_object_set_argument_18'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_18'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_28
%%================================
'getenc_internal_object_set_argument_28'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_28'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_28'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_internal_object_set_argument_28'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_28'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_28'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_28'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_28'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_57
%%================================
'getenc_internal_object_set_argument_57'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_57'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_67
%%================================
'getenc_internal_object_set_argument_67'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RAB-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_67'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_67'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RAB-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_67'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_7
%%================================
'getenc_internal_object_set_argument_7'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellMeasurementResult-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_7'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_7'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellMeasurementResult-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_7'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_37
%%================================
'getenc_internal_object_set_argument_37'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_37'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_47
%%================================
'getenc_internal_object_set_argument_47'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_47'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_17
%%================================
'getenc_internal_object_set_argument_17'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_17'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_27
%%================================
'getenc_internal_object_set_argument_27'(id,6) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellInformation-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_27'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_27'(id,6) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellInformation-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_27'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_56
%%================================
'getenc_internal_object_set_argument_56'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_56'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_66
%%================================
'getenc_internal_object_set_argument_66'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_66'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_6
%%================================
'getenc_internal_object_set_argument_6'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_6'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_36
%%================================
'getenc_internal_object_set_argument_36'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_36'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_46
%%================================
'getenc_internal_object_set_argument_46'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_46'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_16
%%================================
'getenc_internal_object_set_argument_16'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_16'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_26
%%================================
'getenc_internal_object_set_argument_26'(id,7) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellInformation-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_26'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_26'(id,7) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellInformation-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_26'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_55
%%================================
'getenc_internal_object_set_argument_55'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_55'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_65
%%================================
'getenc_internal_object_set_argument_65'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_65'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_5
%%================================
'getenc_internal_object_set_argument_5'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_5'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_35
%%================================
'getenc_internal_object_set_argument_35'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_35'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_35'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_35'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_35'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_35'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_45
%%================================
'getenc_internal_object_set_argument_45'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_45'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_15
%%================================
'getenc_internal_object_set_argument_15'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_15'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_15'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_15'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_25
%%================================
'getenc_internal_object_set_argument_25'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_25'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_54
%%================================
'getenc_internal_object_set_argument_54'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_54'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_64
%%================================
'getenc_internal_object_set_argument_64'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_64'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_4
%%================================
'getenc_internal_object_set_argument_4'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_4'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_34
%%================================
'getenc_internal_object_set_argument_34'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_34'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_34'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_34'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_34'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_34'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_34'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_34'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_44
%%================================
'getenc_internal_object_set_argument_44'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-Admitted-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id,3) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RAB-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TargeteNBtoSource-eNBTransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_44'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_44'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-Admitted-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id,3) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RAB-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TargeteNBtoSource-eNBTransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_44'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_14
%%================================
'getenc_internal_object_set_argument_14'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_14'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_14'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_internal_object_set_argument_14'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_14'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_14'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_14'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_14'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_24
%%================================
'getenc_internal_object_set_argument_24'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_24'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_53
%%================================
'getenc_internal_object_set_argument_53'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_53'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_63
%%================================
'getenc_internal_object_set_argument_63'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_63'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_3
%%================================
'getenc_internal_object_set_argument_3'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_3'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_33
%%================================
'getenc_internal_object_set_argument_33'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_33'(id,9) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_33'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_33'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_33'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_33'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_33'(id,9) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_33'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_33'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_33'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_43
%%================================
'getenc_internal_object_set_argument_43'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABs-Admitted-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_43'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_43'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABs-Admitted-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_43'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_13
%%================================
'getenc_internal_object_set_argument_13'(id,28) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Registration-Request'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id,29) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellToReport-List'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id,30) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ReportingPeriodicity'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id,38) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ReportCharacteristics'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_13'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_13'(id,28) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Registration-Request'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id,29) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellToReport-List'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id,30) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ReportingPeriodicity'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id,38) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ReportCharacteristics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_13'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_23
%%================================
'getenc_internal_object_set_argument_23'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_23'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_52
%%================================
'getenc_internal_object_set_argument_52'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_52'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_62
%%================================
'getenc_internal_object_set_argument_62'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_62'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_2
%%================================
'getenc_internal_object_set_argument_2'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_2'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_32
%%================================
'getenc_internal_object_set_argument_32'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_32'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_32'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_32'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_42
%%================================
'getenc_internal_object_set_argument_42'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_42'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_12
%%================================
'getenc_internal_object_set_argument_12'(id,31) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CellToReport-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_12'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_12'(id,31) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CellToReport-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_12'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_22
%%================================
'getenc_internal_object_set_argument_22'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCellsToModify'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id,27) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Old-ECGIs'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id,34) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id,35) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_22'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCellsToModify'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id,27) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Old-ECGIs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id,34) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id,35) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_51
%%================================
'getenc_internal_object_set_argument_51'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_51'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_61
%%================================
'getenc_internal_object_set_argument_61'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_61'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_31
%%================================
'getenc_internal_object_set_argument_31'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_31'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_31'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_31'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_41
%%================================
'getenc_internal_object_set_argument_41'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_41'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_11
%%================================
'getenc_internal_object_set_argument_11'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_11'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_21
%%================================
'getenc_internal_object_set_argument_21'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_21'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_50
%%================================
'getenc_internal_object_set_argument_50'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_50'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_60
%%================================
'getenc_internal_object_set_argument_60'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_60'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_30
%%================================
'getenc_internal_object_set_argument_30'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedCells'(Val)
      end
   end;
'getenc_internal_object_set_argument_30'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GlobalENB-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_30'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUGroupIDList'(Val)
      end
   end;
'getenc_internal_object_set_argument_30'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_30'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedCells'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_30'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GlobalENB-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_30'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUGroupIDList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_30'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_40
%%================================
'getenc_internal_object_set_argument_40'(id,5) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_40'(id,10) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-X2AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_40'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_40'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_40'(id,5) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_40'(id,10) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-X2AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_40'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_40'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_10
%%================================
'getenc_internal_object_set_argument_10'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_10'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_10'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Measurement-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_10'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_10'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_10'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_10'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Measurement-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_10'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_20
%%================================
'getenc_internal_object_set_argument_20'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_20'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.


