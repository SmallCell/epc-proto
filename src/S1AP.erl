%% Generated by the Erlang ASN.1 PER-compiler version:1.7
%% Purpose: encoder and decoder to the types in mod S1AP

-module('S1AP').
-include("S1AP.hrl").
-define('RT_PER',asn1rt_per_bin).
-asn1_info([{vsn,'1.7'},
            {module,'S1AP'},
            {options,[{i,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,115,114,99]},warnings,ber,errors,{cwd,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111]},{outdir,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,115,114,99]},per,verbose,asn1config,{i,[46]},{i,[47,108,111,99,97,108,47,118,108,97,100,47,114,101,112,111,115,47,109,109,101,115,105,109,47,101,112,99,95,112,114,111,116,111,47,112,114,111,116,111,99,111,108,115]}]}]).

-export([encoding_rule/0]).
-export([
'enc_UnsuccessfulOutcome'/1,
'enc_SuccessfulOutcome'/1,
'enc_InitiatingMessage'/1,
'enc_S1AP-PDU'/1,
'enc_X2TNLConfigurationInfo'/1,
'enc_WarningMessageContents'/1,
'enc_WarningSecurityInfo'/1,
'enc_WarningType'/1,
'enc_WarningAreaList'/1,
'enc_UESecurityCapabilities'/1,
'enc_UERadioCapability'/1,
'enc_UEPagingID'/1,
'enc_UE-HistoryInformation'/1,
'enc_UEIdentityIndexValue'/1,
'enc_UE-associatedLogicalS1-ConnectionItem'/1,
'enc_UE-S1AP-ID-pair'/1,
'enc_UE-S1AP-IDs'/1,
'enc_UEAggregateMaximumBitrate'/1,
'enc_TypeOfError'/1,
'enc_E-UTRAN-Trace-ID'/1,
'enc_TraceDepth'/1,
'enc_TraceActivation'/1,
'enc_TransportLayerAddress'/1,
'enc_Time-UE-StayedInCell'/1,
'enc_TimeToWait'/1,
'enc_TargetBSS-ToSourceBSS-TransparentContainer'/1,
'enc_TargetRNC-ToSourceRNC-TransparentContainer'/1,
'enc_Target-ToSource-TransparentContainer'/1,
'enc_TargeteNB-ToSourceeNB-TransparentContainer'/1,
'enc_TargetRNC-ID'/1,
'enc_TargeteNB-ID'/1,
'enc_TargetID'/1,
'enc_TBCD-STRING'/1,
'enc_CompletedCellinTAI-Item'/1,
'enc_CompletedCellinTAI'/1,
'enc_TAI-Broadcast-Item'/1,
'enc_TAI-Broadcast'/1,
'enc_TAI'/1,
'enc_TAIListforWarning'/1,
'enc_TAC'/1,
'enc_S-TMSI'/1,
'enc_SupportedTAs-Item'/1,
'enc_SupportedTAs'/1,
'enc_SubscriberProfileIDforRFP'/1,
'enc_ServedPLMNs'/1,
'enc_ServedMMECs'/1,
'enc_ServedGroupIDs'/1,
'enc_ServedGUMMEIsItem'/1,
'enc_ServedGUMMEIs'/1,
'enc_SourceRNC-ToTargetRNC-TransparentContainer'/1,
'enc_SourceeNB-ToTargeteNB-TransparentContainer'/1,
'enc_SRVCCHOIndication'/1,
'enc_SRVCCOperationPossible'/1,
'enc_SourceeNB-ID'/1,
'enc_SourceBSS-ToTargetBSS-TransparentContainer'/1,
'enc_Source-ToTarget-TransparentContainer'/1,
'enc_SONConfigurationTransfer'/1,
'enc_SONInformationReply'/1,
'enc_SONInformationRequest'/1,
'enc_SONInformation'/1,
'enc_SerialNumber'/1,
'enc_SecurityContext'/1,
'enc_SecurityKey'/1,
'enc_RRC-Establishment-Cause'/1,
'enc_RRC-Container'/1,
'enc_RNC-ID'/1,
'enc_RepetitionPeriod'/1,
'enc_ReportArea'/1,
'enc_RIMRoutingAddress'/1,
'enc_RIMInformation'/1,
'enc_RIMTransfer'/1,
'enc_RequestType'/1,
'enc_RAC'/1,
'enc_RelativeMMECapacity'/1,
'enc_ReceiveStatusofULPDCPSDUs'/1,
'enc_QCI'/1,
'enc_PriorityLevel'/1,
'enc_Pre-emptionVulnerability'/1,
'enc_Pre-emptionCapability'/1,
'enc_PLMNidentity'/1,
'enc_PDCP-SN'/1,
'enc_PagingDRX'/1,
'enc_OverloadResponse'/1,
'enc_OverloadAction'/1,
'enc_OldBSS-ToNewBSS-Information'/1,
'enc_NumberofBroadcast'/1,
'enc_NumberofBroadcastRequest'/1,
'enc_NASSecurityParameterstoE-UTRAN'/1,
'enc_NASSecurityParametersfromE-UTRAN'/1,
'enc_NAS-PDU'/1,
'enc_MSClassmark3'/1,
'enc_MSClassmark2'/1,
'enc_M-TMSI'/1,
'enc_MME-UE-S1AP-ID'/1,
'enc_MME-Code'/1,
'enc_MME-Group-ID'/1,
'enc_MMEname'/1,
'enc_MessageIdentifier'/1,
'enc_L3-Information'/1,
'enc_LastVisitedGERANCellInformation'/1,
'enc_LastVisitedUTRANCellInformation'/1,
'enc_LastVisitedEUTRANCellInformation'/1,
'enc_LastVisitedCell-Item'/1,
'enc_LAI'/1,
'enc_LAC'/1,
'enc_InterfacesToTrace'/1,
'enc_IntegrityProtectionAlgorithms'/1,
'enc_IMSI'/1,
'enc_HFN'/1,
'enc_HandoverType'/1,
'enc_HandoverRestrictionList'/1,
'enc_GUMMEI'/1,
'enc_GTP-TEID'/1,
'enc_GBR-QosInformation'/1,
'enc_ForbiddenLACs'/1,
'enc_ForbiddenLAs-Item'/1,
'enc_ForbiddenLAs'/1,
'enc_ForbiddenTACs'/1,
'enc_ForbiddenTAs-Item'/1,
'enc_ForbiddenTAs'/1,
'enc_ForbiddenInterRATs'/1,
'enc_ExtendedRNC-ID'/1,
'enc_EUTRAN-CGI'/1,
'enc_E-RABLevelQoSParameters'/1,
'enc_E-RABItem'/1,
'enc_E-RABList'/1,
'enc_E-RABInformationListItem'/1,
'enc_E-RABInformationList'/1,
'enc_E-RAB-ID'/1,
'enc_EventType'/1,
'enc_EPLMNs'/1,
'enc_EncryptionAlgorithms'/1,
'enc_ENBX2TLAs'/1,
'enc_ENBname'/1,
'enc_ENB-UE-S1AP-ID'/1,
'enc_ENB-StatusTransfer-TransparentContainer'/1,
'enc_Global-ENB-ID'/1,
'enc_GERAN-Cell-ID'/1,
'enc_ENB-ID'/1,
'enc_CompletedCellinEAI-Item'/1,
'enc_CompletedCellinEAI'/1,
'enc_EmergencyAreaID-Broadcast-Item'/1,
'enc_EmergencyAreaID-Broadcast'/1,
'enc_EmergencyAreaID'/1,
'enc_EmergencyAreaIDList'/1,
'enc_ECGIList'/1,
'enc_Direct-Forwarding-Path-Availability'/1,
'enc_DL-Forwarding'/1,
'enc_DataCodingScheme'/1,
'enc_CriticalityDiagnostics-IE-Item'/1,
'enc_CriticalityDiagnostics-IE-List'/1,
'enc_CriticalityDiagnostics'/1,
'enc_COUNTvalue'/1,
'enc_CSG-IdList-Item'/1,
'enc_CSG-IdList'/1,
'enc_CSG-Id'/1,
'enc_CSFallbackIndicator'/1,
'enc_CNDomain'/1,
'enc_CI'/1,
'enc_CGI'/1,
'enc_CellType'/1,
'enc_Cell-Size'/1,
'enc_Cdma2000OneXRAND'/1,
'enc_Cdma2000OneXPilot'/1,
'enc_Cdma2000OneXMSI'/1,
'enc_Cdma2000OneXMEID'/1,
'enc_Cdma2000OneXSRVCCInfo'/1,
'enc_Cdma2000HORequiredIndication'/1,
'enc_Cdma2000HOStatus'/1,
'enc_Cdma2000SectorID'/1,
'enc_Cdma2000RATType'/1,
'enc_Cdma2000PDU'/1,
'enc_CellID-Broadcast-Item'/1,
'enc_CellID-Broadcast'/1,
'enc_CellIdentity'/1,
'enc_CauseNas'/1,
'enc_CauseTransport'/1,
'enc_CauseRadioNetwork'/1,
'enc_CauseProtocol'/1,
'enc_CauseMisc'/1,
'enc_Cause'/1,
'enc_BroadcastCompletedAreaList'/1,
'enc_BPLMNs'/1,
'enc_BitRate'/1,
'enc_Bearers-SubjectToStatusTransfer-Item'/1,
'enc_Bearers-SubjectToStatusTransferList'/1,
'enc_AllocationAndRetentionPriority'/1,
'enc_TriggeringMessage'/1,
'enc_ProtocolIE-ID'/1,
'enc_ProtocolExtensionID'/1,
'enc_ProcedureCode'/1,
'enc_PrivateIE-ID'/1,
'enc_Presence'/1,
'enc_Criticality'/1,
'enc_PrivateMessage'/1,
'enc_MMEConfigurationTransfer'/1,
'enc_ENBConfigurationTransfer'/1,
'enc_MMEDirectInformationTransfer'/1,
'enc_Inter-SystemInformationTransferType'/1,
'enc_ENBDirectInformationTransfer'/1,
'enc_WriteReplaceWarningResponse'/1,
'enc_WriteReplaceWarningRequest'/1,
'enc_OverloadStop'/1,
'enc_OverloadStart'/1,
'enc_LocationReport'/1,
'enc_LocationReportingFailureIndication'/1,
'enc_LocationReportingControl'/1,
'enc_CellTrafficTrace'/1,
'enc_DeactivateTrace'/1,
'enc_TraceFailureIndication'/1,
'enc_TraceStart'/1,
'enc_MMEStatusTransfer'/1,
'enc_ENBStatusTransfer'/1,
'enc_UECapabilityInfoIndication'/1,
'enc_UplinkS1cdma2000tunneling'/1,
'enc_DownlinkS1cdma2000tunneling'/1,
'enc_MMEConfigurationUpdateFailure'/1,
'enc_MMEConfigurationUpdateAcknowledge'/1,
'enc_MMEConfigurationUpdate'/1,
'enc_ENBConfigurationUpdateFailure'/1,
'enc_ENBConfigurationUpdateAcknowledge'/1,
'enc_ENBConfigurationUpdate'/1,
'enc_S1SetupFailure'/1,
'enc_S1SetupResponse'/1,
'enc_S1SetupRequest'/1,
'enc_ErrorIndication'/1,
'enc_UE-associatedLogicalS1-ConnectionListResAck'/1,
'enc_ResetAcknowledge'/1,
'enc_UE-associatedLogicalS1-ConnectionListRes'/1,
'enc_ResetAll'/1,
'enc_ResetType'/1,
'enc_Reset'/1,
'enc_NASNonDeliveryIndication'/1,
'enc_UplinkNASTransport'/1,
'enc_InitialUEMessage'/1,
'enc_DownlinkNASTransport'/1,
'enc_UEContextModificationFailure'/1,
'enc_UEContextModificationResponse'/1,
'enc_UEContextModificationRequest'/1,
'enc_UEContextReleaseComplete'/1,
'enc_UEContextReleaseCommand'/1,
'enc_UEContextReleaseRequest'/1,
'enc_TAIItem'/1,
'enc_TAIList'/1,
'enc_Paging'/1,
'enc_InitialContextSetupFailure'/1,
'enc_E-RABSetupItemCtxtSURes'/1,
'enc_E-RABSetupListCtxtSURes'/1,
'enc_InitialContextSetupResponse'/1,
'enc_E-RABToBeSetupItemCtxtSUReq'/1,
'enc_E-RABToBeSetupListCtxtSUReq'/1,
'enc_InitialContextSetupRequest'/1,
'enc_E-RABReleaseIndication'/1,
'enc_E-RABReleaseItemBearerRelComp'/1,
'enc_E-RABReleaseListBearerRelComp'/1,
'enc_E-RABReleaseResponse'/1,
'enc_E-RABReleaseCommand'/1,
'enc_E-RABModifyItemBearerModRes'/1,
'enc_E-RABModifyListBearerModRes'/1,
'enc_E-RABModifyResponse'/1,
'enc_E-RABToBeModifiedItemBearerModReq'/1,
'enc_E-RABToBeModifiedListBearerModReq'/1,
'enc_E-RABModifyRequest'/1,
'enc_E-RABSetupItemBearerSURes'/1,
'enc_E-RABSetupListBearerSURes'/1,
'enc_E-RABSetupResponse'/1,
'enc_E-RABToBeSetupItemBearerSUReq'/1,
'enc_E-RABToBeSetupListBearerSUReq'/1,
'enc_E-RABSetupRequest'/1,
'enc_HandoverCancelAcknowledge'/1,
'enc_HandoverCancel'/1,
'enc_PathSwitchRequestFailure'/1,
'enc_E-RABToBeSwitchedULItem'/1,
'enc_E-RABToBeSwitchedULList'/1,
'enc_PathSwitchRequestAcknowledge'/1,
'enc_E-RABToBeSwitchedDLItem'/1,
'enc_E-RABToBeSwitchedDLList'/1,
'enc_PathSwitchRequest'/1,
'enc_HandoverNotify'/1,
'enc_HandoverFailure'/1,
'enc_E-RABFailedToSetupItemHOReqAck'/1,
'enc_E-RABFailedtoSetupListHOReqAck'/1,
'enc_E-RABAdmittedItem'/1,
'enc_E-RABAdmittedList'/1,
'enc_HandoverRequestAcknowledge'/1,
'enc_E-RABToBeSetupItemHOReq'/1,
'enc_E-RABToBeSetupListHOReq'/1,
'enc_HandoverRequest'/1,
'enc_HandoverPreparationFailure'/1,
'enc_E-RABDataForwardingItem'/1,
'enc_E-RABSubjecttoDataForwardingList'/1,
'enc_HandoverCommand'/1,
'enc_HandoverRequired'/1
]).

-export([
'dec_UnsuccessfulOutcome'/2,
'dec_SuccessfulOutcome'/2,
'dec_InitiatingMessage'/2,
'dec_S1AP-PDU'/2,
'dec_X2TNLConfigurationInfo'/2,
'dec_WarningMessageContents'/2,
'dec_WarningSecurityInfo'/2,
'dec_WarningType'/2,
'dec_WarningAreaList'/2,
'dec_UESecurityCapabilities'/2,
'dec_UERadioCapability'/2,
'dec_UEPagingID'/2,
'dec_UE-HistoryInformation'/2,
'dec_UEIdentityIndexValue'/2,
'dec_UE-associatedLogicalS1-ConnectionItem'/2,
'dec_UE-S1AP-ID-pair'/2,
'dec_UE-S1AP-IDs'/2,
'dec_UEAggregateMaximumBitrate'/2,
'dec_TypeOfError'/2,
'dec_E-UTRAN-Trace-ID'/2,
'dec_TraceDepth'/2,
'dec_TraceActivation'/2,
'dec_TransportLayerAddress'/2,
'dec_Time-UE-StayedInCell'/2,
'dec_TimeToWait'/2,
'dec_TargetBSS-ToSourceBSS-TransparentContainer'/2,
'dec_TargetRNC-ToSourceRNC-TransparentContainer'/2,
'dec_Target-ToSource-TransparentContainer'/2,
'dec_TargeteNB-ToSourceeNB-TransparentContainer'/2,
'dec_TargetRNC-ID'/2,
'dec_TargeteNB-ID'/2,
'dec_TargetID'/2,
'dec_TBCD-STRING'/2,
'dec_CompletedCellinTAI-Item'/2,
'dec_CompletedCellinTAI'/2,
'dec_TAI-Broadcast-Item'/2,
'dec_TAI-Broadcast'/2,
'dec_TAI'/2,
'dec_TAIListforWarning'/2,
'dec_TAC'/2,
'dec_S-TMSI'/2,
'dec_SupportedTAs-Item'/2,
'dec_SupportedTAs'/2,
'dec_SubscriberProfileIDforRFP'/2,
'dec_ServedPLMNs'/2,
'dec_ServedMMECs'/2,
'dec_ServedGroupIDs'/2,
'dec_ServedGUMMEIsItem'/2,
'dec_ServedGUMMEIs'/2,
'dec_SourceRNC-ToTargetRNC-TransparentContainer'/2,
'dec_SourceeNB-ToTargeteNB-TransparentContainer'/2,
'dec_SRVCCHOIndication'/2,
'dec_SRVCCOperationPossible'/2,
'dec_SourceeNB-ID'/2,
'dec_SourceBSS-ToTargetBSS-TransparentContainer'/2,
'dec_Source-ToTarget-TransparentContainer'/2,
'dec_SONConfigurationTransfer'/2,
'dec_SONInformationReply'/2,
'dec_SONInformationRequest'/2,
'dec_SONInformation'/2,
'dec_SerialNumber'/2,
'dec_SecurityContext'/2,
'dec_SecurityKey'/2,
'dec_RRC-Establishment-Cause'/2,
'dec_RRC-Container'/2,
'dec_RNC-ID'/2,
'dec_RepetitionPeriod'/2,
'dec_ReportArea'/2,
'dec_RIMRoutingAddress'/2,
'dec_RIMInformation'/2,
'dec_RIMTransfer'/2,
'dec_RequestType'/2,
'dec_RAC'/2,
'dec_RelativeMMECapacity'/2,
'dec_ReceiveStatusofULPDCPSDUs'/2,
'dec_QCI'/2,
'dec_PriorityLevel'/2,
'dec_Pre-emptionVulnerability'/2,
'dec_Pre-emptionCapability'/2,
'dec_PLMNidentity'/2,
'dec_PDCP-SN'/2,
'dec_PagingDRX'/2,
'dec_OverloadResponse'/2,
'dec_OverloadAction'/2,
'dec_OldBSS-ToNewBSS-Information'/2,
'dec_NumberofBroadcast'/2,
'dec_NumberofBroadcastRequest'/2,
'dec_NASSecurityParameterstoE-UTRAN'/2,
'dec_NASSecurityParametersfromE-UTRAN'/2,
'dec_NAS-PDU'/2,
'dec_MSClassmark3'/2,
'dec_MSClassmark2'/2,
'dec_M-TMSI'/2,
'dec_MME-UE-S1AP-ID'/2,
'dec_MME-Code'/2,
'dec_MME-Group-ID'/2,
'dec_MMEname'/2,
'dec_MessageIdentifier'/2,
'dec_L3-Information'/2,
'dec_LastVisitedGERANCellInformation'/2,
'dec_LastVisitedUTRANCellInformation'/2,
'dec_LastVisitedEUTRANCellInformation'/2,
'dec_LastVisitedCell-Item'/2,
'dec_LAI'/2,
'dec_LAC'/2,
'dec_InterfacesToTrace'/2,
'dec_IntegrityProtectionAlgorithms'/2,
'dec_IMSI'/2,
'dec_HFN'/2,
'dec_HandoverType'/2,
'dec_HandoverRestrictionList'/2,
'dec_GUMMEI'/2,
'dec_GTP-TEID'/2,
'dec_GBR-QosInformation'/2,
'dec_ForbiddenLACs'/2,
'dec_ForbiddenLAs-Item'/2,
'dec_ForbiddenLAs'/2,
'dec_ForbiddenTACs'/2,
'dec_ForbiddenTAs-Item'/2,
'dec_ForbiddenTAs'/2,
'dec_ForbiddenInterRATs'/2,
'dec_ExtendedRNC-ID'/2,
'dec_EUTRAN-CGI'/2,
'dec_E-RABLevelQoSParameters'/2,
'dec_E-RABItem'/2,
'dec_E-RABList'/2,
'dec_E-RABInformationListItem'/2,
'dec_E-RABInformationList'/2,
'dec_E-RAB-ID'/2,
'dec_EventType'/2,
'dec_EPLMNs'/2,
'dec_EncryptionAlgorithms'/2,
'dec_ENBX2TLAs'/2,
'dec_ENBname'/2,
'dec_ENB-UE-S1AP-ID'/2,
'dec_ENB-StatusTransfer-TransparentContainer'/2,
'dec_Global-ENB-ID'/2,
'dec_GERAN-Cell-ID'/2,
'dec_ENB-ID'/2,
'dec_CompletedCellinEAI-Item'/2,
'dec_CompletedCellinEAI'/2,
'dec_EmergencyAreaID-Broadcast-Item'/2,
'dec_EmergencyAreaID-Broadcast'/2,
'dec_EmergencyAreaID'/2,
'dec_EmergencyAreaIDList'/2,
'dec_ECGIList'/2,
'dec_Direct-Forwarding-Path-Availability'/2,
'dec_DL-Forwarding'/2,
'dec_DataCodingScheme'/2,
'dec_CriticalityDiagnostics-IE-Item'/2,
'dec_CriticalityDiagnostics-IE-List'/2,
'dec_CriticalityDiagnostics'/2,
'dec_COUNTvalue'/2,
'dec_CSG-IdList-Item'/2,
'dec_CSG-IdList'/2,
'dec_CSG-Id'/2,
'dec_CSFallbackIndicator'/2,
'dec_CNDomain'/2,
'dec_CI'/2,
'dec_CGI'/2,
'dec_CellType'/2,
'dec_Cell-Size'/2,
'dec_Cdma2000OneXRAND'/2,
'dec_Cdma2000OneXPilot'/2,
'dec_Cdma2000OneXMSI'/2,
'dec_Cdma2000OneXMEID'/2,
'dec_Cdma2000OneXSRVCCInfo'/2,
'dec_Cdma2000HORequiredIndication'/2,
'dec_Cdma2000HOStatus'/2,
'dec_Cdma2000SectorID'/2,
'dec_Cdma2000RATType'/2,
'dec_Cdma2000PDU'/2,
'dec_CellID-Broadcast-Item'/2,
'dec_CellID-Broadcast'/2,
'dec_CellIdentity'/2,
'dec_CauseNas'/2,
'dec_CauseTransport'/2,
'dec_CauseRadioNetwork'/2,
'dec_CauseProtocol'/2,
'dec_CauseMisc'/2,
'dec_Cause'/2,
'dec_BroadcastCompletedAreaList'/2,
'dec_BPLMNs'/2,
'dec_BitRate'/2,
'dec_Bearers-SubjectToStatusTransfer-Item'/2,
'dec_Bearers-SubjectToStatusTransferList'/2,
'dec_AllocationAndRetentionPriority'/2,
'dec_TriggeringMessage'/2,
'dec_ProtocolIE-ID'/2,
'dec_ProtocolExtensionID'/2,
'dec_ProcedureCode'/2,
'dec_PrivateIE-ID'/2,
'dec_Presence'/2,
'dec_Criticality'/2,
'dec_PrivateMessage'/2,
'dec_MMEConfigurationTransfer'/2,
'dec_ENBConfigurationTransfer'/2,
'dec_MMEDirectInformationTransfer'/2,
'dec_Inter-SystemInformationTransferType'/2,
'dec_ENBDirectInformationTransfer'/2,
'dec_WriteReplaceWarningResponse'/2,
'dec_WriteReplaceWarningRequest'/2,
'dec_OverloadStop'/2,
'dec_OverloadStart'/2,
'dec_LocationReport'/2,
'dec_LocationReportingFailureIndication'/2,
'dec_LocationReportingControl'/2,
'dec_CellTrafficTrace'/2,
'dec_DeactivateTrace'/2,
'dec_TraceFailureIndication'/2,
'dec_TraceStart'/2,
'dec_MMEStatusTransfer'/2,
'dec_ENBStatusTransfer'/2,
'dec_UECapabilityInfoIndication'/2,
'dec_UplinkS1cdma2000tunneling'/2,
'dec_DownlinkS1cdma2000tunneling'/2,
'dec_MMEConfigurationUpdateFailure'/2,
'dec_MMEConfigurationUpdateAcknowledge'/2,
'dec_MMEConfigurationUpdate'/2,
'dec_ENBConfigurationUpdateFailure'/2,
'dec_ENBConfigurationUpdateAcknowledge'/2,
'dec_ENBConfigurationUpdate'/2,
'dec_S1SetupFailure'/2,
'dec_S1SetupResponse'/2,
'dec_S1SetupRequest'/2,
'dec_ErrorIndication'/2,
'dec_UE-associatedLogicalS1-ConnectionListResAck'/2,
'dec_ResetAcknowledge'/2,
'dec_UE-associatedLogicalS1-ConnectionListRes'/2,
'dec_ResetAll'/2,
'dec_ResetType'/2,
'dec_Reset'/2,
'dec_NASNonDeliveryIndication'/2,
'dec_UplinkNASTransport'/2,
'dec_InitialUEMessage'/2,
'dec_DownlinkNASTransport'/2,
'dec_UEContextModificationFailure'/2,
'dec_UEContextModificationResponse'/2,
'dec_UEContextModificationRequest'/2,
'dec_UEContextReleaseComplete'/2,
'dec_UEContextReleaseCommand'/2,
'dec_UEContextReleaseRequest'/2,
'dec_TAIItem'/2,
'dec_TAIList'/2,
'dec_Paging'/2,
'dec_InitialContextSetupFailure'/2,
'dec_E-RABSetupItemCtxtSURes'/2,
'dec_E-RABSetupListCtxtSURes'/2,
'dec_InitialContextSetupResponse'/2,
'dec_E-RABToBeSetupItemCtxtSUReq'/2,
'dec_E-RABToBeSetupListCtxtSUReq'/2,
'dec_InitialContextSetupRequest'/2,
'dec_E-RABReleaseIndication'/2,
'dec_E-RABReleaseItemBearerRelComp'/2,
'dec_E-RABReleaseListBearerRelComp'/2,
'dec_E-RABReleaseResponse'/2,
'dec_E-RABReleaseCommand'/2,
'dec_E-RABModifyItemBearerModRes'/2,
'dec_E-RABModifyListBearerModRes'/2,
'dec_E-RABModifyResponse'/2,
'dec_E-RABToBeModifiedItemBearerModReq'/2,
'dec_E-RABToBeModifiedListBearerModReq'/2,
'dec_E-RABModifyRequest'/2,
'dec_E-RABSetupItemBearerSURes'/2,
'dec_E-RABSetupListBearerSURes'/2,
'dec_E-RABSetupResponse'/2,
'dec_E-RABToBeSetupItemBearerSUReq'/2,
'dec_E-RABToBeSetupListBearerSUReq'/2,
'dec_E-RABSetupRequest'/2,
'dec_HandoverCancelAcknowledge'/2,
'dec_HandoverCancel'/2,
'dec_PathSwitchRequestFailure'/2,
'dec_E-RABToBeSwitchedULItem'/2,
'dec_E-RABToBeSwitchedULList'/2,
'dec_PathSwitchRequestAcknowledge'/2,
'dec_E-RABToBeSwitchedDLItem'/2,
'dec_E-RABToBeSwitchedDLList'/2,
'dec_PathSwitchRequest'/2,
'dec_HandoverNotify'/2,
'dec_HandoverFailure'/2,
'dec_E-RABFailedToSetupItemHOReqAck'/2,
'dec_E-RABFailedtoSetupListHOReqAck'/2,
'dec_E-RABAdmittedItem'/2,
'dec_E-RABAdmittedList'/2,
'dec_HandoverRequestAcknowledge'/2,
'dec_E-RABToBeSetupItemHOReq'/2,
'dec_E-RABToBeSetupListHOReq'/2,
'dec_HandoverRequest'/2,
'dec_HandoverPreparationFailure'/2,
'dec_E-RABDataForwardingItem'/2,
'dec_E-RABSubjecttoDataForwardingList'/2,
'dec_HandoverCommand'/2,
'dec_HandoverRequired'/2
]).

-export([
'id-Target-ToSource-TransparentContainer-Secondary'/0,
'id-Source-ToTarget-TransparentContainer-Secondary'/0,
'id-DefaultPagingDRX'/0,
'id-NASSecurityParameterstoE-UTRAN'/0,
'id-NASSecurityParametersfromE-UTRAN'/0,
'id-RRC-Establishment-Cause'/0,
'id-MSClassmark3'/0,
'id-MSClassmark2'/0,
'id-TraceCollectionEntityIPAddress'/0,
'id-SONConfigurationTransferMCT'/0,
'id-SONConfigurationTransferECT'/0,
'id-CSG-IdList'/0,
'id-CSG-Id'/0,
'id-NAS-DownlinkCount'/0,
'id-SRVCCHOIndication'/0,
'id-SRVCCOperationPossible'/0,
'id-Target-ToSource-TransparentContainer'/0,
'id-Inter-SystemInformationTransferTypeMDT'/0,
'id-Inter-SystemInformationTransferTypeEDT'/0,
'id-BroadcastCompletedAreaList'/0,
'id-WarningMessageContents'/0,
'id-DataCodingScheme'/0,
'id-WarningSecurityInfo'/0,
'id-WarningType'/0,
'id-NumberofBroadcastRequest'/0,
'id-RepetitionPeriod'/0,
'id-WarningAreaList'/0,
'id-SerialNumber'/0,
'id-MessageIdentifier'/0,
'id-E-RABReleasedList'/0,
'id-CNDomain'/0,
'id-CSFallbackIndicator'/0,
'id-UESecurityCapabilities'/0,
'id-SubscriberProfileIDforRFP'/0,
'id-ServedGUMMEIs'/0,
'id-Source-ToTarget-TransparentContainer'/0,
'id-E-RABFailedToBeReleasedList'/0,
'id-cdma2000OneXSRVCCInfo'/0,
'id-OverloadResponse'/0,
'id-EUTRAN-CGI'/0,
'id-UE-S1AP-IDs'/0,
'id-RequestType'/0,
'id-cdma2000OneXRAND'/0,
'id-S-TMSI'/0,
'id-E-RABToBeSwitchedULList'/0,
'id-E-RABToBeSwitchedULItem'/0,
'id-UE-associatedLogicalS1-ConnectionListResAck'/0,
'id-ResetType'/0,
'id-UE-associatedLogicalS1-ConnectionItem'/0,
'id-eNB-StatusTransfer-TransparentContainer'/0,
'id-Bearers-SubjectToStatusTransfer-Item'/0,
'id-SourceMME-UE-S1AP-ID'/0,
'id-RelativeMMECapacity'/0,
'id-E-UTRAN-Trace-ID'/0,
'id-cdma2000HORequiredIndication'/0,
'id-cdma2000HOStatus'/0,
'id-UEIdentityIndexValue'/0,
'id-Direct-Forwarding-Path-Availability'/0,
'id-E-RABInformationListItem'/0,
'id-GUMMEI-ID'/0,
'id-UERadioCapability'/0,
'id-SecurityKey'/0,
'id-cdma2000SectorID'/0,
'id-cdma2000RATType'/0,
'id-cdma2000PDU'/0,
'id-E-RABReleaseListBearerRelComp'/0,
'id-TAI'/0,
'id-uEaggregateMaximumBitrate'/0,
'id-TimeToWait'/0,
'id-SupportedTAs'/0,
'id-ServedPLMNs'/0,
'id-MMEname'/0,
'id-eNBname'/0,
'id-Global-ENB-ID'/0,
'id-CriticalityDiagnostics'/0,
'id-UTRANtoLTEHOInformationRes'/0,
'id-GERANtoLTEHOInformationRes'/0,
'id-E-RABToBeSetupListHOReq'/0,
'id-E-RABToBeSetupItemCtxtSUReq'/0,
'id-E-RABSetupListCtxtSURes'/0,
'id-E-RABSetupItemCtxtSURes'/0,
'id-E-RABReleaseItemHOCmd'/0,
'id-E-RABFailedToSetupListCtxtSURes'/0,
'id-TAIItem'/0,
'id-TAIList'/0,
'id-pagingDRX'/0,
'id-UEPagingID'/0,
'id-HandoverRestrictionList'/0,
'id-SecurityContext'/0,
'id-E-RABSetupItemBearerSURes'/0,
'id-E-RABReleaseItem'/0,
'id-E-RABModifyItemBearerModRes'/0,
'id-E-RABToBeModifiedItemBearerModReq'/0,
'id-E-RABItem'/0,
'id-E-RABFailedToReleaseList'/0,
'id-E-RABToBeReleasedList'/0,
'id-E-RABFailedToModifyList'/0,
'id-E-RABModifyListBearerModRes'/0,
'id-E-RABToBeModifiedListBearerModReq'/0,
'id-E-RABFailedToSetupListBearerSURes'/0,
'id-E-RABSetupListBearerSURes'/0,
'id-E-RABToBeSetupItemHOReq'/0,
'id-NAS-PDU'/0,
'id-TraceActivation'/0,
'id-E-RABToBeSetupListCtxtSUReq'/0,
'id-E-RABToBeSwitchedDLItem'/0,
'id-E-RABToBeSwitchedDLList'/0,
'id-E-RABFailedtoSetupItemHOReqAck'/0,
'id-E-RABAdmittedItem'/0,
'id-E-RABFailedToSetupListHOReqAck'/0,
'id-E-RABAdmittedList'/0,
'id-E-RABToBeSetupItemBearerSUReq'/0,
'id-E-RABToBeSetupListBearerSUReq'/0,
'id-E-RABReleaseItemBearerRelComp'/0,
'id-E-RABDataForwardingItem'/0,
'id-E-RABtoReleaseListHOCmd'/0,
'id-E-RABSubjecttoDataForwardingList'/0,
'id-eNB-UE-S1AP-ID'/0,
'id-TargetID'/0,
'id-SourceID'/0,
'id-Cause'/0,
'id-HandoverType'/0,
'id-MME-UE-S1AP-ID'/0,
'maxnoofMMECs'/0,
'maxnoofGroupIDs'/0,
'maxnoofRATs'/0,
'maxnoofeNBX2TLAs'/0,
'maxnoofCellinEAI'/0,
'maxnoofCellinTAI'/0,
'maxnoofEmergencyAreaID'/0,
'maxnoofCellID'/0,
'maxnoofTAIforWarning'/0,
'maxnoofCells'/0,
'maxNrOfIndividualS1ConnectionsToReset'/0,
'maxnoofForbTACs'/0,
'maxnoofForbLACs'/0,
'maxnoofEPLMNsPlusOne'/0,
'maxnoofEPLMNs'/0,
'maxnoofPLMNsPerMME'/0,
'maxnoofBPLMNs'/0,
'maxNrOfErrors'/0,
'maxnoofTACs'/0,
'maxnoofTAIs'/0,
'maxNrOfE-RABs'/0,
'maxNrOfCSGs'/0,
'maxProtocolIEs'/0,
'maxProtocolExtensions'/0,
'maxPrivateIEs'/0,
'id-CellTrafficTrace'/0,
'id-MMEConfigurationTransfer'/0,
'id-eNBConfigurationTransfer'/0,
'id-PrivateMessage'/0,
'id-MMEDirectInformationTransfer'/0,
'id-eNBDirectInformationTransfer'/0,
'id-WriteReplaceWarning'/0,
'id-OverloadStop'/0,
'id-OverloadStart'/0,
'id-LocationReport'/0,
'id-LocationReportingFailureIndication'/0,
'id-LocationReportingControl'/0,
'id-MMEConfigurationUpdate'/0,
'id-ENBConfigurationUpdate'/0,
'id-TraceFailureIndication'/0,
'id-TraceStart'/0,
'id-DeactivateTrace'/0,
'id-MMEStatusTransfer'/0,
'id-eNBStatusTransfer'/0,
'id-UEContextRelease'/0,
'id-UECapabilityInfoIndication'/0,
'id-UEContextModification'/0,
'id-UplinkS1cdma2000tunneling'/0,
'id-DownlinkS1cdma2000tunneling'/0,
'id-UEContextReleaseRequest'/0,
'id-S1Setup'/0,
'id-NASNonDeliveryIndication'/0,
'id-ErrorIndication'/0,
'id-Reset'/0,
'id-uplinkNASTransport'/0,
'id-initialUEMessage'/0,
'id-downlinkNASTransport'/0,
'id-Paging'/0,
'id-InitialContextSetup'/0,
'id-E-RABReleaseIndication'/0,
'id-E-RABRelease'/0,
'id-E-RABModify'/0,
'id-E-RABSetup'/0,
'id-HandoverCancel'/0,
'id-PathSwitchRequest'/0,
'id-HandoverNotification'/0,
'id-HandoverResourceAllocation'/0,
'id-HandoverPreparation'/0
]).

-export([
'enc_privateMessage'/3,
'enc_mMEConfigurationTransfer'/3,
'enc_eNBConfigurationTransfer'/3,
'enc_mMEDirectInformationTransfer'/3,
'enc_eNBDirectInformationTransfer'/3,
'enc_writeReplaceWarning'/3,
'enc_overloadStop'/3,
'enc_overloadStart'/3,
'enc_locationReport'/3,
'enc_locationReportingFailureIndication'/3,
'enc_locationReportingControl'/3,
'enc_cellTrafficTrace'/3,
'enc_traceFailureIndication'/3,
'enc_traceStart'/3,
'enc_deactivateTrace'/3,
'enc_mMEStatusTransfer'/3,
'enc_eNBStatusTransfer'/3,
'enc_uEContextRelease'/3,
'enc_uECapabilityInfoIndication'/3,
'enc_uEContextModification'/3,
'enc_uplinkS1cdma2000tunneling'/3,
'enc_downlinkS1cdma2000tunneling'/3,
'enc_mMEConfigurationUpdate'/3,
'enc_eNBConfigurationUpdate'/3,
'enc_s1Setup'/3,
'enc_errorIndication'/3,
'enc_reset'/3,
'enc_handoverCancel'/3,
'enc_nASNonDeliveryIndication'/3,
'enc_uplinkNASTransport'/3,
'enc_initialUEMessage'/3,
'enc_downlinkNASTransport'/3,
'enc_paging'/3,
'enc_uEContextReleaseRequest'/3,
'enc_initialContextSetup'/3,
'enc_e-RABReleaseIndication'/3,
'enc_e-RABRelease'/3,
'enc_e-RABModify'/3,
'enc_e-RABSetup'/3,
'enc_pathSwitchRequest'/3,
'enc_handoverNotification'/3,
'enc_handoverResourceAllocation'/3,
'enc_handoverPreparation'/3
]).

-export([
'dec_privateMessage'/4,
'dec_mMEConfigurationTransfer'/4,
'dec_eNBConfigurationTransfer'/4,
'dec_mMEDirectInformationTransfer'/4,
'dec_eNBDirectInformationTransfer'/4,
'dec_writeReplaceWarning'/4,
'dec_overloadStop'/4,
'dec_overloadStart'/4,
'dec_locationReport'/4,
'dec_locationReportingFailureIndication'/4,
'dec_locationReportingControl'/4,
'dec_cellTrafficTrace'/4,
'dec_traceFailureIndication'/4,
'dec_traceStart'/4,
'dec_deactivateTrace'/4,
'dec_mMEStatusTransfer'/4,
'dec_eNBStatusTransfer'/4,
'dec_uEContextRelease'/4,
'dec_uECapabilityInfoIndication'/4,
'dec_uEContextModification'/4,
'dec_uplinkS1cdma2000tunneling'/4,
'dec_downlinkS1cdma2000tunneling'/4,
'dec_mMEConfigurationUpdate'/4,
'dec_eNBConfigurationUpdate'/4,
'dec_s1Setup'/4,
'dec_errorIndication'/4,
'dec_reset'/4,
'dec_handoverCancel'/4,
'dec_nASNonDeliveryIndication'/4,
'dec_uplinkNASTransport'/4,
'dec_initialUEMessage'/4,
'dec_downlinkNASTransport'/4,
'dec_paging'/4,
'dec_uEContextReleaseRequest'/4,
'dec_initialContextSetup'/4,
'dec_e-RABReleaseIndication'/4,
'dec_e-RABRelease'/4,
'dec_e-RABModify'/4,
'dec_e-RABSetup'/4,
'dec_pathSwitchRequest'/4,
'dec_handoverNotification'/4,
'dec_handoverResourceAllocation'/4,
'dec_handoverPreparation'/4
]).

-export([
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'/2,
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'/2,
'getenc_S1AP-ELEMENTARY-PROCEDURES'/2,
'getenc_X2TNLConfigurationInfo-ExtIEs'/2,
'getenc_UESecurityCapabilities-ExtIEs'/2,
'getenc_UE-associatedLogicalS1-ConnectionItemExtIEs'/2,
'getenc_UE-S1AP-ID-pair-ExtIEs'/2,
'getenc_UEAggregate-MaximumBitrates-ExtIEs'/2,
'getenc_TraceActivation-ExtIEs'/2,
'getenc_TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs'/2,
'getenc_TargetRNC-ID-ExtIEs'/2,
'getenc_TargeteNB-ID-ExtIEs'/2,
'getenc_CompletedCellinTAI-Item-ExtIEs'/2,
'getenc_TAI-Broadcast-Item-ExtIEs'/2,
'getenc_TAI-ExtIEs'/2,
'getenc_S-TMSI-ExtIEs'/2,
'getenc_SupportedTAs-Item-ExtIEs'/2,
'getenc_ServedGUMMEIsItem-ExtIEs'/2,
'getenc_SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs'/2,
'getenc_SourceeNB-ID-ExtIEs'/2,
'getenc_SONConfigurationTransfer-ExtIEs'/2,
'getenc_SONInformationReply-ExtIEs'/2,
'getenc_SecurityContext-ExtIEs'/2,
'getenc_RIMTransfer-ExtIEs'/2,
'getenc_RequestType-ExtIEs'/2,
'getenc_LastVisitedEUTRANCellInformation-ExtIEs'/2,
'getenc_LAI-ExtIEs'/2,
'getenc_HandoverRestrictionList-ExtIEs'/2,
'getenc_GUMMEI-ExtIEs'/2,
'getenc_GBR-QosInformation-ExtIEs'/2,
'getenc_ForbiddenLAs-Item-ExtIEs'/2,
'getenc_ForbiddenTAs-Item-ExtIEs'/2,
'getenc_EUTRAN-CGI-ExtIEs'/2,
'getenc_E-RABQoSParameters-ExtIEs'/2,
'getenc_E-RABItem-ExtIEs'/2,
'getenc_E-RABItemIEs'/2,
'getenc_E-RABInformationListItem-ExtIEs'/2,
'getenc_E-RABInformationListIEs'/2,
'getenc_ENB-StatusTransfer-TransparentContainer-ExtIEs'/2,
'getenc_GlobalENB-ID-ExtIEs'/2,
'getenc_GERAN-Cell-ID-ExtIEs'/2,
'getenc_CompletedCellinEAI-Item-ExtIEs'/2,
'getenc_EmergencyAreaID-Broadcast-Item-ExtIEs'/2,
'getenc_CriticalityDiagnostics-IE-Item-ExtIEs'/2,
'getenc_CriticalityDiagnostics-ExtIEs'/2,
'getenc_COUNTvalue-ExtIEs'/2,
'getenc_CSG-IdList-Item-ExtIEs'/2,
'getenc_CGI-ExtIEs'/2,
'getenc_CellType-ExtIEs'/2,
'getenc_Cdma2000OneXSRVCCInfo-ExtIEs'/2,
'getenc_CellID-Broadcast-Item-ExtIEs'/2,
'getenc_Bearers-SubjectToStatusTransfer-ItemExtIEs'/2,
'getenc_Bearers-SubjectToStatusTransfer-ItemIEs'/2,
'getenc_AllocationAndRetentionPriority-ExtIEs'/2,
'getenc_MMEConfigurationTransferIEs'/2,
'getenc_ENBConfigurationTransferIEs'/2,
'getenc_MMEDirectInformationTransferIEs'/2,
'getenc_ENBDirectInformationTransferIEs'/2,
'getenc_WriteReplaceWarningResponseIEs'/2,
'getenc_WriteReplaceWarningRequestIEs'/2,
'getenc_OverloadStopIEs'/2,
'getenc_OverloadStartIEs'/2,
'getenc_LocationReportIEs'/2,
'getenc_LocationReportingFailureIndicationIEs'/2,
'getenc_LocationReportingControlIEs'/2,
'getenc_CellTrafficTraceIEs'/2,
'getenc_DeactivateTraceIEs'/2,
'getenc_TraceFailureIndicationIEs'/2,
'getenc_TraceStartIEs'/2,
'getenc_MMEStatusTransferIEs'/2,
'getenc_ENBStatusTransferIEs'/2,
'getenc_UECapabilityInfoIndicationIEs'/2,
'getenc_UplinkS1cdma2000tunnelingIEs'/2,
'getenc_DownlinkS1cdma2000tunnelingIEs'/2,
'getenc_MMEConfigurationUpdateFailureIEs'/2,
'getenc_MMEConfigurationUpdateAcknowledgeIEs'/2,
'getenc_MMEConfigurationUpdateIEs'/2,
'getenc_ENBConfigurationUpdateFailureIEs'/2,
'getenc_ENBConfigurationUpdateAcknowledgeIEs'/2,
'getenc_ENBConfigurationUpdateIEs'/2,
'getenc_S1SetupFailureIEs'/2,
'getenc_S1SetupResponseIEs'/2,
'getenc_S1SetupRequestIEs'/2,
'getenc_ErrorIndicationIEs'/2,
'getenc_UE-associatedLogicalS1-ConnectionItemResAck'/2,
'getenc_ResetAcknowledgeIEs'/2,
'getenc_UE-associatedLogicalS1-ConnectionItemRes'/2,
'getenc_ResetIEs'/2,
'getenc_NASNonDeliveryIndication-IEs'/2,
'getenc_UplinkNASTransport-IEs'/2,
'getenc_InitialUEMessage-IEs'/2,
'getenc_DownlinkNASTransport-IEs'/2,
'getenc_UEContextModificationFailureIEs'/2,
'getenc_UEContextModificationResponseIEs'/2,
'getenc_UEContextModificationRequestIEs'/2,
'getenc_UEContextReleaseComplete-IEs'/2,
'getenc_UEContextReleaseCommand-IEs'/2,
'getenc_UEContextReleaseRequest-IEs'/2,
'getenc_TAIItemExtIEs'/2,
'getenc_TAIItemIEs'/2,
'getenc_PagingIEs'/2,
'getenc_InitialContextSetupFailureIEs'/2,
'getenc_E-RABSetupItemCtxtSUResExtIEs'/2,
'getenc_E-RABSetupItemCtxtSUResIEs'/2,
'getenc_InitialContextSetupResponseIEs'/2,
'getenc_E-RABToBeSetupItemCtxtSUReqExtIEs'/2,
'getenc_E-RABToBeSetupItemCtxtSUReqIEs'/2,
'getenc_InitialContextSetupRequestIEs'/2,
'getenc_E-RABReleaseIndicationIEs'/2,
'getenc_E-RABReleaseItemBearerRelCompExtIEs'/2,
'getenc_E-RABReleaseItemBearerRelCompIEs'/2,
'getenc_E-RABReleaseResponseIEs'/2,
'getenc_E-RABReleaseCommandIEs'/2,
'getenc_E-RABModifyItemBearerModResExtIEs'/2,
'getenc_E-RABModifyItemBearerModResIEs'/2,
'getenc_E-RABModifyResponseIEs'/2,
'getenc_E-RABToBeModifyItemBearerModReqExtIEs'/2,
'getenc_E-RABToBeModifiedItemBearerModReqIEs'/2,
'getenc_E-RABModifyRequestIEs'/2,
'getenc_E-RABSetupItemBearerSUResExtIEs'/2,
'getenc_E-RABSetupItemBearerSUResIEs'/2,
'getenc_E-RABSetupResponseIEs'/2,
'getenc_E-RABToBeSetupItemBearerSUReqExtIEs'/2,
'getenc_E-RABToBeSetupItemBearerSUReqIEs'/2,
'getenc_E-RABSetupRequestIEs'/2,
'getenc_HandoverCancelAcknowledgeIEs'/2,
'getenc_HandoverCancelIEs'/2,
'getenc_PathSwitchRequestFailureIEs'/2,
'getenc_E-RABToBeSwitchedULItem-ExtIEs'/2,
'getenc_E-RABToBeSwitchedULItemIEs'/2,
'getenc_PathSwitchRequestAcknowledgeIEs'/2,
'getenc_E-RABToBeSwitchedDLItem-ExtIEs'/2,
'getenc_E-RABToBeSwitchedDLItemIEs'/2,
'getenc_PathSwitchRequestIEs'/2,
'getenc_HandoverNotifyIEs'/2,
'getenc_HandoverFailureIEs'/2,
'getenc_E-RABFailedToSetupItemHOReqAckExtIEs'/2,
'getenc_E-RABFailedtoSetupItemHOReqAckIEs'/2,
'getenc_E-RABAdmittedItem-ExtIEs'/2,
'getenc_E-RABAdmittedItemIEs'/2,
'getenc_HandoverRequestAcknowledgeIEs'/2,
'getenc_E-RABToBeSetupItemHOReq-ExtIEs'/2,
'getenc_E-RABToBeSetupItemHOReqIEs'/2,
'getenc_HandoverRequestIEs'/2,
'getenc_HandoverPreparationFailureIEs'/2,
'getenc_E-RABDataForwardingItem-ExtIEs'/2,
'getenc_E-RABDataForwardingItemIEs'/2,
'getenc_HandoverCommandIEs'/2,
'getenc_HandoverRequiredIEs'/2,
'getenc_internal_object_set_argument_79'/2,
'getenc_internal_object_set_argument_139'/2,
'getenc_internal_object_set_argument_89'/2,
'getenc_internal_object_set_argument_129'/2,
'getenc_internal_object_set_argument_59'/2,
'getenc_internal_object_set_argument_119'/2,
'getenc_internal_object_set_argument_69'/2,
'getenc_internal_object_set_argument_109'/2,
'getenc_internal_object_set_argument_99'/2,
'getenc_internal_object_set_argument_9'/2,
'getenc_internal_object_set_argument_39'/2,
'getenc_internal_object_set_argument_49'/2,
'getenc_internal_object_set_argument_19'/2,
'getenc_internal_object_set_argument_29'/2,
'getenc_internal_object_set_argument_78'/2,
'getenc_internal_object_set_argument_138'/2,
'getenc_internal_object_set_argument_88'/2,
'getenc_internal_object_set_argument_128'/2,
'getenc_internal_object_set_argument_58'/2,
'getenc_internal_object_set_argument_118'/2,
'getenc_internal_object_set_argument_68'/2,
'getenc_internal_object_set_argument_108'/2,
'getenc_internal_object_set_argument_98'/2,
'getenc_internal_object_set_argument_8'/2,
'getenc_internal_object_set_argument_38'/2,
'getenc_internal_object_set_argument_48'/2,
'getenc_internal_object_set_argument_18'/2,
'getenc_internal_object_set_argument_28'/2,
'getenc_internal_object_set_argument_147'/2,
'getenc_internal_object_set_argument_77'/2,
'getenc_internal_object_set_argument_137'/2,
'getenc_internal_object_set_argument_87'/2,
'getenc_internal_object_set_argument_127'/2,
'getenc_internal_object_set_argument_57'/2,
'getenc_internal_object_set_argument_117'/2,
'getenc_internal_object_set_argument_67'/2,
'getenc_internal_object_set_argument_107'/2,
'getenc_internal_object_set_argument_97'/2,
'getenc_internal_object_set_argument_7'/2,
'getenc_internal_object_set_argument_37'/2,
'getenc_internal_object_set_argument_47'/2,
'getenc_internal_object_set_argument_17'/2,
'getenc_internal_object_set_argument_27'/2,
'getenc_internal_object_set_argument_146'/2,
'getenc_internal_object_set_argument_76'/2,
'getenc_internal_object_set_argument_136'/2,
'getenc_internal_object_set_argument_86'/2,
'getenc_internal_object_set_argument_126'/2,
'getenc_internal_object_set_argument_56'/2,
'getenc_internal_object_set_argument_116'/2,
'getenc_internal_object_set_argument_66'/2,
'getenc_internal_object_set_argument_106'/2,
'getenc_internal_object_set_argument_96'/2,
'getenc_internal_object_set_argument_6'/2,
'getenc_internal_object_set_argument_36'/2,
'getenc_internal_object_set_argument_46'/2,
'getenc_internal_object_set_argument_16'/2,
'getenc_internal_object_set_argument_26'/2,
'getenc_internal_object_set_argument_145'/2,
'getenc_internal_object_set_argument_75'/2,
'getenc_internal_object_set_argument_135'/2,
'getenc_internal_object_set_argument_85'/2,
'getenc_internal_object_set_argument_125'/2,
'getenc_internal_object_set_argument_55'/2,
'getenc_internal_object_set_argument_115'/2,
'getenc_internal_object_set_argument_65'/2,
'getenc_internal_object_set_argument_105'/2,
'getenc_internal_object_set_argument_95'/2,
'getenc_internal_object_set_argument_5'/2,
'getenc_internal_object_set_argument_35'/2,
'getenc_internal_object_set_argument_45'/2,
'getenc_internal_object_set_argument_15'/2,
'getenc_internal_object_set_argument_25'/2,
'getenc_internal_object_set_argument_144'/2,
'getenc_internal_object_set_argument_74'/2,
'getenc_internal_object_set_argument_134'/2,
'getenc_internal_object_set_argument_84'/2,
'getenc_internal_object_set_argument_124'/2,
'getenc_internal_object_set_argument_54'/2,
'getenc_internal_object_set_argument_114'/2,
'getenc_internal_object_set_argument_64'/2,
'getenc_internal_object_set_argument_104'/2,
'getenc_internal_object_set_argument_94'/2,
'getenc_internal_object_set_argument_4'/2,
'getenc_internal_object_set_argument_34'/2,
'getenc_internal_object_set_argument_44'/2,
'getenc_internal_object_set_argument_14'/2,
'getenc_internal_object_set_argument_24'/2,
'getenc_internal_object_set_argument_143'/2,
'getenc_internal_object_set_argument_73'/2,
'getenc_internal_object_set_argument_133'/2,
'getenc_internal_object_set_argument_83'/2,
'getenc_internal_object_set_argument_123'/2,
'getenc_internal_object_set_argument_53'/2,
'getenc_internal_object_set_argument_113'/2,
'getenc_internal_object_set_argument_63'/2,
'getenc_internal_object_set_argument_103'/2,
'getenc_internal_object_set_argument_93'/2,
'getenc_internal_object_set_argument_3'/2,
'getenc_internal_object_set_argument_33'/2,
'getenc_internal_object_set_argument_43'/2,
'getenc_internal_object_set_argument_13'/2,
'getenc_internal_object_set_argument_23'/2,
'getenc_internal_object_set_argument_142'/2,
'getenc_internal_object_set_argument_72'/2,
'getenc_internal_object_set_argument_132'/2,
'getenc_internal_object_set_argument_82'/2,
'getenc_internal_object_set_argument_122'/2,
'getenc_internal_object_set_argument_112'/2,
'getenc_internal_object_set_argument_62'/2,
'getenc_internal_object_set_argument_102'/2,
'getenc_internal_object_set_argument_92'/2,
'getenc_internal_object_set_argument_2'/2,
'getenc_internal_object_set_argument_32'/2,
'getenc_internal_object_set_argument_42'/2,
'getenc_internal_object_set_argument_12'/2,
'getenc_internal_object_set_argument_22'/2,
'getenc_internal_object_set_argument_141'/2,
'getenc_internal_object_set_argument_71'/2,
'getenc_internal_object_set_argument_131'/2,
'getenc_internal_object_set_argument_81'/2,
'getenc_internal_object_set_argument_121'/2,
'getenc_internal_object_set_argument_51'/2,
'getenc_internal_object_set_argument_111'/2,
'getenc_internal_object_set_argument_61'/2,
'getenc_internal_object_set_argument_101'/2,
'getenc_internal_object_set_argument_91'/2,
'getenc_internal_object_set_argument_1'/2,
'getenc_internal_object_set_argument_31'/2,
'getenc_internal_object_set_argument_41'/2,
'getenc_internal_object_set_argument_11'/2,
'getenc_internal_object_set_argument_21'/2,
'getenc_internal_object_set_argument_140'/2,
'getenc_internal_object_set_argument_70'/2,
'getenc_internal_object_set_argument_130'/2,
'getenc_internal_object_set_argument_80'/2,
'getenc_internal_object_set_argument_120'/2,
'getenc_internal_object_set_argument_50'/2,
'getenc_internal_object_set_argument_110'/2,
'getenc_internal_object_set_argument_60'/2,
'getenc_internal_object_set_argument_100'/2,
'getenc_internal_object_set_argument_90'/2,
'getenc_internal_object_set_argument_30'/2,
'getenc_internal_object_set_argument_40'/2,
'getenc_internal_object_set_argument_10'/2,
'getenc_internal_object_set_argument_20'/2
]).

-export([
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'/2,
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'/2,
'getdec_S1AP-ELEMENTARY-PROCEDURES'/2,
'getdec_X2TNLConfigurationInfo-ExtIEs'/2,
'getdec_UESecurityCapabilities-ExtIEs'/2,
'getdec_UE-associatedLogicalS1-ConnectionItemExtIEs'/2,
'getdec_UE-S1AP-ID-pair-ExtIEs'/2,
'getdec_UEAggregate-MaximumBitrates-ExtIEs'/2,
'getdec_TraceActivation-ExtIEs'/2,
'getdec_TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs'/2,
'getdec_TargetRNC-ID-ExtIEs'/2,
'getdec_TargeteNB-ID-ExtIEs'/2,
'getdec_CompletedCellinTAI-Item-ExtIEs'/2,
'getdec_TAI-Broadcast-Item-ExtIEs'/2,
'getdec_TAI-ExtIEs'/2,
'getdec_S-TMSI-ExtIEs'/2,
'getdec_SupportedTAs-Item-ExtIEs'/2,
'getdec_ServedGUMMEIsItem-ExtIEs'/2,
'getdec_SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs'/2,
'getdec_SourceeNB-ID-ExtIEs'/2,
'getdec_SONConfigurationTransfer-ExtIEs'/2,
'getdec_SONInformationReply-ExtIEs'/2,
'getdec_SecurityContext-ExtIEs'/2,
'getdec_RIMTransfer-ExtIEs'/2,
'getdec_RequestType-ExtIEs'/2,
'getdec_LastVisitedEUTRANCellInformation-ExtIEs'/2,
'getdec_LAI-ExtIEs'/2,
'getdec_HandoverRestrictionList-ExtIEs'/2,
'getdec_GUMMEI-ExtIEs'/2,
'getdec_GBR-QosInformation-ExtIEs'/2,
'getdec_ForbiddenLAs-Item-ExtIEs'/2,
'getdec_ForbiddenTAs-Item-ExtIEs'/2,
'getdec_EUTRAN-CGI-ExtIEs'/2,
'getdec_E-RABQoSParameters-ExtIEs'/2,
'getdec_E-RABItem-ExtIEs'/2,
'getdec_E-RABItemIEs'/2,
'getdec_E-RABInformationListItem-ExtIEs'/2,
'getdec_E-RABInformationListIEs'/2,
'getdec_ENB-StatusTransfer-TransparentContainer-ExtIEs'/2,
'getdec_GlobalENB-ID-ExtIEs'/2,
'getdec_GERAN-Cell-ID-ExtIEs'/2,
'getdec_CompletedCellinEAI-Item-ExtIEs'/2,
'getdec_EmergencyAreaID-Broadcast-Item-ExtIEs'/2,
'getdec_CriticalityDiagnostics-IE-Item-ExtIEs'/2,
'getdec_CriticalityDiagnostics-ExtIEs'/2,
'getdec_COUNTvalue-ExtIEs'/2,
'getdec_CSG-IdList-Item-ExtIEs'/2,
'getdec_CGI-ExtIEs'/2,
'getdec_CellType-ExtIEs'/2,
'getdec_Cdma2000OneXSRVCCInfo-ExtIEs'/2,
'getdec_CellID-Broadcast-Item-ExtIEs'/2,
'getdec_Bearers-SubjectToStatusTransfer-ItemExtIEs'/2,
'getdec_Bearers-SubjectToStatusTransfer-ItemIEs'/2,
'getdec_AllocationAndRetentionPriority-ExtIEs'/2,
'getdec_MMEConfigurationTransferIEs'/2,
'getdec_ENBConfigurationTransferIEs'/2,
'getdec_MMEDirectInformationTransferIEs'/2,
'getdec_ENBDirectInformationTransferIEs'/2,
'getdec_WriteReplaceWarningResponseIEs'/2,
'getdec_WriteReplaceWarningRequestIEs'/2,
'getdec_OverloadStopIEs'/2,
'getdec_OverloadStartIEs'/2,
'getdec_LocationReportIEs'/2,
'getdec_LocationReportingFailureIndicationIEs'/2,
'getdec_LocationReportingControlIEs'/2,
'getdec_CellTrafficTraceIEs'/2,
'getdec_DeactivateTraceIEs'/2,
'getdec_TraceFailureIndicationIEs'/2,
'getdec_TraceStartIEs'/2,
'getdec_MMEStatusTransferIEs'/2,
'getdec_ENBStatusTransferIEs'/2,
'getdec_UECapabilityInfoIndicationIEs'/2,
'getdec_UplinkS1cdma2000tunnelingIEs'/2,
'getdec_DownlinkS1cdma2000tunnelingIEs'/2,
'getdec_MMEConfigurationUpdateFailureIEs'/2,
'getdec_MMEConfigurationUpdateAcknowledgeIEs'/2,
'getdec_MMEConfigurationUpdateIEs'/2,
'getdec_ENBConfigurationUpdateFailureIEs'/2,
'getdec_ENBConfigurationUpdateAcknowledgeIEs'/2,
'getdec_ENBConfigurationUpdateIEs'/2,
'getdec_S1SetupFailureIEs'/2,
'getdec_S1SetupResponseIEs'/2,
'getdec_S1SetupRequestIEs'/2,
'getdec_ErrorIndicationIEs'/2,
'getdec_UE-associatedLogicalS1-ConnectionItemResAck'/2,
'getdec_ResetAcknowledgeIEs'/2,
'getdec_UE-associatedLogicalS1-ConnectionItemRes'/2,
'getdec_ResetIEs'/2,
'getdec_NASNonDeliveryIndication-IEs'/2,
'getdec_UplinkNASTransport-IEs'/2,
'getdec_InitialUEMessage-IEs'/2,
'getdec_DownlinkNASTransport-IEs'/2,
'getdec_UEContextModificationFailureIEs'/2,
'getdec_UEContextModificationResponseIEs'/2,
'getdec_UEContextModificationRequestIEs'/2,
'getdec_UEContextReleaseComplete-IEs'/2,
'getdec_UEContextReleaseCommand-IEs'/2,
'getdec_UEContextReleaseRequest-IEs'/2,
'getdec_TAIItemExtIEs'/2,
'getdec_TAIItemIEs'/2,
'getdec_PagingIEs'/2,
'getdec_InitialContextSetupFailureIEs'/2,
'getdec_E-RABSetupItemCtxtSUResExtIEs'/2,
'getdec_E-RABSetupItemCtxtSUResIEs'/2,
'getdec_InitialContextSetupResponseIEs'/2,
'getdec_E-RABToBeSetupItemCtxtSUReqExtIEs'/2,
'getdec_E-RABToBeSetupItemCtxtSUReqIEs'/2,
'getdec_InitialContextSetupRequestIEs'/2,
'getdec_E-RABReleaseIndicationIEs'/2,
'getdec_E-RABReleaseItemBearerRelCompExtIEs'/2,
'getdec_E-RABReleaseItemBearerRelCompIEs'/2,
'getdec_E-RABReleaseResponseIEs'/2,
'getdec_E-RABReleaseCommandIEs'/2,
'getdec_E-RABModifyItemBearerModResExtIEs'/2,
'getdec_E-RABModifyItemBearerModResIEs'/2,
'getdec_E-RABModifyResponseIEs'/2,
'getdec_E-RABToBeModifyItemBearerModReqExtIEs'/2,
'getdec_E-RABToBeModifiedItemBearerModReqIEs'/2,
'getdec_E-RABModifyRequestIEs'/2,
'getdec_E-RABSetupItemBearerSUResExtIEs'/2,
'getdec_E-RABSetupItemBearerSUResIEs'/2,
'getdec_E-RABSetupResponseIEs'/2,
'getdec_E-RABToBeSetupItemBearerSUReqExtIEs'/2,
'getdec_E-RABToBeSetupItemBearerSUReqIEs'/2,
'getdec_E-RABSetupRequestIEs'/2,
'getdec_HandoverCancelAcknowledgeIEs'/2,
'getdec_HandoverCancelIEs'/2,
'getdec_PathSwitchRequestFailureIEs'/2,
'getdec_E-RABToBeSwitchedULItem-ExtIEs'/2,
'getdec_E-RABToBeSwitchedULItemIEs'/2,
'getdec_PathSwitchRequestAcknowledgeIEs'/2,
'getdec_E-RABToBeSwitchedDLItem-ExtIEs'/2,
'getdec_E-RABToBeSwitchedDLItemIEs'/2,
'getdec_PathSwitchRequestIEs'/2,
'getdec_HandoverNotifyIEs'/2,
'getdec_HandoverFailureIEs'/2,
'getdec_E-RABFailedToSetupItemHOReqAckExtIEs'/2,
'getdec_E-RABFailedtoSetupItemHOReqAckIEs'/2,
'getdec_E-RABAdmittedItem-ExtIEs'/2,
'getdec_E-RABAdmittedItemIEs'/2,
'getdec_HandoverRequestAcknowledgeIEs'/2,
'getdec_E-RABToBeSetupItemHOReq-ExtIEs'/2,
'getdec_E-RABToBeSetupItemHOReqIEs'/2,
'getdec_HandoverRequestIEs'/2,
'getdec_HandoverPreparationFailureIEs'/2,
'getdec_E-RABDataForwardingItem-ExtIEs'/2,
'getdec_E-RABDataForwardingItemIEs'/2,
'getdec_HandoverCommandIEs'/2,
'getdec_HandoverRequiredIEs'/2,
'getdec_internal_object_set_argument_79'/2,
'getdec_internal_object_set_argument_139'/2,
'getdec_internal_object_set_argument_89'/2,
'getdec_internal_object_set_argument_129'/2,
'getdec_internal_object_set_argument_59'/2,
'getdec_internal_object_set_argument_119'/2,
'getdec_internal_object_set_argument_69'/2,
'getdec_internal_object_set_argument_109'/2,
'getdec_internal_object_set_argument_99'/2,
'getdec_internal_object_set_argument_9'/2,
'getdec_internal_object_set_argument_39'/2,
'getdec_internal_object_set_argument_49'/2,
'getdec_internal_object_set_argument_19'/2,
'getdec_internal_object_set_argument_29'/2,
'getdec_internal_object_set_argument_78'/2,
'getdec_internal_object_set_argument_138'/2,
'getdec_internal_object_set_argument_88'/2,
'getdec_internal_object_set_argument_128'/2,
'getdec_internal_object_set_argument_58'/2,
'getdec_internal_object_set_argument_118'/2,
'getdec_internal_object_set_argument_68'/2,
'getdec_internal_object_set_argument_108'/2,
'getdec_internal_object_set_argument_98'/2,
'getdec_internal_object_set_argument_8'/2,
'getdec_internal_object_set_argument_38'/2,
'getdec_internal_object_set_argument_48'/2,
'getdec_internal_object_set_argument_18'/2,
'getdec_internal_object_set_argument_28'/2,
'getdec_internal_object_set_argument_147'/2,
'getdec_internal_object_set_argument_77'/2,
'getdec_internal_object_set_argument_137'/2,
'getdec_internal_object_set_argument_87'/2,
'getdec_internal_object_set_argument_127'/2,
'getdec_internal_object_set_argument_57'/2,
'getdec_internal_object_set_argument_117'/2,
'getdec_internal_object_set_argument_67'/2,
'getdec_internal_object_set_argument_107'/2,
'getdec_internal_object_set_argument_97'/2,
'getdec_internal_object_set_argument_7'/2,
'getdec_internal_object_set_argument_37'/2,
'getdec_internal_object_set_argument_47'/2,
'getdec_internal_object_set_argument_17'/2,
'getdec_internal_object_set_argument_27'/2,
'getdec_internal_object_set_argument_146'/2,
'getdec_internal_object_set_argument_76'/2,
'getdec_internal_object_set_argument_136'/2,
'getdec_internal_object_set_argument_86'/2,
'getdec_internal_object_set_argument_126'/2,
'getdec_internal_object_set_argument_56'/2,
'getdec_internal_object_set_argument_116'/2,
'getdec_internal_object_set_argument_66'/2,
'getdec_internal_object_set_argument_106'/2,
'getdec_internal_object_set_argument_96'/2,
'getdec_internal_object_set_argument_6'/2,
'getdec_internal_object_set_argument_36'/2,
'getdec_internal_object_set_argument_46'/2,
'getdec_internal_object_set_argument_16'/2,
'getdec_internal_object_set_argument_26'/2,
'getdec_internal_object_set_argument_145'/2,
'getdec_internal_object_set_argument_75'/2,
'getdec_internal_object_set_argument_135'/2,
'getdec_internal_object_set_argument_85'/2,
'getdec_internal_object_set_argument_125'/2,
'getdec_internal_object_set_argument_55'/2,
'getdec_internal_object_set_argument_115'/2,
'getdec_internal_object_set_argument_65'/2,
'getdec_internal_object_set_argument_105'/2,
'getdec_internal_object_set_argument_95'/2,
'getdec_internal_object_set_argument_5'/2,
'getdec_internal_object_set_argument_35'/2,
'getdec_internal_object_set_argument_45'/2,
'getdec_internal_object_set_argument_15'/2,
'getdec_internal_object_set_argument_25'/2,
'getdec_internal_object_set_argument_144'/2,
'getdec_internal_object_set_argument_74'/2,
'getdec_internal_object_set_argument_134'/2,
'getdec_internal_object_set_argument_84'/2,
'getdec_internal_object_set_argument_124'/2,
'getdec_internal_object_set_argument_54'/2,
'getdec_internal_object_set_argument_114'/2,
'getdec_internal_object_set_argument_64'/2,
'getdec_internal_object_set_argument_104'/2,
'getdec_internal_object_set_argument_94'/2,
'getdec_internal_object_set_argument_4'/2,
'getdec_internal_object_set_argument_34'/2,
'getdec_internal_object_set_argument_44'/2,
'getdec_internal_object_set_argument_14'/2,
'getdec_internal_object_set_argument_24'/2,
'getdec_internal_object_set_argument_143'/2,
'getdec_internal_object_set_argument_73'/2,
'getdec_internal_object_set_argument_133'/2,
'getdec_internal_object_set_argument_83'/2,
'getdec_internal_object_set_argument_123'/2,
'getdec_internal_object_set_argument_53'/2,
'getdec_internal_object_set_argument_113'/2,
'getdec_internal_object_set_argument_63'/2,
'getdec_internal_object_set_argument_103'/2,
'getdec_internal_object_set_argument_93'/2,
'getdec_internal_object_set_argument_3'/2,
'getdec_internal_object_set_argument_33'/2,
'getdec_internal_object_set_argument_43'/2,
'getdec_internal_object_set_argument_13'/2,
'getdec_internal_object_set_argument_23'/2,
'getdec_internal_object_set_argument_142'/2,
'getdec_internal_object_set_argument_72'/2,
'getdec_internal_object_set_argument_132'/2,
'getdec_internal_object_set_argument_82'/2,
'getdec_internal_object_set_argument_122'/2,
'getdec_internal_object_set_argument_112'/2,
'getdec_internal_object_set_argument_62'/2,
'getdec_internal_object_set_argument_102'/2,
'getdec_internal_object_set_argument_92'/2,
'getdec_internal_object_set_argument_2'/2,
'getdec_internal_object_set_argument_32'/2,
'getdec_internal_object_set_argument_42'/2,
'getdec_internal_object_set_argument_12'/2,
'getdec_internal_object_set_argument_22'/2,
'getdec_internal_object_set_argument_141'/2,
'getdec_internal_object_set_argument_71'/2,
'getdec_internal_object_set_argument_131'/2,
'getdec_internal_object_set_argument_81'/2,
'getdec_internal_object_set_argument_121'/2,
'getdec_internal_object_set_argument_51'/2,
'getdec_internal_object_set_argument_111'/2,
'getdec_internal_object_set_argument_61'/2,
'getdec_internal_object_set_argument_101'/2,
'getdec_internal_object_set_argument_91'/2,
'getdec_internal_object_set_argument_1'/2,
'getdec_internal_object_set_argument_31'/2,
'getdec_internal_object_set_argument_41'/2,
'getdec_internal_object_set_argument_11'/2,
'getdec_internal_object_set_argument_21'/2,
'getdec_internal_object_set_argument_140'/2,
'getdec_internal_object_set_argument_70'/2,
'getdec_internal_object_set_argument_130'/2,
'getdec_internal_object_set_argument_80'/2,
'getdec_internal_object_set_argument_120'/2,
'getdec_internal_object_set_argument_50'/2,
'getdec_internal_object_set_argument_110'/2,
'getdec_internal_object_set_argument_60'/2,
'getdec_internal_object_set_argument_100'/2,
'getdec_internal_object_set_argument_90'/2,
'getdec_internal_object_set_argument_30'/2,
'getdec_internal_object_set_argument_40'/2,
'getdec_internal_object_set_argument_10'/2,
'getdec_internal_object_set_argument_20'/2
]).

-export([info/0]).


-export([encode/2,decode/2,encode_disp/2,decode_disp/2]).

encoding_rule() ->
   per.

encode(Type,Data) ->
case catch ?RT_PER:complete(encode_disp(Type,Data)) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {Bytes,_Len} ->
    {ok,Bytes};
  Bytes when is_binary(Bytes) ->
    {ok,binary_to_list(Bytes)};
  Bytes ->
    {ok,binary_to_list(list_to_binary(Bytes))}
  end.

decode(Type,Data) ->
case catch decode_disp(Type,list_to_binary(Data)) of
  {'EXIT',{error,Reason}} ->
    {error,Reason};
  {'EXIT',Reason} ->
    {error,{asn1,Reason}};
  {X,_Rest} ->
    {ok,if_binary2list(X)};
  {X,_Rest,_Len} ->
    {ok,if_binary2list(X)}
end.

if_binary2list(B) when is_binary(B) ->
  binary_to_list(B);
if_binary2list(L) -> L.

encode_disp('UnsuccessfulOutcome',Data) -> 'enc_UnsuccessfulOutcome'(Data);
encode_disp('SuccessfulOutcome',Data) -> 'enc_SuccessfulOutcome'(Data);
encode_disp('InitiatingMessage',Data) -> 'enc_InitiatingMessage'(Data);
encode_disp('S1AP-PDU',Data) -> 'enc_S1AP-PDU'(Data);
encode_disp('X2TNLConfigurationInfo',Data) -> 'enc_X2TNLConfigurationInfo'(Data);
encode_disp('WarningMessageContents',Data) -> 'enc_WarningMessageContents'(Data);
encode_disp('WarningSecurityInfo',Data) -> 'enc_WarningSecurityInfo'(Data);
encode_disp('WarningType',Data) -> 'enc_WarningType'(Data);
encode_disp('WarningAreaList',Data) -> 'enc_WarningAreaList'(Data);
encode_disp('UESecurityCapabilities',Data) -> 'enc_UESecurityCapabilities'(Data);
encode_disp('UERadioCapability',Data) -> 'enc_UERadioCapability'(Data);
encode_disp('UEPagingID',Data) -> 'enc_UEPagingID'(Data);
encode_disp('UE-HistoryInformation',Data) -> 'enc_UE-HistoryInformation'(Data);
encode_disp('UEIdentityIndexValue',Data) -> 'enc_UEIdentityIndexValue'(Data);
encode_disp('UE-associatedLogicalS1-ConnectionItem',Data) -> 'enc_UE-associatedLogicalS1-ConnectionItem'(Data);
encode_disp('UE-S1AP-ID-pair',Data) -> 'enc_UE-S1AP-ID-pair'(Data);
encode_disp('UE-S1AP-IDs',Data) -> 'enc_UE-S1AP-IDs'(Data);
encode_disp('UEAggregateMaximumBitrate',Data) -> 'enc_UEAggregateMaximumBitrate'(Data);
encode_disp('TypeOfError',Data) -> 'enc_TypeOfError'(Data);
encode_disp('E-UTRAN-Trace-ID',Data) -> 'enc_E-UTRAN-Trace-ID'(Data);
encode_disp('TraceDepth',Data) -> 'enc_TraceDepth'(Data);
encode_disp('TraceActivation',Data) -> 'enc_TraceActivation'(Data);
encode_disp('TransportLayerAddress',Data) -> 'enc_TransportLayerAddress'(Data);
encode_disp('Time-UE-StayedInCell',Data) -> 'enc_Time-UE-StayedInCell'(Data);
encode_disp('TimeToWait',Data) -> 'enc_TimeToWait'(Data);
encode_disp('TargetBSS-ToSourceBSS-TransparentContainer',Data) -> 'enc_TargetBSS-ToSourceBSS-TransparentContainer'(Data);
encode_disp('TargetRNC-ToSourceRNC-TransparentContainer',Data) -> 'enc_TargetRNC-ToSourceRNC-TransparentContainer'(Data);
encode_disp('Target-ToSource-TransparentContainer',Data) -> 'enc_Target-ToSource-TransparentContainer'(Data);
encode_disp('TargeteNB-ToSourceeNB-TransparentContainer',Data) -> 'enc_TargeteNB-ToSourceeNB-TransparentContainer'(Data);
encode_disp('TargetRNC-ID',Data) -> 'enc_TargetRNC-ID'(Data);
encode_disp('TargeteNB-ID',Data) -> 'enc_TargeteNB-ID'(Data);
encode_disp('TargetID',Data) -> 'enc_TargetID'(Data);
encode_disp('TBCD-STRING',Data) -> 'enc_TBCD-STRING'(Data);
encode_disp('CompletedCellinTAI-Item',Data) -> 'enc_CompletedCellinTAI-Item'(Data);
encode_disp('CompletedCellinTAI',Data) -> 'enc_CompletedCellinTAI'(Data);
encode_disp('TAI-Broadcast-Item',Data) -> 'enc_TAI-Broadcast-Item'(Data);
encode_disp('TAI-Broadcast',Data) -> 'enc_TAI-Broadcast'(Data);
encode_disp('TAI',Data) -> 'enc_TAI'(Data);
encode_disp('TAIListforWarning',Data) -> 'enc_TAIListforWarning'(Data);
encode_disp('TAC',Data) -> 'enc_TAC'(Data);
encode_disp('S-TMSI',Data) -> 'enc_S-TMSI'(Data);
encode_disp('SupportedTAs-Item',Data) -> 'enc_SupportedTAs-Item'(Data);
encode_disp('SupportedTAs',Data) -> 'enc_SupportedTAs'(Data);
encode_disp('SubscriberProfileIDforRFP',Data) -> 'enc_SubscriberProfileIDforRFP'(Data);
encode_disp('ServedPLMNs',Data) -> 'enc_ServedPLMNs'(Data);
encode_disp('ServedMMECs',Data) -> 'enc_ServedMMECs'(Data);
encode_disp('ServedGroupIDs',Data) -> 'enc_ServedGroupIDs'(Data);
encode_disp('ServedGUMMEIsItem',Data) -> 'enc_ServedGUMMEIsItem'(Data);
encode_disp('ServedGUMMEIs',Data) -> 'enc_ServedGUMMEIs'(Data);
encode_disp('SourceRNC-ToTargetRNC-TransparentContainer',Data) -> 'enc_SourceRNC-ToTargetRNC-TransparentContainer'(Data);
encode_disp('SourceeNB-ToTargeteNB-TransparentContainer',Data) -> 'enc_SourceeNB-ToTargeteNB-TransparentContainer'(Data);
encode_disp('SRVCCHOIndication',Data) -> 'enc_SRVCCHOIndication'(Data);
encode_disp('SRVCCOperationPossible',Data) -> 'enc_SRVCCOperationPossible'(Data);
encode_disp('SourceeNB-ID',Data) -> 'enc_SourceeNB-ID'(Data);
encode_disp('SourceBSS-ToTargetBSS-TransparentContainer',Data) -> 'enc_SourceBSS-ToTargetBSS-TransparentContainer'(Data);
encode_disp('Source-ToTarget-TransparentContainer',Data) -> 'enc_Source-ToTarget-TransparentContainer'(Data);
encode_disp('SONConfigurationTransfer',Data) -> 'enc_SONConfigurationTransfer'(Data);
encode_disp('SONInformationReply',Data) -> 'enc_SONInformationReply'(Data);
encode_disp('SONInformationRequest',Data) -> 'enc_SONInformationRequest'(Data);
encode_disp('SONInformation',Data) -> 'enc_SONInformation'(Data);
encode_disp('SerialNumber',Data) -> 'enc_SerialNumber'(Data);
encode_disp('SecurityContext',Data) -> 'enc_SecurityContext'(Data);
encode_disp('SecurityKey',Data) -> 'enc_SecurityKey'(Data);
encode_disp('RRC-Establishment-Cause',Data) -> 'enc_RRC-Establishment-Cause'(Data);
encode_disp('RRC-Container',Data) -> 'enc_RRC-Container'(Data);
encode_disp('RNC-ID',Data) -> 'enc_RNC-ID'(Data);
encode_disp('RepetitionPeriod',Data) -> 'enc_RepetitionPeriod'(Data);
encode_disp('ReportArea',Data) -> 'enc_ReportArea'(Data);
encode_disp('RIMRoutingAddress',Data) -> 'enc_RIMRoutingAddress'(Data);
encode_disp('RIMInformation',Data) -> 'enc_RIMInformation'(Data);
encode_disp('RIMTransfer',Data) -> 'enc_RIMTransfer'(Data);
encode_disp('RequestType',Data) -> 'enc_RequestType'(Data);
encode_disp('RAC',Data) -> 'enc_RAC'(Data);
encode_disp('RelativeMMECapacity',Data) -> 'enc_RelativeMMECapacity'(Data);
encode_disp('ReceiveStatusofULPDCPSDUs',Data) -> 'enc_ReceiveStatusofULPDCPSDUs'(Data);
encode_disp('QCI',Data) -> 'enc_QCI'(Data);
encode_disp('PriorityLevel',Data) -> 'enc_PriorityLevel'(Data);
encode_disp('Pre-emptionVulnerability',Data) -> 'enc_Pre-emptionVulnerability'(Data);
encode_disp('Pre-emptionCapability',Data) -> 'enc_Pre-emptionCapability'(Data);
encode_disp('PLMNidentity',Data) -> 'enc_PLMNidentity'(Data);
encode_disp('PDCP-SN',Data) -> 'enc_PDCP-SN'(Data);
encode_disp('PagingDRX',Data) -> 'enc_PagingDRX'(Data);
encode_disp('OverloadResponse',Data) -> 'enc_OverloadResponse'(Data);
encode_disp('OverloadAction',Data) -> 'enc_OverloadAction'(Data);
encode_disp('OldBSS-ToNewBSS-Information',Data) -> 'enc_OldBSS-ToNewBSS-Information'(Data);
encode_disp('NumberofBroadcast',Data) -> 'enc_NumberofBroadcast'(Data);
encode_disp('NumberofBroadcastRequest',Data) -> 'enc_NumberofBroadcastRequest'(Data);
encode_disp('NASSecurityParameterstoE-UTRAN',Data) -> 'enc_NASSecurityParameterstoE-UTRAN'(Data);
encode_disp('NASSecurityParametersfromE-UTRAN',Data) -> 'enc_NASSecurityParametersfromE-UTRAN'(Data);
encode_disp('NAS-PDU',Data) -> 'enc_NAS-PDU'(Data);
encode_disp('MSClassmark3',Data) -> 'enc_MSClassmark3'(Data);
encode_disp('MSClassmark2',Data) -> 'enc_MSClassmark2'(Data);
encode_disp('M-TMSI',Data) -> 'enc_M-TMSI'(Data);
encode_disp('MME-UE-S1AP-ID',Data) -> 'enc_MME-UE-S1AP-ID'(Data);
encode_disp('MME-Code',Data) -> 'enc_MME-Code'(Data);
encode_disp('MME-Group-ID',Data) -> 'enc_MME-Group-ID'(Data);
encode_disp('MMEname',Data) -> 'enc_MMEname'(Data);
encode_disp('MessageIdentifier',Data) -> 'enc_MessageIdentifier'(Data);
encode_disp('L3-Information',Data) -> 'enc_L3-Information'(Data);
encode_disp('LastVisitedGERANCellInformation',Data) -> 'enc_LastVisitedGERANCellInformation'(Data);
encode_disp('LastVisitedUTRANCellInformation',Data) -> 'enc_LastVisitedUTRANCellInformation'(Data);
encode_disp('LastVisitedEUTRANCellInformation',Data) -> 'enc_LastVisitedEUTRANCellInformation'(Data);
encode_disp('LastVisitedCell-Item',Data) -> 'enc_LastVisitedCell-Item'(Data);
encode_disp('LAI',Data) -> 'enc_LAI'(Data);
encode_disp('LAC',Data) -> 'enc_LAC'(Data);
encode_disp('InterfacesToTrace',Data) -> 'enc_InterfacesToTrace'(Data);
encode_disp('IntegrityProtectionAlgorithms',Data) -> 'enc_IntegrityProtectionAlgorithms'(Data);
encode_disp('IMSI',Data) -> 'enc_IMSI'(Data);
encode_disp('HFN',Data) -> 'enc_HFN'(Data);
encode_disp('HandoverType',Data) -> 'enc_HandoverType'(Data);
encode_disp('HandoverRestrictionList',Data) -> 'enc_HandoverRestrictionList'(Data);
encode_disp('GUMMEI',Data) -> 'enc_GUMMEI'(Data);
encode_disp('GTP-TEID',Data) -> 'enc_GTP-TEID'(Data);
encode_disp('GBR-QosInformation',Data) -> 'enc_GBR-QosInformation'(Data);
encode_disp('ForbiddenLACs',Data) -> 'enc_ForbiddenLACs'(Data);
encode_disp('ForbiddenLAs-Item',Data) -> 'enc_ForbiddenLAs-Item'(Data);
encode_disp('ForbiddenLAs',Data) -> 'enc_ForbiddenLAs'(Data);
encode_disp('ForbiddenTACs',Data) -> 'enc_ForbiddenTACs'(Data);
encode_disp('ForbiddenTAs-Item',Data) -> 'enc_ForbiddenTAs-Item'(Data);
encode_disp('ForbiddenTAs',Data) -> 'enc_ForbiddenTAs'(Data);
encode_disp('ForbiddenInterRATs',Data) -> 'enc_ForbiddenInterRATs'(Data);
encode_disp('ExtendedRNC-ID',Data) -> 'enc_ExtendedRNC-ID'(Data);
encode_disp('EUTRAN-CGI',Data) -> 'enc_EUTRAN-CGI'(Data);
encode_disp('E-RABLevelQoSParameters',Data) -> 'enc_E-RABLevelQoSParameters'(Data);
encode_disp('E-RABItem',Data) -> 'enc_E-RABItem'(Data);
encode_disp('E-RABList',Data) -> 'enc_E-RABList'(Data);
encode_disp('E-RABInformationListItem',Data) -> 'enc_E-RABInformationListItem'(Data);
encode_disp('E-RABInformationList',Data) -> 'enc_E-RABInformationList'(Data);
encode_disp('E-RAB-ID',Data) -> 'enc_E-RAB-ID'(Data);
encode_disp('EventType',Data) -> 'enc_EventType'(Data);
encode_disp('EPLMNs',Data) -> 'enc_EPLMNs'(Data);
encode_disp('EncryptionAlgorithms',Data) -> 'enc_EncryptionAlgorithms'(Data);
encode_disp('ENBX2TLAs',Data) -> 'enc_ENBX2TLAs'(Data);
encode_disp('ENBname',Data) -> 'enc_ENBname'(Data);
encode_disp('ENB-UE-S1AP-ID',Data) -> 'enc_ENB-UE-S1AP-ID'(Data);
encode_disp('ENB-StatusTransfer-TransparentContainer',Data) -> 'enc_ENB-StatusTransfer-TransparentContainer'(Data);
encode_disp('Global-ENB-ID',Data) -> 'enc_Global-ENB-ID'(Data);
encode_disp('GERAN-Cell-ID',Data) -> 'enc_GERAN-Cell-ID'(Data);
encode_disp('ENB-ID',Data) -> 'enc_ENB-ID'(Data);
encode_disp('CompletedCellinEAI-Item',Data) -> 'enc_CompletedCellinEAI-Item'(Data);
encode_disp('CompletedCellinEAI',Data) -> 'enc_CompletedCellinEAI'(Data);
encode_disp('EmergencyAreaID-Broadcast-Item',Data) -> 'enc_EmergencyAreaID-Broadcast-Item'(Data);
encode_disp('EmergencyAreaID-Broadcast',Data) -> 'enc_EmergencyAreaID-Broadcast'(Data);
encode_disp('EmergencyAreaID',Data) -> 'enc_EmergencyAreaID'(Data);
encode_disp('EmergencyAreaIDList',Data) -> 'enc_EmergencyAreaIDList'(Data);
encode_disp('ECGIList',Data) -> 'enc_ECGIList'(Data);
encode_disp('Direct-Forwarding-Path-Availability',Data) -> 'enc_Direct-Forwarding-Path-Availability'(Data);
encode_disp('DL-Forwarding',Data) -> 'enc_DL-Forwarding'(Data);
encode_disp('DataCodingScheme',Data) -> 'enc_DataCodingScheme'(Data);
encode_disp('CriticalityDiagnostics-IE-Item',Data) -> 'enc_CriticalityDiagnostics-IE-Item'(Data);
encode_disp('CriticalityDiagnostics-IE-List',Data) -> 'enc_CriticalityDiagnostics-IE-List'(Data);
encode_disp('CriticalityDiagnostics',Data) -> 'enc_CriticalityDiagnostics'(Data);
encode_disp('COUNTvalue',Data) -> 'enc_COUNTvalue'(Data);
encode_disp('CSG-IdList-Item',Data) -> 'enc_CSG-IdList-Item'(Data);
encode_disp('CSG-IdList',Data) -> 'enc_CSG-IdList'(Data);
encode_disp('CSG-Id',Data) -> 'enc_CSG-Id'(Data);
encode_disp('CSFallbackIndicator',Data) -> 'enc_CSFallbackIndicator'(Data);
encode_disp('CNDomain',Data) -> 'enc_CNDomain'(Data);
encode_disp('CI',Data) -> 'enc_CI'(Data);
encode_disp('CGI',Data) -> 'enc_CGI'(Data);
encode_disp('CellType',Data) -> 'enc_CellType'(Data);
encode_disp('Cell-Size',Data) -> 'enc_Cell-Size'(Data);
encode_disp('Cdma2000OneXRAND',Data) -> 'enc_Cdma2000OneXRAND'(Data);
encode_disp('Cdma2000OneXPilot',Data) -> 'enc_Cdma2000OneXPilot'(Data);
encode_disp('Cdma2000OneXMSI',Data) -> 'enc_Cdma2000OneXMSI'(Data);
encode_disp('Cdma2000OneXMEID',Data) -> 'enc_Cdma2000OneXMEID'(Data);
encode_disp('Cdma2000OneXSRVCCInfo',Data) -> 'enc_Cdma2000OneXSRVCCInfo'(Data);
encode_disp('Cdma2000HORequiredIndication',Data) -> 'enc_Cdma2000HORequiredIndication'(Data);
encode_disp('Cdma2000HOStatus',Data) -> 'enc_Cdma2000HOStatus'(Data);
encode_disp('Cdma2000SectorID',Data) -> 'enc_Cdma2000SectorID'(Data);
encode_disp('Cdma2000RATType',Data) -> 'enc_Cdma2000RATType'(Data);
encode_disp('Cdma2000PDU',Data) -> 'enc_Cdma2000PDU'(Data);
encode_disp('CellID-Broadcast-Item',Data) -> 'enc_CellID-Broadcast-Item'(Data);
encode_disp('CellID-Broadcast',Data) -> 'enc_CellID-Broadcast'(Data);
encode_disp('CellIdentity',Data) -> 'enc_CellIdentity'(Data);
encode_disp('CauseNas',Data) -> 'enc_CauseNas'(Data);
encode_disp('CauseTransport',Data) -> 'enc_CauseTransport'(Data);
encode_disp('CauseRadioNetwork',Data) -> 'enc_CauseRadioNetwork'(Data);
encode_disp('CauseProtocol',Data) -> 'enc_CauseProtocol'(Data);
encode_disp('CauseMisc',Data) -> 'enc_CauseMisc'(Data);
encode_disp('Cause',Data) -> 'enc_Cause'(Data);
encode_disp('BroadcastCompletedAreaList',Data) -> 'enc_BroadcastCompletedAreaList'(Data);
encode_disp('BPLMNs',Data) -> 'enc_BPLMNs'(Data);
encode_disp('BitRate',Data) -> 'enc_BitRate'(Data);
encode_disp('Bearers-SubjectToStatusTransfer-Item',Data) -> 'enc_Bearers-SubjectToStatusTransfer-Item'(Data);
encode_disp('Bearers-SubjectToStatusTransferList',Data) -> 'enc_Bearers-SubjectToStatusTransferList'(Data);
encode_disp('AllocationAndRetentionPriority',Data) -> 'enc_AllocationAndRetentionPriority'(Data);
encode_disp('TriggeringMessage',Data) -> 'enc_TriggeringMessage'(Data);
encode_disp('ProtocolIE-ID',Data) -> 'enc_ProtocolIE-ID'(Data);
encode_disp('ProtocolExtensionID',Data) -> 'enc_ProtocolExtensionID'(Data);
encode_disp('ProcedureCode',Data) -> 'enc_ProcedureCode'(Data);
encode_disp('PrivateIE-ID',Data) -> 'enc_PrivateIE-ID'(Data);
encode_disp('Presence',Data) -> 'enc_Presence'(Data);
encode_disp('Criticality',Data) -> 'enc_Criticality'(Data);
encode_disp('PrivateMessage',Data) -> 'enc_PrivateMessage'(Data);
encode_disp('MMEConfigurationTransfer',Data) -> 'enc_MMEConfigurationTransfer'(Data);
encode_disp('ENBConfigurationTransfer',Data) -> 'enc_ENBConfigurationTransfer'(Data);
encode_disp('MMEDirectInformationTransfer',Data) -> 'enc_MMEDirectInformationTransfer'(Data);
encode_disp('Inter-SystemInformationTransferType',Data) -> 'enc_Inter-SystemInformationTransferType'(Data);
encode_disp('ENBDirectInformationTransfer',Data) -> 'enc_ENBDirectInformationTransfer'(Data);
encode_disp('WriteReplaceWarningResponse',Data) -> 'enc_WriteReplaceWarningResponse'(Data);
encode_disp('WriteReplaceWarningRequest',Data) -> 'enc_WriteReplaceWarningRequest'(Data);
encode_disp('OverloadStop',Data) -> 'enc_OverloadStop'(Data);
encode_disp('OverloadStart',Data) -> 'enc_OverloadStart'(Data);
encode_disp('LocationReport',Data) -> 'enc_LocationReport'(Data);
encode_disp('LocationReportingFailureIndication',Data) -> 'enc_LocationReportingFailureIndication'(Data);
encode_disp('LocationReportingControl',Data) -> 'enc_LocationReportingControl'(Data);
encode_disp('CellTrafficTrace',Data) -> 'enc_CellTrafficTrace'(Data);
encode_disp('DeactivateTrace',Data) -> 'enc_DeactivateTrace'(Data);
encode_disp('TraceFailureIndication',Data) -> 'enc_TraceFailureIndication'(Data);
encode_disp('TraceStart',Data) -> 'enc_TraceStart'(Data);
encode_disp('MMEStatusTransfer',Data) -> 'enc_MMEStatusTransfer'(Data);
encode_disp('ENBStatusTransfer',Data) -> 'enc_ENBStatusTransfer'(Data);
encode_disp('UECapabilityInfoIndication',Data) -> 'enc_UECapabilityInfoIndication'(Data);
encode_disp('UplinkS1cdma2000tunneling',Data) -> 'enc_UplinkS1cdma2000tunneling'(Data);
encode_disp('DownlinkS1cdma2000tunneling',Data) -> 'enc_DownlinkS1cdma2000tunneling'(Data);
encode_disp('MMEConfigurationUpdateFailure',Data) -> 'enc_MMEConfigurationUpdateFailure'(Data);
encode_disp('MMEConfigurationUpdateAcknowledge',Data) -> 'enc_MMEConfigurationUpdateAcknowledge'(Data);
encode_disp('MMEConfigurationUpdate',Data) -> 'enc_MMEConfigurationUpdate'(Data);
encode_disp('ENBConfigurationUpdateFailure',Data) -> 'enc_ENBConfigurationUpdateFailure'(Data);
encode_disp('ENBConfigurationUpdateAcknowledge',Data) -> 'enc_ENBConfigurationUpdateAcknowledge'(Data);
encode_disp('ENBConfigurationUpdate',Data) -> 'enc_ENBConfigurationUpdate'(Data);
encode_disp('S1SetupFailure',Data) -> 'enc_S1SetupFailure'(Data);
encode_disp('S1SetupResponse',Data) -> 'enc_S1SetupResponse'(Data);
encode_disp('S1SetupRequest',Data) -> 'enc_S1SetupRequest'(Data);
encode_disp('ErrorIndication',Data) -> 'enc_ErrorIndication'(Data);
encode_disp('UE-associatedLogicalS1-ConnectionListResAck',Data) -> 'enc_UE-associatedLogicalS1-ConnectionListResAck'(Data);
encode_disp('ResetAcknowledge',Data) -> 'enc_ResetAcknowledge'(Data);
encode_disp('UE-associatedLogicalS1-ConnectionListRes',Data) -> 'enc_UE-associatedLogicalS1-ConnectionListRes'(Data);
encode_disp('ResetAll',Data) -> 'enc_ResetAll'(Data);
encode_disp('ResetType',Data) -> 'enc_ResetType'(Data);
encode_disp('Reset',Data) -> 'enc_Reset'(Data);
encode_disp('NASNonDeliveryIndication',Data) -> 'enc_NASNonDeliveryIndication'(Data);
encode_disp('UplinkNASTransport',Data) -> 'enc_UplinkNASTransport'(Data);
encode_disp('InitialUEMessage',Data) -> 'enc_InitialUEMessage'(Data);
encode_disp('DownlinkNASTransport',Data) -> 'enc_DownlinkNASTransport'(Data);
encode_disp('UEContextModificationFailure',Data) -> 'enc_UEContextModificationFailure'(Data);
encode_disp('UEContextModificationResponse',Data) -> 'enc_UEContextModificationResponse'(Data);
encode_disp('UEContextModificationRequest',Data) -> 'enc_UEContextModificationRequest'(Data);
encode_disp('UEContextReleaseComplete',Data) -> 'enc_UEContextReleaseComplete'(Data);
encode_disp('UEContextReleaseCommand',Data) -> 'enc_UEContextReleaseCommand'(Data);
encode_disp('UEContextReleaseRequest',Data) -> 'enc_UEContextReleaseRequest'(Data);
encode_disp('TAIItem',Data) -> 'enc_TAIItem'(Data);
encode_disp('TAIList',Data) -> 'enc_TAIList'(Data);
encode_disp('Paging',Data) -> 'enc_Paging'(Data);
encode_disp('InitialContextSetupFailure',Data) -> 'enc_InitialContextSetupFailure'(Data);
encode_disp('E-RABSetupItemCtxtSURes',Data) -> 'enc_E-RABSetupItemCtxtSURes'(Data);
encode_disp('E-RABSetupListCtxtSURes',Data) -> 'enc_E-RABSetupListCtxtSURes'(Data);
encode_disp('InitialContextSetupResponse',Data) -> 'enc_InitialContextSetupResponse'(Data);
encode_disp('E-RABToBeSetupItemCtxtSUReq',Data) -> 'enc_E-RABToBeSetupItemCtxtSUReq'(Data);
encode_disp('E-RABToBeSetupListCtxtSUReq',Data) -> 'enc_E-RABToBeSetupListCtxtSUReq'(Data);
encode_disp('InitialContextSetupRequest',Data) -> 'enc_InitialContextSetupRequest'(Data);
encode_disp('E-RABReleaseIndication',Data) -> 'enc_E-RABReleaseIndication'(Data);
encode_disp('E-RABReleaseItemBearerRelComp',Data) -> 'enc_E-RABReleaseItemBearerRelComp'(Data);
encode_disp('E-RABReleaseListBearerRelComp',Data) -> 'enc_E-RABReleaseListBearerRelComp'(Data);
encode_disp('E-RABReleaseResponse',Data) -> 'enc_E-RABReleaseResponse'(Data);
encode_disp('E-RABReleaseCommand',Data) -> 'enc_E-RABReleaseCommand'(Data);
encode_disp('E-RABModifyItemBearerModRes',Data) -> 'enc_E-RABModifyItemBearerModRes'(Data);
encode_disp('E-RABModifyListBearerModRes',Data) -> 'enc_E-RABModifyListBearerModRes'(Data);
encode_disp('E-RABModifyResponse',Data) -> 'enc_E-RABModifyResponse'(Data);
encode_disp('E-RABToBeModifiedItemBearerModReq',Data) -> 'enc_E-RABToBeModifiedItemBearerModReq'(Data);
encode_disp('E-RABToBeModifiedListBearerModReq',Data) -> 'enc_E-RABToBeModifiedListBearerModReq'(Data);
encode_disp('E-RABModifyRequest',Data) -> 'enc_E-RABModifyRequest'(Data);
encode_disp('E-RABSetupItemBearerSURes',Data) -> 'enc_E-RABSetupItemBearerSURes'(Data);
encode_disp('E-RABSetupListBearerSURes',Data) -> 'enc_E-RABSetupListBearerSURes'(Data);
encode_disp('E-RABSetupResponse',Data) -> 'enc_E-RABSetupResponse'(Data);
encode_disp('E-RABToBeSetupItemBearerSUReq',Data) -> 'enc_E-RABToBeSetupItemBearerSUReq'(Data);
encode_disp('E-RABToBeSetupListBearerSUReq',Data) -> 'enc_E-RABToBeSetupListBearerSUReq'(Data);
encode_disp('E-RABSetupRequest',Data) -> 'enc_E-RABSetupRequest'(Data);
encode_disp('HandoverCancelAcknowledge',Data) -> 'enc_HandoverCancelAcknowledge'(Data);
encode_disp('HandoverCancel',Data) -> 'enc_HandoverCancel'(Data);
encode_disp('PathSwitchRequestFailure',Data) -> 'enc_PathSwitchRequestFailure'(Data);
encode_disp('E-RABToBeSwitchedULItem',Data) -> 'enc_E-RABToBeSwitchedULItem'(Data);
encode_disp('E-RABToBeSwitchedULList',Data) -> 'enc_E-RABToBeSwitchedULList'(Data);
encode_disp('PathSwitchRequestAcknowledge',Data) -> 'enc_PathSwitchRequestAcknowledge'(Data);
encode_disp('E-RABToBeSwitchedDLItem',Data) -> 'enc_E-RABToBeSwitchedDLItem'(Data);
encode_disp('E-RABToBeSwitchedDLList',Data) -> 'enc_E-RABToBeSwitchedDLList'(Data);
encode_disp('PathSwitchRequest',Data) -> 'enc_PathSwitchRequest'(Data);
encode_disp('HandoverNotify',Data) -> 'enc_HandoverNotify'(Data);
encode_disp('HandoverFailure',Data) -> 'enc_HandoverFailure'(Data);
encode_disp('E-RABFailedToSetupItemHOReqAck',Data) -> 'enc_E-RABFailedToSetupItemHOReqAck'(Data);
encode_disp('E-RABFailedtoSetupListHOReqAck',Data) -> 'enc_E-RABFailedtoSetupListHOReqAck'(Data);
encode_disp('E-RABAdmittedItem',Data) -> 'enc_E-RABAdmittedItem'(Data);
encode_disp('E-RABAdmittedList',Data) -> 'enc_E-RABAdmittedList'(Data);
encode_disp('HandoverRequestAcknowledge',Data) -> 'enc_HandoverRequestAcknowledge'(Data);
encode_disp('E-RABToBeSetupItemHOReq',Data) -> 'enc_E-RABToBeSetupItemHOReq'(Data);
encode_disp('E-RABToBeSetupListHOReq',Data) -> 'enc_E-RABToBeSetupListHOReq'(Data);
encode_disp('HandoverRequest',Data) -> 'enc_HandoverRequest'(Data);
encode_disp('HandoverPreparationFailure',Data) -> 'enc_HandoverPreparationFailure'(Data);
encode_disp('E-RABDataForwardingItem',Data) -> 'enc_E-RABDataForwardingItem'(Data);
encode_disp('E-RABSubjecttoDataForwardingList',Data) -> 'enc_E-RABSubjecttoDataForwardingList'(Data);
encode_disp('HandoverCommand',Data) -> 'enc_HandoverCommand'(Data);
encode_disp('HandoverRequired',Data) -> 'enc_HandoverRequired'(Data);
encode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).


decode_disp('UnsuccessfulOutcome',Data) -> 'dec_UnsuccessfulOutcome'(Data,mandatory);
decode_disp('SuccessfulOutcome',Data) -> 'dec_SuccessfulOutcome'(Data,mandatory);
decode_disp('InitiatingMessage',Data) -> 'dec_InitiatingMessage'(Data,mandatory);
decode_disp('S1AP-PDU',Data) -> 'dec_S1AP-PDU'(Data,mandatory);
decode_disp('X2TNLConfigurationInfo',Data) -> 'dec_X2TNLConfigurationInfo'(Data,mandatory);
decode_disp('WarningMessageContents',Data) -> 'dec_WarningMessageContents'(Data,mandatory);
decode_disp('WarningSecurityInfo',Data) -> 'dec_WarningSecurityInfo'(Data,mandatory);
decode_disp('WarningType',Data) -> 'dec_WarningType'(Data,mandatory);
decode_disp('WarningAreaList',Data) -> 'dec_WarningAreaList'(Data,mandatory);
decode_disp('UESecurityCapabilities',Data) -> 'dec_UESecurityCapabilities'(Data,mandatory);
decode_disp('UERadioCapability',Data) -> 'dec_UERadioCapability'(Data,mandatory);
decode_disp('UEPagingID',Data) -> 'dec_UEPagingID'(Data,mandatory);
decode_disp('UE-HistoryInformation',Data) -> 'dec_UE-HistoryInformation'(Data,mandatory);
decode_disp('UEIdentityIndexValue',Data) -> 'dec_UEIdentityIndexValue'(Data,mandatory);
decode_disp('UE-associatedLogicalS1-ConnectionItem',Data) -> 'dec_UE-associatedLogicalS1-ConnectionItem'(Data,mandatory);
decode_disp('UE-S1AP-ID-pair',Data) -> 'dec_UE-S1AP-ID-pair'(Data,mandatory);
decode_disp('UE-S1AP-IDs',Data) -> 'dec_UE-S1AP-IDs'(Data,mandatory);
decode_disp('UEAggregateMaximumBitrate',Data) -> 'dec_UEAggregateMaximumBitrate'(Data,mandatory);
decode_disp('TypeOfError',Data) -> 'dec_TypeOfError'(Data,mandatory);
decode_disp('E-UTRAN-Trace-ID',Data) -> 'dec_E-UTRAN-Trace-ID'(Data,mandatory);
decode_disp('TraceDepth',Data) -> 'dec_TraceDepth'(Data,mandatory);
decode_disp('TraceActivation',Data) -> 'dec_TraceActivation'(Data,mandatory);
decode_disp('TransportLayerAddress',Data) -> 'dec_TransportLayerAddress'(Data,mandatory);
decode_disp('Time-UE-StayedInCell',Data) -> 'dec_Time-UE-StayedInCell'(Data,mandatory);
decode_disp('TimeToWait',Data) -> 'dec_TimeToWait'(Data,mandatory);
decode_disp('TargetBSS-ToSourceBSS-TransparentContainer',Data) -> 'dec_TargetBSS-ToSourceBSS-TransparentContainer'(Data,mandatory);
decode_disp('TargetRNC-ToSourceRNC-TransparentContainer',Data) -> 'dec_TargetRNC-ToSourceRNC-TransparentContainer'(Data,mandatory);
decode_disp('Target-ToSource-TransparentContainer',Data) -> 'dec_Target-ToSource-TransparentContainer'(Data,mandatory);
decode_disp('TargeteNB-ToSourceeNB-TransparentContainer',Data) -> 'dec_TargeteNB-ToSourceeNB-TransparentContainer'(Data,mandatory);
decode_disp('TargetRNC-ID',Data) -> 'dec_TargetRNC-ID'(Data,mandatory);
decode_disp('TargeteNB-ID',Data) -> 'dec_TargeteNB-ID'(Data,mandatory);
decode_disp('TargetID',Data) -> 'dec_TargetID'(Data,mandatory);
decode_disp('TBCD-STRING',Data) -> 'dec_TBCD-STRING'(Data,mandatory);
decode_disp('CompletedCellinTAI-Item',Data) -> 'dec_CompletedCellinTAI-Item'(Data,mandatory);
decode_disp('CompletedCellinTAI',Data) -> 'dec_CompletedCellinTAI'(Data,mandatory);
decode_disp('TAI-Broadcast-Item',Data) -> 'dec_TAI-Broadcast-Item'(Data,mandatory);
decode_disp('TAI-Broadcast',Data) -> 'dec_TAI-Broadcast'(Data,mandatory);
decode_disp('TAI',Data) -> 'dec_TAI'(Data,mandatory);
decode_disp('TAIListforWarning',Data) -> 'dec_TAIListforWarning'(Data,mandatory);
decode_disp('TAC',Data) -> 'dec_TAC'(Data,mandatory);
decode_disp('S-TMSI',Data) -> 'dec_S-TMSI'(Data,mandatory);
decode_disp('SupportedTAs-Item',Data) -> 'dec_SupportedTAs-Item'(Data,mandatory);
decode_disp('SupportedTAs',Data) -> 'dec_SupportedTAs'(Data,mandatory);
decode_disp('SubscriberProfileIDforRFP',Data) -> 'dec_SubscriberProfileIDforRFP'(Data,mandatory);
decode_disp('ServedPLMNs',Data) -> 'dec_ServedPLMNs'(Data,mandatory);
decode_disp('ServedMMECs',Data) -> 'dec_ServedMMECs'(Data,mandatory);
decode_disp('ServedGroupIDs',Data) -> 'dec_ServedGroupIDs'(Data,mandatory);
decode_disp('ServedGUMMEIsItem',Data) -> 'dec_ServedGUMMEIsItem'(Data,mandatory);
decode_disp('ServedGUMMEIs',Data) -> 'dec_ServedGUMMEIs'(Data,mandatory);
decode_disp('SourceRNC-ToTargetRNC-TransparentContainer',Data) -> 'dec_SourceRNC-ToTargetRNC-TransparentContainer'(Data,mandatory);
decode_disp('SourceeNB-ToTargeteNB-TransparentContainer',Data) -> 'dec_SourceeNB-ToTargeteNB-TransparentContainer'(Data,mandatory);
decode_disp('SRVCCHOIndication',Data) -> 'dec_SRVCCHOIndication'(Data,mandatory);
decode_disp('SRVCCOperationPossible',Data) -> 'dec_SRVCCOperationPossible'(Data,mandatory);
decode_disp('SourceeNB-ID',Data) -> 'dec_SourceeNB-ID'(Data,mandatory);
decode_disp('SourceBSS-ToTargetBSS-TransparentContainer',Data) -> 'dec_SourceBSS-ToTargetBSS-TransparentContainer'(Data,mandatory);
decode_disp('Source-ToTarget-TransparentContainer',Data) -> 'dec_Source-ToTarget-TransparentContainer'(Data,mandatory);
decode_disp('SONConfigurationTransfer',Data) -> 'dec_SONConfigurationTransfer'(Data,mandatory);
decode_disp('SONInformationReply',Data) -> 'dec_SONInformationReply'(Data,mandatory);
decode_disp('SONInformationRequest',Data) -> 'dec_SONInformationRequest'(Data,mandatory);
decode_disp('SONInformation',Data) -> 'dec_SONInformation'(Data,mandatory);
decode_disp('SerialNumber',Data) -> 'dec_SerialNumber'(Data,mandatory);
decode_disp('SecurityContext',Data) -> 'dec_SecurityContext'(Data,mandatory);
decode_disp('SecurityKey',Data) -> 'dec_SecurityKey'(Data,mandatory);
decode_disp('RRC-Establishment-Cause',Data) -> 'dec_RRC-Establishment-Cause'(Data,mandatory);
decode_disp('RRC-Container',Data) -> 'dec_RRC-Container'(Data,mandatory);
decode_disp('RNC-ID',Data) -> 'dec_RNC-ID'(Data,mandatory);
decode_disp('RepetitionPeriod',Data) -> 'dec_RepetitionPeriod'(Data,mandatory);
decode_disp('ReportArea',Data) -> 'dec_ReportArea'(Data,mandatory);
decode_disp('RIMRoutingAddress',Data) -> 'dec_RIMRoutingAddress'(Data,mandatory);
decode_disp('RIMInformation',Data) -> 'dec_RIMInformation'(Data,mandatory);
decode_disp('RIMTransfer',Data) -> 'dec_RIMTransfer'(Data,mandatory);
decode_disp('RequestType',Data) -> 'dec_RequestType'(Data,mandatory);
decode_disp('RAC',Data) -> 'dec_RAC'(Data,mandatory);
decode_disp('RelativeMMECapacity',Data) -> 'dec_RelativeMMECapacity'(Data,mandatory);
decode_disp('ReceiveStatusofULPDCPSDUs',Data) -> 'dec_ReceiveStatusofULPDCPSDUs'(Data,mandatory);
decode_disp('QCI',Data) -> 'dec_QCI'(Data,mandatory);
decode_disp('PriorityLevel',Data) -> 'dec_PriorityLevel'(Data,mandatory);
decode_disp('Pre-emptionVulnerability',Data) -> 'dec_Pre-emptionVulnerability'(Data,mandatory);
decode_disp('Pre-emptionCapability',Data) -> 'dec_Pre-emptionCapability'(Data,mandatory);
decode_disp('PLMNidentity',Data) -> 'dec_PLMNidentity'(Data,mandatory);
decode_disp('PDCP-SN',Data) -> 'dec_PDCP-SN'(Data,mandatory);
decode_disp('PagingDRX',Data) -> 'dec_PagingDRX'(Data,mandatory);
decode_disp('OverloadResponse',Data) -> 'dec_OverloadResponse'(Data,mandatory);
decode_disp('OverloadAction',Data) -> 'dec_OverloadAction'(Data,mandatory);
decode_disp('OldBSS-ToNewBSS-Information',Data) -> 'dec_OldBSS-ToNewBSS-Information'(Data,mandatory);
decode_disp('NumberofBroadcast',Data) -> 'dec_NumberofBroadcast'(Data,mandatory);
decode_disp('NumberofBroadcastRequest',Data) -> 'dec_NumberofBroadcastRequest'(Data,mandatory);
decode_disp('NASSecurityParameterstoE-UTRAN',Data) -> 'dec_NASSecurityParameterstoE-UTRAN'(Data,mandatory);
decode_disp('NASSecurityParametersfromE-UTRAN',Data) -> 'dec_NASSecurityParametersfromE-UTRAN'(Data,mandatory);
decode_disp('NAS-PDU',Data) -> 'dec_NAS-PDU'(Data,mandatory);
decode_disp('MSClassmark3',Data) -> 'dec_MSClassmark3'(Data,mandatory);
decode_disp('MSClassmark2',Data) -> 'dec_MSClassmark2'(Data,mandatory);
decode_disp('M-TMSI',Data) -> 'dec_M-TMSI'(Data,mandatory);
decode_disp('MME-UE-S1AP-ID',Data) -> 'dec_MME-UE-S1AP-ID'(Data,mandatory);
decode_disp('MME-Code',Data) -> 'dec_MME-Code'(Data,mandatory);
decode_disp('MME-Group-ID',Data) -> 'dec_MME-Group-ID'(Data,mandatory);
decode_disp('MMEname',Data) -> 'dec_MMEname'(Data,mandatory);
decode_disp('MessageIdentifier',Data) -> 'dec_MessageIdentifier'(Data,mandatory);
decode_disp('L3-Information',Data) -> 'dec_L3-Information'(Data,mandatory);
decode_disp('LastVisitedGERANCellInformation',Data) -> 'dec_LastVisitedGERANCellInformation'(Data,mandatory);
decode_disp('LastVisitedUTRANCellInformation',Data) -> 'dec_LastVisitedUTRANCellInformation'(Data,mandatory);
decode_disp('LastVisitedEUTRANCellInformation',Data) -> 'dec_LastVisitedEUTRANCellInformation'(Data,mandatory);
decode_disp('LastVisitedCell-Item',Data) -> 'dec_LastVisitedCell-Item'(Data,mandatory);
decode_disp('LAI',Data) -> 'dec_LAI'(Data,mandatory);
decode_disp('LAC',Data) -> 'dec_LAC'(Data,mandatory);
decode_disp('InterfacesToTrace',Data) -> 'dec_InterfacesToTrace'(Data,mandatory);
decode_disp('IntegrityProtectionAlgorithms',Data) -> 'dec_IntegrityProtectionAlgorithms'(Data,mandatory);
decode_disp('IMSI',Data) -> 'dec_IMSI'(Data,mandatory);
decode_disp('HFN',Data) -> 'dec_HFN'(Data,mandatory);
decode_disp('HandoverType',Data) -> 'dec_HandoverType'(Data,mandatory);
decode_disp('HandoverRestrictionList',Data) -> 'dec_HandoverRestrictionList'(Data,mandatory);
decode_disp('GUMMEI',Data) -> 'dec_GUMMEI'(Data,mandatory);
decode_disp('GTP-TEID',Data) -> 'dec_GTP-TEID'(Data,mandatory);
decode_disp('GBR-QosInformation',Data) -> 'dec_GBR-QosInformation'(Data,mandatory);
decode_disp('ForbiddenLACs',Data) -> 'dec_ForbiddenLACs'(Data,mandatory);
decode_disp('ForbiddenLAs-Item',Data) -> 'dec_ForbiddenLAs-Item'(Data,mandatory);
decode_disp('ForbiddenLAs',Data) -> 'dec_ForbiddenLAs'(Data,mandatory);
decode_disp('ForbiddenTACs',Data) -> 'dec_ForbiddenTACs'(Data,mandatory);
decode_disp('ForbiddenTAs-Item',Data) -> 'dec_ForbiddenTAs-Item'(Data,mandatory);
decode_disp('ForbiddenTAs',Data) -> 'dec_ForbiddenTAs'(Data,mandatory);
decode_disp('ForbiddenInterRATs',Data) -> 'dec_ForbiddenInterRATs'(Data,mandatory);
decode_disp('ExtendedRNC-ID',Data) -> 'dec_ExtendedRNC-ID'(Data,mandatory);
decode_disp('EUTRAN-CGI',Data) -> 'dec_EUTRAN-CGI'(Data,mandatory);
decode_disp('E-RABLevelQoSParameters',Data) -> 'dec_E-RABLevelQoSParameters'(Data,mandatory);
decode_disp('E-RABItem',Data) -> 'dec_E-RABItem'(Data,mandatory);
decode_disp('E-RABList',Data) -> 'dec_E-RABList'(Data,mandatory);
decode_disp('E-RABInformationListItem',Data) -> 'dec_E-RABInformationListItem'(Data,mandatory);
decode_disp('E-RABInformationList',Data) -> 'dec_E-RABInformationList'(Data,mandatory);
decode_disp('E-RAB-ID',Data) -> 'dec_E-RAB-ID'(Data,mandatory);
decode_disp('EventType',Data) -> 'dec_EventType'(Data,mandatory);
decode_disp('EPLMNs',Data) -> 'dec_EPLMNs'(Data,mandatory);
decode_disp('EncryptionAlgorithms',Data) -> 'dec_EncryptionAlgorithms'(Data,mandatory);
decode_disp('ENBX2TLAs',Data) -> 'dec_ENBX2TLAs'(Data,mandatory);
decode_disp('ENBname',Data) -> 'dec_ENBname'(Data,mandatory);
decode_disp('ENB-UE-S1AP-ID',Data) -> 'dec_ENB-UE-S1AP-ID'(Data,mandatory);
decode_disp('ENB-StatusTransfer-TransparentContainer',Data) -> 'dec_ENB-StatusTransfer-TransparentContainer'(Data,mandatory);
decode_disp('Global-ENB-ID',Data) -> 'dec_Global-ENB-ID'(Data,mandatory);
decode_disp('GERAN-Cell-ID',Data) -> 'dec_GERAN-Cell-ID'(Data,mandatory);
decode_disp('ENB-ID',Data) -> 'dec_ENB-ID'(Data,mandatory);
decode_disp('CompletedCellinEAI-Item',Data) -> 'dec_CompletedCellinEAI-Item'(Data,mandatory);
decode_disp('CompletedCellinEAI',Data) -> 'dec_CompletedCellinEAI'(Data,mandatory);
decode_disp('EmergencyAreaID-Broadcast-Item',Data) -> 'dec_EmergencyAreaID-Broadcast-Item'(Data,mandatory);
decode_disp('EmergencyAreaID-Broadcast',Data) -> 'dec_EmergencyAreaID-Broadcast'(Data,mandatory);
decode_disp('EmergencyAreaID',Data) -> 'dec_EmergencyAreaID'(Data,mandatory);
decode_disp('EmergencyAreaIDList',Data) -> 'dec_EmergencyAreaIDList'(Data,mandatory);
decode_disp('ECGIList',Data) -> 'dec_ECGIList'(Data,mandatory);
decode_disp('Direct-Forwarding-Path-Availability',Data) -> 'dec_Direct-Forwarding-Path-Availability'(Data,mandatory);
decode_disp('DL-Forwarding',Data) -> 'dec_DL-Forwarding'(Data,mandatory);
decode_disp('DataCodingScheme',Data) -> 'dec_DataCodingScheme'(Data,mandatory);
decode_disp('CriticalityDiagnostics-IE-Item',Data) -> 'dec_CriticalityDiagnostics-IE-Item'(Data,mandatory);
decode_disp('CriticalityDiagnostics-IE-List',Data) -> 'dec_CriticalityDiagnostics-IE-List'(Data,mandatory);
decode_disp('CriticalityDiagnostics',Data) -> 'dec_CriticalityDiagnostics'(Data,mandatory);
decode_disp('COUNTvalue',Data) -> 'dec_COUNTvalue'(Data,mandatory);
decode_disp('CSG-IdList-Item',Data) -> 'dec_CSG-IdList-Item'(Data,mandatory);
decode_disp('CSG-IdList',Data) -> 'dec_CSG-IdList'(Data,mandatory);
decode_disp('CSG-Id',Data) -> 'dec_CSG-Id'(Data,mandatory);
decode_disp('CSFallbackIndicator',Data) -> 'dec_CSFallbackIndicator'(Data,mandatory);
decode_disp('CNDomain',Data) -> 'dec_CNDomain'(Data,mandatory);
decode_disp('CI',Data) -> 'dec_CI'(Data,mandatory);
decode_disp('CGI',Data) -> 'dec_CGI'(Data,mandatory);
decode_disp('CellType',Data) -> 'dec_CellType'(Data,mandatory);
decode_disp('Cell-Size',Data) -> 'dec_Cell-Size'(Data,mandatory);
decode_disp('Cdma2000OneXRAND',Data) -> 'dec_Cdma2000OneXRAND'(Data,mandatory);
decode_disp('Cdma2000OneXPilot',Data) -> 'dec_Cdma2000OneXPilot'(Data,mandatory);
decode_disp('Cdma2000OneXMSI',Data) -> 'dec_Cdma2000OneXMSI'(Data,mandatory);
decode_disp('Cdma2000OneXMEID',Data) -> 'dec_Cdma2000OneXMEID'(Data,mandatory);
decode_disp('Cdma2000OneXSRVCCInfo',Data) -> 'dec_Cdma2000OneXSRVCCInfo'(Data,mandatory);
decode_disp('Cdma2000HORequiredIndication',Data) -> 'dec_Cdma2000HORequiredIndication'(Data,mandatory);
decode_disp('Cdma2000HOStatus',Data) -> 'dec_Cdma2000HOStatus'(Data,mandatory);
decode_disp('Cdma2000SectorID',Data) -> 'dec_Cdma2000SectorID'(Data,mandatory);
decode_disp('Cdma2000RATType',Data) -> 'dec_Cdma2000RATType'(Data,mandatory);
decode_disp('Cdma2000PDU',Data) -> 'dec_Cdma2000PDU'(Data,mandatory);
decode_disp('CellID-Broadcast-Item',Data) -> 'dec_CellID-Broadcast-Item'(Data,mandatory);
decode_disp('CellID-Broadcast',Data) -> 'dec_CellID-Broadcast'(Data,mandatory);
decode_disp('CellIdentity',Data) -> 'dec_CellIdentity'(Data,mandatory);
decode_disp('CauseNas',Data) -> 'dec_CauseNas'(Data,mandatory);
decode_disp('CauseTransport',Data) -> 'dec_CauseTransport'(Data,mandatory);
decode_disp('CauseRadioNetwork',Data) -> 'dec_CauseRadioNetwork'(Data,mandatory);
decode_disp('CauseProtocol',Data) -> 'dec_CauseProtocol'(Data,mandatory);
decode_disp('CauseMisc',Data) -> 'dec_CauseMisc'(Data,mandatory);
decode_disp('Cause',Data) -> 'dec_Cause'(Data,mandatory);
decode_disp('BroadcastCompletedAreaList',Data) -> 'dec_BroadcastCompletedAreaList'(Data,mandatory);
decode_disp('BPLMNs',Data) -> 'dec_BPLMNs'(Data,mandatory);
decode_disp('BitRate',Data) -> 'dec_BitRate'(Data,mandatory);
decode_disp('Bearers-SubjectToStatusTransfer-Item',Data) -> 'dec_Bearers-SubjectToStatusTransfer-Item'(Data,mandatory);
decode_disp('Bearers-SubjectToStatusTransferList',Data) -> 'dec_Bearers-SubjectToStatusTransferList'(Data,mandatory);
decode_disp('AllocationAndRetentionPriority',Data) -> 'dec_AllocationAndRetentionPriority'(Data,mandatory);
decode_disp('TriggeringMessage',Data) -> 'dec_TriggeringMessage'(Data,mandatory);
decode_disp('ProtocolIE-ID',Data) -> 'dec_ProtocolIE-ID'(Data,mandatory);
decode_disp('ProtocolExtensionID',Data) -> 'dec_ProtocolExtensionID'(Data,mandatory);
decode_disp('ProcedureCode',Data) -> 'dec_ProcedureCode'(Data,mandatory);
decode_disp('PrivateIE-ID',Data) -> 'dec_PrivateIE-ID'(Data,mandatory);
decode_disp('Presence',Data) -> 'dec_Presence'(Data,mandatory);
decode_disp('Criticality',Data) -> 'dec_Criticality'(Data,mandatory);
decode_disp('PrivateMessage',Data) -> 'dec_PrivateMessage'(Data,mandatory);
decode_disp('MMEConfigurationTransfer',Data) -> 'dec_MMEConfigurationTransfer'(Data,mandatory);
decode_disp('ENBConfigurationTransfer',Data) -> 'dec_ENBConfigurationTransfer'(Data,mandatory);
decode_disp('MMEDirectInformationTransfer',Data) -> 'dec_MMEDirectInformationTransfer'(Data,mandatory);
decode_disp('Inter-SystemInformationTransferType',Data) -> 'dec_Inter-SystemInformationTransferType'(Data,mandatory);
decode_disp('ENBDirectInformationTransfer',Data) -> 'dec_ENBDirectInformationTransfer'(Data,mandatory);
decode_disp('WriteReplaceWarningResponse',Data) -> 'dec_WriteReplaceWarningResponse'(Data,mandatory);
decode_disp('WriteReplaceWarningRequest',Data) -> 'dec_WriteReplaceWarningRequest'(Data,mandatory);
decode_disp('OverloadStop',Data) -> 'dec_OverloadStop'(Data,mandatory);
decode_disp('OverloadStart',Data) -> 'dec_OverloadStart'(Data,mandatory);
decode_disp('LocationReport',Data) -> 'dec_LocationReport'(Data,mandatory);
decode_disp('LocationReportingFailureIndication',Data) -> 'dec_LocationReportingFailureIndication'(Data,mandatory);
decode_disp('LocationReportingControl',Data) -> 'dec_LocationReportingControl'(Data,mandatory);
decode_disp('CellTrafficTrace',Data) -> 'dec_CellTrafficTrace'(Data,mandatory);
decode_disp('DeactivateTrace',Data) -> 'dec_DeactivateTrace'(Data,mandatory);
decode_disp('TraceFailureIndication',Data) -> 'dec_TraceFailureIndication'(Data,mandatory);
decode_disp('TraceStart',Data) -> 'dec_TraceStart'(Data,mandatory);
decode_disp('MMEStatusTransfer',Data) -> 'dec_MMEStatusTransfer'(Data,mandatory);
decode_disp('ENBStatusTransfer',Data) -> 'dec_ENBStatusTransfer'(Data,mandatory);
decode_disp('UECapabilityInfoIndication',Data) -> 'dec_UECapabilityInfoIndication'(Data,mandatory);
decode_disp('UplinkS1cdma2000tunneling',Data) -> 'dec_UplinkS1cdma2000tunneling'(Data,mandatory);
decode_disp('DownlinkS1cdma2000tunneling',Data) -> 'dec_DownlinkS1cdma2000tunneling'(Data,mandatory);
decode_disp('MMEConfigurationUpdateFailure',Data) -> 'dec_MMEConfigurationUpdateFailure'(Data,mandatory);
decode_disp('MMEConfigurationUpdateAcknowledge',Data) -> 'dec_MMEConfigurationUpdateAcknowledge'(Data,mandatory);
decode_disp('MMEConfigurationUpdate',Data) -> 'dec_MMEConfigurationUpdate'(Data,mandatory);
decode_disp('ENBConfigurationUpdateFailure',Data) -> 'dec_ENBConfigurationUpdateFailure'(Data,mandatory);
decode_disp('ENBConfigurationUpdateAcknowledge',Data) -> 'dec_ENBConfigurationUpdateAcknowledge'(Data,mandatory);
decode_disp('ENBConfigurationUpdate',Data) -> 'dec_ENBConfigurationUpdate'(Data,mandatory);
decode_disp('S1SetupFailure',Data) -> 'dec_S1SetupFailure'(Data,mandatory);
decode_disp('S1SetupResponse',Data) -> 'dec_S1SetupResponse'(Data,mandatory);
decode_disp('S1SetupRequest',Data) -> 'dec_S1SetupRequest'(Data,mandatory);
decode_disp('ErrorIndication',Data) -> 'dec_ErrorIndication'(Data,mandatory);
decode_disp('UE-associatedLogicalS1-ConnectionListResAck',Data) -> 'dec_UE-associatedLogicalS1-ConnectionListResAck'(Data,mandatory);
decode_disp('ResetAcknowledge',Data) -> 'dec_ResetAcknowledge'(Data,mandatory);
decode_disp('UE-associatedLogicalS1-ConnectionListRes',Data) -> 'dec_UE-associatedLogicalS1-ConnectionListRes'(Data,mandatory);
decode_disp('ResetAll',Data) -> 'dec_ResetAll'(Data,mandatory);
decode_disp('ResetType',Data) -> 'dec_ResetType'(Data,mandatory);
decode_disp('Reset',Data) -> 'dec_Reset'(Data,mandatory);
decode_disp('NASNonDeliveryIndication',Data) -> 'dec_NASNonDeliveryIndication'(Data,mandatory);
decode_disp('UplinkNASTransport',Data) -> 'dec_UplinkNASTransport'(Data,mandatory);
decode_disp('InitialUEMessage',Data) -> 'dec_InitialUEMessage'(Data,mandatory);
decode_disp('DownlinkNASTransport',Data) -> 'dec_DownlinkNASTransport'(Data,mandatory);
decode_disp('UEContextModificationFailure',Data) -> 'dec_UEContextModificationFailure'(Data,mandatory);
decode_disp('UEContextModificationResponse',Data) -> 'dec_UEContextModificationResponse'(Data,mandatory);
decode_disp('UEContextModificationRequest',Data) -> 'dec_UEContextModificationRequest'(Data,mandatory);
decode_disp('UEContextReleaseComplete',Data) -> 'dec_UEContextReleaseComplete'(Data,mandatory);
decode_disp('UEContextReleaseCommand',Data) -> 'dec_UEContextReleaseCommand'(Data,mandatory);
decode_disp('UEContextReleaseRequest',Data) -> 'dec_UEContextReleaseRequest'(Data,mandatory);
decode_disp('TAIItem',Data) -> 'dec_TAIItem'(Data,mandatory);
decode_disp('TAIList',Data) -> 'dec_TAIList'(Data,mandatory);
decode_disp('Paging',Data) -> 'dec_Paging'(Data,mandatory);
decode_disp('InitialContextSetupFailure',Data) -> 'dec_InitialContextSetupFailure'(Data,mandatory);
decode_disp('E-RABSetupItemCtxtSURes',Data) -> 'dec_E-RABSetupItemCtxtSURes'(Data,mandatory);
decode_disp('E-RABSetupListCtxtSURes',Data) -> 'dec_E-RABSetupListCtxtSURes'(Data,mandatory);
decode_disp('InitialContextSetupResponse',Data) -> 'dec_InitialContextSetupResponse'(Data,mandatory);
decode_disp('E-RABToBeSetupItemCtxtSUReq',Data) -> 'dec_E-RABToBeSetupItemCtxtSUReq'(Data,mandatory);
decode_disp('E-RABToBeSetupListCtxtSUReq',Data) -> 'dec_E-RABToBeSetupListCtxtSUReq'(Data,mandatory);
decode_disp('InitialContextSetupRequest',Data) -> 'dec_InitialContextSetupRequest'(Data,mandatory);
decode_disp('E-RABReleaseIndication',Data) -> 'dec_E-RABReleaseIndication'(Data,mandatory);
decode_disp('E-RABReleaseItemBearerRelComp',Data) -> 'dec_E-RABReleaseItemBearerRelComp'(Data,mandatory);
decode_disp('E-RABReleaseListBearerRelComp',Data) -> 'dec_E-RABReleaseListBearerRelComp'(Data,mandatory);
decode_disp('E-RABReleaseResponse',Data) -> 'dec_E-RABReleaseResponse'(Data,mandatory);
decode_disp('E-RABReleaseCommand',Data) -> 'dec_E-RABReleaseCommand'(Data,mandatory);
decode_disp('E-RABModifyItemBearerModRes',Data) -> 'dec_E-RABModifyItemBearerModRes'(Data,mandatory);
decode_disp('E-RABModifyListBearerModRes',Data) -> 'dec_E-RABModifyListBearerModRes'(Data,mandatory);
decode_disp('E-RABModifyResponse',Data) -> 'dec_E-RABModifyResponse'(Data,mandatory);
decode_disp('E-RABToBeModifiedItemBearerModReq',Data) -> 'dec_E-RABToBeModifiedItemBearerModReq'(Data,mandatory);
decode_disp('E-RABToBeModifiedListBearerModReq',Data) -> 'dec_E-RABToBeModifiedListBearerModReq'(Data,mandatory);
decode_disp('E-RABModifyRequest',Data) -> 'dec_E-RABModifyRequest'(Data,mandatory);
decode_disp('E-RABSetupItemBearerSURes',Data) -> 'dec_E-RABSetupItemBearerSURes'(Data,mandatory);
decode_disp('E-RABSetupListBearerSURes',Data) -> 'dec_E-RABSetupListBearerSURes'(Data,mandatory);
decode_disp('E-RABSetupResponse',Data) -> 'dec_E-RABSetupResponse'(Data,mandatory);
decode_disp('E-RABToBeSetupItemBearerSUReq',Data) -> 'dec_E-RABToBeSetupItemBearerSUReq'(Data,mandatory);
decode_disp('E-RABToBeSetupListBearerSUReq',Data) -> 'dec_E-RABToBeSetupListBearerSUReq'(Data,mandatory);
decode_disp('E-RABSetupRequest',Data) -> 'dec_E-RABSetupRequest'(Data,mandatory);
decode_disp('HandoverCancelAcknowledge',Data) -> 'dec_HandoverCancelAcknowledge'(Data,mandatory);
decode_disp('HandoverCancel',Data) -> 'dec_HandoverCancel'(Data,mandatory);
decode_disp('PathSwitchRequestFailure',Data) -> 'dec_PathSwitchRequestFailure'(Data,mandatory);
decode_disp('E-RABToBeSwitchedULItem',Data) -> 'dec_E-RABToBeSwitchedULItem'(Data,mandatory);
decode_disp('E-RABToBeSwitchedULList',Data) -> 'dec_E-RABToBeSwitchedULList'(Data,mandatory);
decode_disp('PathSwitchRequestAcknowledge',Data) -> 'dec_PathSwitchRequestAcknowledge'(Data,mandatory);
decode_disp('E-RABToBeSwitchedDLItem',Data) -> 'dec_E-RABToBeSwitchedDLItem'(Data,mandatory);
decode_disp('E-RABToBeSwitchedDLList',Data) -> 'dec_E-RABToBeSwitchedDLList'(Data,mandatory);
decode_disp('PathSwitchRequest',Data) -> 'dec_PathSwitchRequest'(Data,mandatory);
decode_disp('HandoverNotify',Data) -> 'dec_HandoverNotify'(Data,mandatory);
decode_disp('HandoverFailure',Data) -> 'dec_HandoverFailure'(Data,mandatory);
decode_disp('E-RABFailedToSetupItemHOReqAck',Data) -> 'dec_E-RABFailedToSetupItemHOReqAck'(Data,mandatory);
decode_disp('E-RABFailedtoSetupListHOReqAck',Data) -> 'dec_E-RABFailedtoSetupListHOReqAck'(Data,mandatory);
decode_disp('E-RABAdmittedItem',Data) -> 'dec_E-RABAdmittedItem'(Data,mandatory);
decode_disp('E-RABAdmittedList',Data) -> 'dec_E-RABAdmittedList'(Data,mandatory);
decode_disp('HandoverRequestAcknowledge',Data) -> 'dec_HandoverRequestAcknowledge'(Data,mandatory);
decode_disp('E-RABToBeSetupItemHOReq',Data) -> 'dec_E-RABToBeSetupItemHOReq'(Data,mandatory);
decode_disp('E-RABToBeSetupListHOReq',Data) -> 'dec_E-RABToBeSetupListHOReq'(Data,mandatory);
decode_disp('HandoverRequest',Data) -> 'dec_HandoverRequest'(Data,mandatory);
decode_disp('HandoverPreparationFailure',Data) -> 'dec_HandoverPreparationFailure'(Data,mandatory);
decode_disp('E-RABDataForwardingItem',Data) -> 'dec_E-RABDataForwardingItem'(Data,mandatory);
decode_disp('E-RABSubjecttoDataForwardingList',Data) -> 'dec_E-RABSubjecttoDataForwardingList'(Data,mandatory);
decode_disp('HandoverCommand',Data) -> 'dec_HandoverCommand'(Data,mandatory);
decode_disp('HandoverRequired',Data) -> 'dec_HandoverRequired'(Data,mandatory);
decode_disp(Type,_Data) -> exit({error,{asn1,{undefined_type,Type}}}).





info() ->
   case ?MODULE:module_info() of
      MI when is_list(MI) ->
         case lists:keysearch(attributes,1,MI) of
            {value,{_,Attributes}} when is_list(Attributes) ->
               case lists:keysearch(asn1_info,1,Attributes) of
                  {value,{_,Info}} when is_list(Info) ->
                     Info;
                  _ ->
                     []
               end;
            _ ->
               []
         end
   end.
'enc_UnsuccessfulOutcome'(Val) ->
Val1 = ?RT_PER:list_to_record('UnsuccessfulOutcome', Val),
ObjprocedureCode = 
  'S1AP':'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldUnsuccessfulOutcome
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('UnsuccessfulOutcome', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_UnsuccessfulOutcome'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type UnsuccessfulOutcome
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'S1AP':'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('UnsuccessfulOutcome', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'UnsuccessfulOutcome',Term1,Term2,Term3},Bytes3}.

'enc_SuccessfulOutcome'(Val) ->
Val1 = ?RT_PER:list_to_record('SuccessfulOutcome', Val),
ObjprocedureCode = 
  'S1AP':'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldSuccessfulOutcome
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('SuccessfulOutcome', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_SuccessfulOutcome'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type SuccessfulOutcome
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'S1AP':'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('SuccessfulOutcome', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'SuccessfulOutcome',Term1,Term2,Term3},Bytes3}.

'enc_InitiatingMessage'(Val) ->
Val1 = ?RT_PER:list_to_record('InitiatingMessage', Val),
ObjprocedureCode = 
  'S1AP':'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, 
                                          ?RT_PER:cindex(2,Val1,procedureCode)),
[

%% attribute number 1 with type fixedtypevaluefieldprocedureCodetypeINTEGERValueRange0255no
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,procedureCode)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldInitiatingMessage
?RT_PER:encode_open_type([],?RT_PER:complete(
   ObjprocedureCode('InitiatingMessage', ?RT_PER:cindex(4,Val1,value), [])))].


'dec_InitiatingMessage'(Bytes,_) ->

%%  attribute number 1 with type procedureCode
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type InitiatingMessage
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjprocedureCodeTerm1 =
   'S1AP':'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode, Term1),
Term3 = 
   case (catch DecObjprocedureCodeTerm1('InitiatingMessage', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'InitiatingMessage',Term1,Term2,Term3},Bytes3}.


'enc_S1AP-PDU'({'S1AP-PDU',Val}) ->
'enc_S1AP-PDU'(Val);

'enc_S1AP-PDU'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[initiatingMessage,successfulOutcome,unsuccessfulOutcome],[]}, {3,0}),
case element(1,Val) of
initiatingMessage ->
'enc_InitiatingMessage'(element(2,Val));
successfulOutcome ->
'enc_SuccessfulOutcome'(element(2,Val));
unsuccessfulOutcome ->
'enc_UnsuccessfulOutcome'(element(2,Val))
end
].


'dec_S1AP-PDU'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {initiatingMessage,
'dec_InitiatingMessage'(Bytes2,telltype)};
1 -> {successfulOutcome,
'dec_SuccessfulOutcome'(Bytes2,telltype)};
2 -> {unsuccessfulOutcome,
'dec_UnsuccessfulOutcome'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_X2TNLConfigurationInfo'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedS1APENBX2TLAs
'enc_ENBX2TLAs'(?RT_PER:cindex(2,Val1,eNBX2TransportLayerAddresses)),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_X2TNLConfigurationInfo_iE-Extensions'(Tmpval1)
end].

'enc_X2TNLConfigurationInfo_iE-Extensions'({'X2TNLConfigurationInfo_iE-Extensions',Val}) ->
'enc_X2TNLConfigurationInfo_iE-Extensions'(Val);

'enc_X2TNLConfigurationInfo_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_X2TNLConfigurationInfo_iE-Extensions_components'(Val, [])
].
'enc_X2TNLConfigurationInfo_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_X2TNLConfigurationInfo_iE-Extensions_components'([H|T], Acc) ->
'enc_X2TNLConfigurationInfo_iE-Extensions_components'(T, ['enc_X2TNLConfigurationInfo_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_X2TNLConfigurationInfo_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_1'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_X2TNLConfigurationInfo_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_1'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_X2TNLConfigurationInfo_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_X2TNLConfigurationInfo_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_X2TNLConfigurationInfo_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_X2TNLConfigurationInfo_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_X2TNLConfigurationInfo_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_X2TNLConfigurationInfo_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_X2TNLConfigurationInfo'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ENBX2TLAs
{Term1,Bytes3} = 'dec_ENBX2TLAs'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_X2TNLConfigurationInfo_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'X2TNLConfigurationInfo',Term1,Term2},Bytes6}.


'enc_WarningMessageContents'({'WarningMessageContents',Val}) ->
'enc_WarningMessageContents'(Val);

'enc_WarningMessageContents'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',{1,9600}}],Val).


'dec_WarningMessageContents'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',{1,9600}}]).


'enc_WarningSecurityInfo'({'WarningSecurityInfo',Val}) ->
'enc_WarningSecurityInfo'(Val);

'enc_WarningSecurityInfo'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',50}],Val).


'dec_WarningSecurityInfo'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',50}]).


'enc_WarningType'({'WarningType',Val}) ->
'enc_WarningType'(Val);

'enc_WarningType'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_WarningType'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).


'enc_WarningAreaList'({'WarningAreaList',Val}) ->
'enc_WarningAreaList'(Val);

'enc_WarningAreaList'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[cellIDList,trackingAreaListforWarning,emergencyAreaIDList],[]}, {3,0}),
case element(1,Val) of
cellIDList ->
'enc_ECGIList'(element(2,Val));
trackingAreaListforWarning ->
'enc_TAIListforWarning'(element(2,Val));
emergencyAreaIDList ->
'enc_EmergencyAreaIDList'(element(2,Val))
end
].


'dec_WarningAreaList'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {cellIDList,
'dec_ECGIList'(Bytes2,telltype)};
1 -> {trackingAreaListforWarning,
'dec_TAIListforWarning'(Bytes2,telltype)};
2 -> {emergencyAreaIDList,
'dec_EmergencyAreaIDList'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_UESecurityCapabilities'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],?RT_PER:cindex(2,Val1,encryptionAlgorithms),[]),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],?RT_PER:cindex(3,Val1,integrityProtectionAlgorithms),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UESecurityCapabilities_iE-Extensions'(Tmpval1)
end].

'enc_UESecurityCapabilities_iE-Extensions'({'UESecurityCapabilities_iE-Extensions',Val}) ->
'enc_UESecurityCapabilities_iE-Extensions'(Val);

'enc_UESecurityCapabilities_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UESecurityCapabilities_iE-Extensions_components'(Val, [])
].
'enc_UESecurityCapabilities_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UESecurityCapabilities_iE-Extensions_components'([H|T], Acc) ->
'enc_UESecurityCapabilities_iE-Extensions_components'(T, ['enc_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_4'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_4'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UESecurityCapabilities_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UESecurityCapabilities_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UESecurityCapabilities_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UESecurityCapabilities_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UESecurityCapabilities_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UESecurityCapabilities_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UESecurityCapabilities'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',{{16,16},[]}}],[]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{16,16},[]}}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UESecurityCapabilities_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UESecurityCapabilities',Term1,Term2,Term3},Bytes7}.


'enc_UERadioCapability'({'UERadioCapability',Val}) ->
'enc_UERadioCapability'(Val);

'enc_UERadioCapability'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_UERadioCapability'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_UEPagingID'({'UEPagingID',Val}) ->
'enc_UEPagingID'(Val);

'enc_UEPagingID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['s-TMSI',iMSI],[]}, {2,0}),
case element(1,Val) of
's-TMSI' ->
'enc_S-TMSI'(element(2,Val));
iMSI ->
?RT_PER:encode_octet_string([{'SizeConstraint',{3,8}}],element(2,Val))
end
].


'dec_UEPagingID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {'s-TMSI',
'dec_S-TMSI'(Bytes2,telltype)};
1 -> {iMSI,
?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',{3,8}}])};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_UE-HistoryInformation'({'UE-HistoryInformation',Val}) ->
'enc_UE-HistoryInformation'(Val);

'enc_UE-HistoryInformation'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_UE-HistoryInformation_components'(Val, [])
].
'enc_UE-HistoryInformation_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-HistoryInformation_components'([H|T], Acc) ->
'enc_UE-HistoryInformation_components'(T, ['enc_LastVisitedCell-Item'(H)

 | Acc]).


'dec_UE-HistoryInformation'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_UE-HistoryInformation_components'(Num, Bytes1, telltype, []).
'dec_UE-HistoryInformation_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-HistoryInformation_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LastVisitedCell-Item'(Bytes,telltype),
   'dec_UE-HistoryInformation_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_UEIdentityIndexValue'({'UEIdentityIndexValue',Val}) ->
'enc_UEIdentityIndexValue'(Val);

'enc_UEIdentityIndexValue'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',10}],Val,[]).


'dec_UEIdentityIndexValue'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',10}],[]).

'enc_UE-associatedLogicalS1-ConnectionItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([2,3,4],3,Val),
[
?RT_PER:setext(false), Opt,
case ?RT_PER:cindex(2,Val1,'mME-UE-S1AP-ID') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],Tmpval1)
end,
case ?RT_PER:cindex(3,Val1,'eNB-UE-S1AP-ID') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,16777215}}],Tmpval2)
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'(Tmpval3)
end].

'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'({'UE-associatedLogicalS1-ConnectionItem_iE-Extensions',Val}) ->
'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'(Val);

'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(Val, [])
].
'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'([H|T], Acc) ->
'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(T, ['enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_8'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_8'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UE-associatedLogicalS1-ConnectionItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,3), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = case Opt band (1 bsl 2) of
  _Opt1 when _Opt1 > 0 ->?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4294967295}}]);
0 ->{asn1_NOVALUE,Bytes2}

end,

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = case Opt band (1 bsl 1) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,16777215}}]);
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UE-associatedLogicalS1-ConnectionItem_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UE-associatedLogicalS1-ConnectionItem',Term1,Term2,Term3},Bytes7}.

'enc_UE-S1AP-ID-pair'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],?RT_PER:cindex(2,Val1,'mME-UE-S1AP-ID')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,16777215}}],?RT_PER:cindex(3,Val1,'eNB-UE-S1AP-ID')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UE-S1AP-ID-pair_iE-Extensions'(Tmpval1)
end].

'enc_UE-S1AP-ID-pair_iE-Extensions'({'UE-S1AP-ID-pair_iE-Extensions',Val}) ->
'enc_UE-S1AP-ID-pair_iE-Extensions'(Val);

'enc_UE-S1AP-ID-pair_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UE-S1AP-ID-pair_iE-Extensions_components'(Val, [])
].
'enc_UE-S1AP-ID-pair_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-S1AP-ID-pair_iE-Extensions_components'([H|T], Acc) ->
'enc_UE-S1AP-ID-pair_iE-Extensions_components'(T, ['enc_UE-S1AP-ID-pair_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UE-S1AP-ID-pair_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_9'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UE-S1AP-ID-pair_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_9'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UE-S1AP-ID-pair_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UE-S1AP-ID-pair_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UE-S1AP-ID-pair_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-S1AP-ID-pair_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UE-S1AP-ID-pair_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UE-S1AP-ID-pair_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UE-S1AP-ID-pair'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4294967295}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,16777215}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UE-S1AP-ID-pair_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UE-S1AP-ID-pair',Term1,Term2,Term3},Bytes7}.


'enc_UE-S1AP-IDs'({'UE-S1AP-IDs',Val}) ->
'enc_UE-S1AP-IDs'(Val);

'enc_UE-S1AP-IDs'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['uE-S1AP-ID-pair','mME-UE-S1AP-ID'],[]}, {2,0}),
case element(1,Val) of
'uE-S1AP-ID-pair' ->
'enc_UE-S1AP-ID-pair'(element(2,Val));
'mME-UE-S1AP-ID' ->
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],element(2,Val))
end
].


'dec_UE-S1AP-IDs'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {'uE-S1AP-ID-pair',
'dec_UE-S1AP-ID-pair'(Bytes2,telltype)};
1 -> {'mME-UE-S1AP-ID',
?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4294967295}}])};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_UEAggregateMaximumBitrate'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(2,Val1,uEaggregateMaximumBitRateDL)),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(3,Val1,uEaggregateMaximumBitRateUL)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_UEAggregateMaximumBitrate_iE-Extensions'(Tmpval1)
end].

'enc_UEAggregateMaximumBitrate_iE-Extensions'({'UEAggregateMaximumBitrate_iE-Extensions',Val}) ->
'enc_UEAggregateMaximumBitrate_iE-Extensions'(Val);

'enc_UEAggregateMaximumBitrate_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_UEAggregateMaximumBitrate_iE-Extensions_components'(Val, [])
].
'enc_UEAggregateMaximumBitrate_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_UEAggregateMaximumBitrate_iE-Extensions_components'([H|T], Acc) ->
'enc_UEAggregateMaximumBitrate_iE-Extensions_components'(T, ['enc_UEAggregateMaximumBitrate_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_UEAggregateMaximumBitrate_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_10'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_UEAggregateMaximumBitrate_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_10'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_UEAggregateMaximumBitrate_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_UEAggregateMaximumBitrate_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_UEAggregateMaximumBitrate_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEAggregateMaximumBitrate_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEAggregateMaximumBitrate_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_UEAggregateMaximumBitrate_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEAggregateMaximumBitrate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,10000000000}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,10000000000}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_UEAggregateMaximumBitrate_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'UEAggregateMaximumBitrate',Term1,Term2,Term3},Bytes7}.


'enc_TypeOfError'({'TypeOfError',Val}) ->
'enc_TypeOfError'(Val);

'enc_TypeOfError'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'not-understood' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'missing' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TypeOfError'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{'not-understood',missing},{}}).


'enc_E-UTRAN-Trace-ID'({'E-UTRAN-Trace-ID',Val}) ->
'enc_E-UTRAN-Trace-ID'(Val);

'enc_E-UTRAN-Trace-ID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',8}],Val).


'dec_E-UTRAN-Trace-ID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',8}]).


'enc_TraceDepth'({'TraceDepth',Val}) ->
'enc_TraceDepth'(Val);

'enc_TraceDepth'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'minimum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'maximum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'minimumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'mediumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'maximumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TraceDepth'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{minimum,medium,maximum,minimumWithoutVendorSpecificExtension,mediumWithoutVendorSpecificExtension,maximumWithoutVendorSpecificExtension},{}}).

'enc_TraceActivation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',8}],?RT_PER:cindex(2,Val1,'e-UTRAN-Trace-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',8}],?RT_PER:cindex(3,Val1,interfacesToTrace),[]),

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,traceDepth) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(4,Val1,traceDepth) end) of
'minimum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'maximum' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'minimumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'mediumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'maximumWithoutVendorSpecificExtension' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 4 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(5,Val1,traceCollectionEntityIPAddress),[]),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_TraceActivation_iE-Extensions'(Tmpval1)
end].

'enc_TraceActivation_iE-Extensions'({'TraceActivation_iE-Extensions',Val}) ->
'enc_TraceActivation_iE-Extensions'(Val);

'enc_TraceActivation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TraceActivation_iE-Extensions_components'(Val, [])
].
'enc_TraceActivation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TraceActivation_iE-Extensions_components'([H|T], Acc) ->
'enc_TraceActivation_iE-Extensions_components'(T, ['enc_TraceActivation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TraceActivation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_11'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TraceActivation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_11'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TraceActivation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TraceActivation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TraceActivation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TraceActivation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TraceActivation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TraceActivation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TraceActivation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',8}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',8}],[]),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,5}}],{{minimum,medium,maximum,minimumWithoutVendorSpecificExtension,mediumWithoutVendorSpecificExtension,maximumWithoutVendorSpecificExtension},{}}),

%% attribute number 4 with type BIT STRING
{Term4,Bytes6} = ?RT_PER:decode_bit_string(Bytes5,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_TraceActivation_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'TraceActivation',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_TransportLayerAddress'({'TransportLayerAddress',Val}) ->
'enc_TransportLayerAddress'(Val);

'enc_TransportLayerAddress'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Val,[]).


'dec_TransportLayerAddress'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{1,160},[]}}],[]).


'enc_Time-UE-StayedInCell'({'Time-UE-StayedInCell',Val}) ->
'enc_Time-UE-StayedInCell'(Val);

'enc_Time-UE-StayedInCell'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_Time-UE-StayedInCell'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_TimeToWait'({'TimeToWait',Val}) ->
'enc_TimeToWait'(Val);

'enc_TimeToWait'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'v1s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'v2s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'v5s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'v10s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'v20s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'v60s' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TimeToWait'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{v1s,v2s,v5s,v10s,v20s,v60s},{}}).


'enc_TargetBSS-ToSourceBSS-TransparentContainer'({'TargetBSS-ToSourceBSS-TransparentContainer',Val}) ->
'enc_TargetBSS-ToSourceBSS-TransparentContainer'(Val);

'enc_TargetBSS-ToSourceBSS-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_TargetBSS-ToSourceBSS-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_TargetRNC-ToSourceRNC-TransparentContainer'({'TargetRNC-ToSourceRNC-TransparentContainer',Val}) ->
'enc_TargetRNC-ToSourceRNC-TransparentContainer'(Val);

'enc_TargetRNC-ToSourceRNC-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_TargetRNC-ToSourceRNC-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Target-ToSource-TransparentContainer'({'Target-ToSource-TransparentContainer',Val}) ->
'enc_Target-ToSource-TransparentContainer'(Val);

'enc_Target-ToSource-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Target-ToSource-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_TargeteNB-ToSourceeNB-TransparentContainer'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(2,Val1,'rRC-Container')),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'(Tmpval1)
end].

'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'({'TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions',Val}) ->
'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'(Val);

'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(Val, [])
].
'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'([H|T], Acc) ->
'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(T, ['enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_12'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_12'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TargeteNB-ToSourceeNB-TransparentContainer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[]),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_TargeteNB-ToSourceeNB-TransparentContainer_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'TargeteNB-ToSourceeNB-TransparentContainer',Term1,Term2},Bytes6}.

'enc_TargetRNC-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,5,6],3,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedS1APLAI
'enc_LAI'(?RT_PER:cindex(2,Val1,lAI)),
case ?RT_PER:cindex(3,Val1,rAC) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],Tmpval1)
end,

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],?RT_PER:cindex(4,Val1,'rNC-ID')),
case ?RT_PER:cindex(5,Val1,'extendedRNC-ID') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{4096,65535}}],Tmpval2)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 5 with type SEQUENCE OF
'enc_TargetRNC-ID_iE-Extensions'(Tmpval3)
end].

'enc_TargetRNC-ID_iE-Extensions'({'TargetRNC-ID_iE-Extensions',Val}) ->
'enc_TargetRNC-ID_iE-Extensions'(Val);

'enc_TargetRNC-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TargetRNC-ID_iE-Extensions_components'(Val, [])
].
'enc_TargetRNC-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TargetRNC-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_TargetRNC-ID_iE-Extensions_components'(T, ['enc_TargetRNC-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TargetRNC-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_14'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TargetRNC-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_14'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TargetRNC-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TargetRNC-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TargetRNC-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TargetRNC-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TargetRNC-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TargetRNC-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TargetRNC-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,3), 
%%  attribute number 1 with type LAI
{Term1,Bytes3} = 'dec_LAI'(Bytes2,telltype),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = case Opt band (1 bsl 2) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',1}]);
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,4095}}]),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_integer(Bytes5,[{'ValueRange',{4096,65535}}]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_TargetRNC-ID_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'TargetRNC-ID',Term1,Term2,Term3,Term4,Term5},Bytes9}.

'enc_TargeteNB-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedS1APGlobal-ENB-ID
'enc_Global-ENB-ID'(?RT_PER:cindex(2,Val1,'global-ENB-ID')),

%% attribute number 2 with type Externaltypereference999S1APTAI
'enc_TAI'(?RT_PER:cindex(3,Val1,'selected-TAI')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_TargeteNB-ID_iE-Extensions'(Tmpval1)
end].

'enc_TargeteNB-ID_iE-Extensions'({'TargeteNB-ID_iE-Extensions',Val}) ->
'enc_TargeteNB-ID_iE-Extensions'(Val);

'enc_TargeteNB-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TargeteNB-ID_iE-Extensions_components'(Val, [])
].
'enc_TargeteNB-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TargeteNB-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_TargeteNB-ID_iE-Extensions_components'(T, ['enc_TargeteNB-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TargeteNB-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_16'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TargeteNB-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_16'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TargeteNB-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TargeteNB-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TargeteNB-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TargeteNB-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TargeteNB-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TargeteNB-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TargeteNB-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type Global-ENB-ID
{Term1,Bytes3} = 'dec_Global-ENB-ID'(Bytes2,telltype),

%%  attribute number 2 with type TAI
{Term2,Bytes4} = 'dec_TAI'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_TargeteNB-ID_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'TargeteNB-ID',Term1,Term2,Term3},Bytes7}.


'enc_TargetID'({'TargetID',Val}) ->
'enc_TargetID'(Val);

'enc_TargetID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['targeteNB-ID','targetRNC-ID',cGI],[]}, {3,0}),
case element(1,Val) of
'targeteNB-ID' ->
'enc_TargeteNB-ID'(element(2,Val));
'targetRNC-ID' ->
'enc_TargetRNC-ID'(element(2,Val));
cGI ->
'enc_CGI'(element(2,Val))
end
].


'dec_TargetID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {'targeteNB-ID',
'dec_TargeteNB-ID'(Bytes2,telltype)};
1 -> {'targetRNC-ID',
'dec_TargetRNC-ID'(Bytes2,telltype)};
2 -> {cGI,
'dec_CGI'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_TBCD-STRING'({'TBCD-STRING',Val}) ->
'enc_TBCD-STRING'(Val);

'enc_TBCD-STRING'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',3}],Val).


'dec_TBCD-STRING'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]).

'enc_CompletedCellinTAI-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference979S1APEUTRAN-CGI
'enc_EUTRAN-CGI'(?RT_PER:cindex(2,Val1,eCGI)),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CompletedCellinTAI-Item_iE-Extensions'(Tmpval1)
end].

'enc_CompletedCellinTAI-Item_iE-Extensions'({'CompletedCellinTAI-Item_iE-Extensions',Val}) ->
'enc_CompletedCellinTAI-Item_iE-Extensions'(Val);

'enc_CompletedCellinTAI-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CompletedCellinTAI-Item_iE-Extensions_components'(Val, [])
].
'enc_CompletedCellinTAI-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CompletedCellinTAI-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CompletedCellinTAI-Item_iE-Extensions_components'(T, ['enc_CompletedCellinTAI-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CompletedCellinTAI-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_18'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CompletedCellinTAI-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_18'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CompletedCellinTAI-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CompletedCellinTAI-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CompletedCellinTAI-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CompletedCellinTAI-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CompletedCellinTAI-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CompletedCellinTAI-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CompletedCellinTAI-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type EUTRAN-CGI
{Term1,Bytes3} = 'dec_EUTRAN-CGI'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CompletedCellinTAI-Item_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CompletedCellinTAI-Item',Term1,Term2},Bytes6}.


'enc_CompletedCellinTAI'({'CompletedCellinTAI',Val}) ->
'enc_CompletedCellinTAI'(Val);

'enc_CompletedCellinTAI'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CompletedCellinTAI_components'(Val, [])
].
'enc_CompletedCellinTAI_components'([], Acc) -> lists:reverse(Acc);

'enc_CompletedCellinTAI_components'([H|T], Acc) ->
'enc_CompletedCellinTAI_components'(T, ['enc_CompletedCellinTAI-Item'(H)

 | Acc]).


'dec_CompletedCellinTAI'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CompletedCellinTAI_components'(Num, Bytes1, telltype, []).
'dec_CompletedCellinTAI_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CompletedCellinTAI_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CompletedCellinTAI-Item'(Bytes,telltype),
   'dec_CompletedCellinTAI_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_TAI-Broadcast-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference966S1APTAI
'enc_TAI'(?RT_PER:cindex(2,Val1,tAI)),

%% attribute number 2 with type Externaltypereference967S1APCompletedCellinTAI
'enc_CompletedCellinTAI'(?RT_PER:cindex(3,Val1,completedCellinTAI)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_TAI-Broadcast-Item_iE-Extensions'(Tmpval1)
end].

'enc_TAI-Broadcast-Item_iE-Extensions'({'TAI-Broadcast-Item_iE-Extensions',Val}) ->
'enc_TAI-Broadcast-Item_iE-Extensions'(Val);

'enc_TAI-Broadcast-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TAI-Broadcast-Item_iE-Extensions_components'(Val, [])
].
'enc_TAI-Broadcast-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TAI-Broadcast-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_TAI-Broadcast-Item_iE-Extensions_components'(T, ['enc_TAI-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TAI-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_19'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TAI-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_19'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TAI-Broadcast-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TAI-Broadcast-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TAI-Broadcast-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAI-Broadcast-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAI-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TAI-Broadcast-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TAI-Broadcast-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type TAI
{Term1,Bytes3} = 'dec_TAI'(Bytes2,telltype),

%%  attribute number 2 with type CompletedCellinTAI
{Term2,Bytes4} = 'dec_CompletedCellinTAI'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_TAI-Broadcast-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'TAI-Broadcast-Item',Term1,Term2,Term3},Bytes7}.


'enc_TAI-Broadcast'({'TAI-Broadcast',Val}) ->
'enc_TAI-Broadcast'(Val);

'enc_TAI-Broadcast'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TAI-Broadcast_components'(Val, [])
].
'enc_TAI-Broadcast_components'([], Acc) -> lists:reverse(Acc);

'enc_TAI-Broadcast_components'([H|T], Acc) ->
'enc_TAI-Broadcast_components'(T, ['enc_TAI-Broadcast-Item'(H)

 | Acc]).


'dec_TAI-Broadcast'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TAI-Broadcast_components'(Num, Bytes1, telltype, []).
'dec_TAI-Broadcast_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAI-Broadcast_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAI-Broadcast-Item'(Bytes,telltype),
   'dec_TAI-Broadcast_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_TAI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,pLMNidentity)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(3,Val1,tAC)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_TAI_iE-Extensions'(Tmpval1)
end].

'enc_TAI_iE-Extensions'({'TAI_iE-Extensions',Val}) ->
'enc_TAI_iE-Extensions'(Val);

'enc_TAI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TAI_iE-Extensions_components'(Val, [])
].
'enc_TAI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TAI_iE-Extensions_components'([H|T], Acc) ->
'enc_TAI_iE-Extensions_components'(T, ['enc_TAI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TAI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_3'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TAI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_3'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TAI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TAI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TAI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TAI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TAI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',2}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_TAI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'TAI',Term1,Term2,Term3},Bytes7}.


'enc_TAIListforWarning'({'TAIListforWarning',Val}) ->
'enc_TAIListforWarning'(Val);

'enc_TAIListforWarning'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TAIListforWarning_components'(Val, [])
].
'enc_TAIListforWarning_components'([], Acc) -> lists:reverse(Acc);

'enc_TAIListforWarning_components'([H|T], Acc) ->
'enc_TAIListforWarning_components'(T, ['enc_TAI'(H)

 | Acc]).


'dec_TAIListforWarning'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TAIListforWarning_components'(Num, Bytes1, telltype, []).
'dec_TAIListforWarning_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAIListforWarning_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAI'(Bytes,telltype),
   'dec_TAIListforWarning_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_TAC'({'TAC',Val}) ->
'enc_TAC'(Val);

'enc_TAC'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_TAC'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).

'enc_S-TMSI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],?RT_PER:cindex(2,Val1,mMEC)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(3,Val1,'m-TMSI')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_S-TMSI_iE-Extensions'(Tmpval1)
end].

'enc_S-TMSI_iE-Extensions'({'S-TMSI_iE-Extensions',Val}) ->
'enc_S-TMSI_iE-Extensions'(Val);

'enc_S-TMSI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_S-TMSI_iE-Extensions_components'(Val, [])
].
'enc_S-TMSI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_S-TMSI_iE-Extensions_components'([H|T], Acc) ->
'enc_S-TMSI_iE-Extensions_components'(T, ['enc_S-TMSI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_S-TMSI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_5'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_S-TMSI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_5'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_S-TMSI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_S-TMSI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_S-TMSI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_S-TMSI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_S-TMSI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_S-TMSI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_S-TMSI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',1}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',4}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_S-TMSI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'S-TMSI',Term1,Term2,Term3},Bytes7}.

'enc_SupportedTAs-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(2,Val1,tAC)),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APBPLMNs
'enc_BPLMNs'(?RT_PER:cindex(3,Val1,broadcastPLMNs)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_SupportedTAs-Item_iE-Extensions'(Tmpval1)
end].

'enc_SupportedTAs-Item_iE-Extensions'({'SupportedTAs-Item_iE-Extensions',Val}) ->
'enc_SupportedTAs-Item_iE-Extensions'(Val);

'enc_SupportedTAs-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SupportedTAs-Item_iE-Extensions_components'(Val, [])
].
'enc_SupportedTAs-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SupportedTAs-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_SupportedTAs-Item_iE-Extensions_components'(T, ['enc_SupportedTAs-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SupportedTAs-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_20'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SupportedTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_20'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SupportedTAs-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SupportedTAs-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SupportedTAs-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SupportedTAs-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SupportedTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SupportedTAs-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SupportedTAs-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',2}]),

%%  attribute number 2 with type BPLMNs
{Term2,Bytes4} = 'dec_BPLMNs'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_SupportedTAs-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'SupportedTAs-Item',Term1,Term2,Term3},Bytes7}.


'enc_SupportedTAs'({'SupportedTAs',Val}) ->
'enc_SupportedTAs'(Val);

'enc_SupportedTAs'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_SupportedTAs_components'(Val, [])
].
'enc_SupportedTAs_components'([], Acc) -> lists:reverse(Acc);

'enc_SupportedTAs_components'([H|T], Acc) ->
'enc_SupportedTAs_components'(T, ['enc_SupportedTAs-Item'(H)

 | Acc]).


'dec_SupportedTAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_SupportedTAs_components'(Num, Bytes1, telltype, []).
'dec_SupportedTAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SupportedTAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SupportedTAs-Item'(Bytes,telltype),
   'dec_SupportedTAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_SubscriberProfileIDforRFP'({'SubscriberProfileIDforRFP',Val}) ->
'enc_SubscriberProfileIDforRFP'(Val);

'enc_SubscriberProfileIDforRFP'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{1,256}}],Val).


'dec_SubscriberProfileIDforRFP'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{1,256}}]).


'enc_ServedPLMNs'({'ServedPLMNs',Val}) ->
'enc_ServedPLMNs'(Val);

'enc_ServedPLMNs'(Val) ->
[

   ?RT_PER:encode_length({1,32},length(Val)),
   'enc_ServedPLMNs_components'(Val, [])
].
'enc_ServedPLMNs_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedPLMNs_components'([H|T], Acc) ->
'enc_ServedPLMNs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_ServedPLMNs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,32}),
'dec_ServedPLMNs_components'(Num, Bytes1, telltype, []).
'dec_ServedPLMNs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedPLMNs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_ServedPLMNs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ServedMMECs'({'ServedMMECs',Val}) ->
'enc_ServedMMECs'(Val);

'enc_ServedMMECs'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_ServedMMECs_components'(Val, [])
].
'enc_ServedMMECs_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedMMECs_components'([H|T], Acc) ->
'enc_ServedMMECs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',1}],H) | Acc]).


'dec_ServedMMECs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_ServedMMECs_components'(Num, Bytes1, telltype, []).
'dec_ServedMMECs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedMMECs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',1}]),
   'dec_ServedMMECs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ServedGroupIDs'({'ServedGroupIDs',Val}) ->
'enc_ServedGroupIDs'(Val);

'enc_ServedGroupIDs'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ServedGroupIDs_components'(Val, [])
].
'enc_ServedGroupIDs_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedGroupIDs_components'([H|T], Acc) ->
'enc_ServedGroupIDs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',2}],H) | Acc]).


'dec_ServedGroupIDs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ServedGroupIDs_components'(Num, Bytes1, telltype, []).
'dec_ServedGroupIDs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedGroupIDs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]),
   'dec_ServedGroupIDs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ServedGUMMEIsItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference904S1APServedPLMNs
'enc_ServedPLMNs'(?RT_PER:cindex(2,Val1,servedPLMNs)),

%% attribute number 2 with type Externaltypereference905S1APServedGroupIDs
'enc_ServedGroupIDs'(?RT_PER:cindex(3,Val1,servedGroupIDs)),

%% attribute number 3 with type Externaltypereference906S1APServedMMECs
'enc_ServedMMECs'(?RT_PER:cindex(4,Val1,servedMMECs)),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_ServedGUMMEIsItem_iE-Extensions'(Tmpval1)
end].

'enc_ServedGUMMEIsItem_iE-Extensions'({'ServedGUMMEIsItem_iE-Extensions',Val}) ->
'enc_ServedGUMMEIsItem_iE-Extensions'(Val);

'enc_ServedGUMMEIsItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ServedGUMMEIsItem_iE-Extensions_components'(Val, [])
].
'enc_ServedGUMMEIsItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedGUMMEIsItem_iE-Extensions_components'([H|T], Acc) ->
'enc_ServedGUMMEIsItem_iE-Extensions_components'(T, ['enc_ServedGUMMEIsItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ServedGUMMEIsItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_21'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ServedGUMMEIsItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_21'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ServedGUMMEIsItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ServedGUMMEIsItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ServedGUMMEIsItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedGUMMEIsItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedGUMMEIsItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ServedGUMMEIsItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ServedGUMMEIsItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type ServedPLMNs
{Term1,Bytes3} = 'dec_ServedPLMNs'(Bytes2,telltype),

%%  attribute number 2 with type ServedGroupIDs
{Term2,Bytes4} = 'dec_ServedGroupIDs'(Bytes3,telltype),

%%  attribute number 3 with type ServedMMECs
{Term3,Bytes5} = 'dec_ServedMMECs'(Bytes4,telltype),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_ServedGUMMEIsItem_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'ServedGUMMEIsItem',Term1,Term2,Term3,Term4},Bytes8}.


'enc_ServedGUMMEIs'({'ServedGUMMEIs',Val}) ->
'enc_ServedGUMMEIs'(Val);

'enc_ServedGUMMEIs'(Val) ->
[

   ?RT_PER:encode_length({1,8},length(Val)),
   'enc_ServedGUMMEIs_components'(Val, [])
].
'enc_ServedGUMMEIs_components'([], Acc) -> lists:reverse(Acc);

'enc_ServedGUMMEIs_components'([H|T], Acc) ->
'enc_ServedGUMMEIs_components'(T, ['enc_ServedGUMMEIsItem'(H)

 | Acc]).


'dec_ServedGUMMEIs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,8}),
'dec_ServedGUMMEIs_components'(Num, Bytes1, telltype, []).
'dec_ServedGUMMEIs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ServedGUMMEIs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ServedGUMMEIsItem'(Bytes,telltype),
   'dec_ServedGUMMEIs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_SourceRNC-ToTargetRNC-TransparentContainer'({'SourceRNC-ToTargetRNC-TransparentContainer',Val}) ->
'enc_SourceRNC-ToTargetRNC-TransparentContainer'(Val);

'enc_SourceRNC-ToTargetRNC-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_SourceRNC-ToTargetRNC-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_SourceeNB-ToTargeteNB-TransparentContainer'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,5,7],3,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(2,Val1,'rRC-Container')),
case ?RT_PER:cindex(3,Val1,'e-RABInformationList') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedS1APE-RABInformationList
'enc_E-RABInformationList'(Tmpval1)
end,

%% attribute number 3 with type Externaltypereference886S1APEUTRAN-CGI
'enc_EUTRAN-CGI'(?RT_PER:cindex(4,Val1,'targetCell-ID')),
case ?RT_PER:cindex(5,Val1,subscriberProfileIDforRFP) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{1,256}}],Tmpval2)
end,

%% attribute number 5 with type Externaltypereference888S1APUE-HistoryInformation
'enc_UE-HistoryInformation'(?RT_PER:cindex(6,Val1,'uE-HistoryInformation')),
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 6 with type SEQUENCE OF
'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'(Tmpval3)
end].

'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'({'SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions',Val}) ->
'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'(Val);

'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(Val, [])
].
'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'([H|T], Acc) ->
'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(T, ['enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_23'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_23'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SourceeNB-ToTargeteNB-TransparentContainer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,3), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[]),

%%  attribute number 2 with type E-RABInformationList
{Term2,Bytes4} = case Opt band (1 bsl 2) of
  _Opt2 when _Opt2 > 0 ->'dec_E-RABInformationList'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type EUTRAN-CGI
{Term3,Bytes5} = 'dec_EUTRAN-CGI'(Bytes4,telltype),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_integer(Bytes5,[{'ValueRange',{1,256}}]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%%  attribute number 5 with type UE-HistoryInformation
{Term5,Bytes7} = 'dec_UE-HistoryInformation'(Bytes6,telltype),

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_SourceeNB-ToTargeteNB-TransparentContainer_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'SourceeNB-ToTargeteNB-TransparentContainer',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_SRVCCHOIndication'({'SRVCCHOIndication',Val}) ->
'enc_SRVCCHOIndication'(Val);

'enc_SRVCCHOIndication'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'pSandCS' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'cSonly' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SRVCCHOIndication'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{pSandCS,cSonly},{}}).


'enc_SRVCCOperationPossible'({'SRVCCOperationPossible',Val}) ->
'enc_SRVCCOperationPossible'(Val);

'enc_SRVCCOperationPossible'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'possible' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SRVCCOperationPossible'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{possible},{}}).

'enc_SourceeNB-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
Opt,

%% attribute number 1 with type Externaltypereference863S1APGlobal-ENB-ID
'enc_Global-ENB-ID'(?RT_PER:cindex(2,Val1,'global-ENB-ID')),

%% attribute number 2 with type Externaltypereference864S1APTAI
'enc_TAI'(?RT_PER:cindex(3,Val1,'selected-TAI')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_SourceeNB-ID_iE-Extensions'(Tmpval1)
end].

'enc_SourceeNB-ID_iE-Extensions'({'SourceeNB-ID_iE-Extensions',Val}) ->
'enc_SourceeNB-ID_iE-Extensions'(Val);

'enc_SourceeNB-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SourceeNB-ID_iE-Extensions_components'(Val, [])
].
'enc_SourceeNB-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SourceeNB-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_SourceeNB-ID_iE-Extensions_components'(T, ['enc_SourceeNB-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SourceeNB-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_24'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SourceeNB-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_24'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SourceeNB-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SourceeNB-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SourceeNB-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SourceeNB-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SourceeNB-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SourceeNB-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SourceeNB-ID'(Bytes,_) ->
{Opt,Bytes1} = ?RT_PER:getoptionals2(Bytes,1), 
%%  attribute number 1 with type Global-ENB-ID
{Term1,Bytes2} = 'dec_Global-ENB-ID'(Bytes1,telltype),

%%  attribute number 2 with type TAI
{Term2,Bytes3} = 'dec_TAI'(Bytes2,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes4} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_SourceeNB-ID_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{{'SourceeNB-ID',Term1,Term2,Term3},Bytes4}.


'enc_SourceBSS-ToTargetBSS-TransparentContainer'({'SourceBSS-ToTargetBSS-TransparentContainer',Val}) ->
'enc_SourceBSS-ToTargetBSS-TransparentContainer'(Val);

'enc_SourceBSS-ToTargetBSS-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_SourceBSS-ToTargetBSS-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Source-ToTarget-TransparentContainer'({'Source-ToTarget-TransparentContainer',Val}) ->
'enc_Source-ToTarget-TransparentContainer'(Val);

'enc_Source-ToTarget-TransparentContainer'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Source-ToTarget-TransparentContainer'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_SONConfigurationTransfer'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference846S1APTargeteNB-ID
'enc_TargeteNB-ID'(?RT_PER:cindex(2,Val1,'targeteNB-ID')),

%% attribute number 2 with type Externaltypereference847S1APSourceeNB-ID
'enc_SourceeNB-ID'(?RT_PER:cindex(3,Val1,'sourceeNB-ID')),

%% attribute number 3 with type ExternaltypereferenceundefinedS1APSONInformation
'enc_SONInformation'(?RT_PER:cindex(4,Val1,sONInformation)),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_SONConfigurationTransfer_iE-Extensions'(Tmpval1)
end].

'enc_SONConfigurationTransfer_iE-Extensions'({'SONConfigurationTransfer_iE-Extensions',Val}) ->
'enc_SONConfigurationTransfer_iE-Extensions'(Val);

'enc_SONConfigurationTransfer_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SONConfigurationTransfer_iE-Extensions_components'(Val, [])
].
'enc_SONConfigurationTransfer_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SONConfigurationTransfer_iE-Extensions_components'([H|T], Acc) ->
'enc_SONConfigurationTransfer_iE-Extensions_components'(T, ['enc_SONConfigurationTransfer_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SONConfigurationTransfer_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_26'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SONConfigurationTransfer_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_26'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SONConfigurationTransfer_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SONConfigurationTransfer_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SONConfigurationTransfer_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SONConfigurationTransfer_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SONConfigurationTransfer_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SONConfigurationTransfer_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SONConfigurationTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type TargeteNB-ID
{Term1,Bytes3} = 'dec_TargeteNB-ID'(Bytes2,telltype),

%%  attribute number 2 with type SourceeNB-ID
{Term2,Bytes4} = 'dec_SourceeNB-ID'(Bytes3,telltype),

%%  attribute number 3 with type SONInformation
{Term3,Bytes5} = 'dec_SONInformation'(Bytes4,telltype),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_SONConfigurationTransfer_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'SONConfigurationTransfer',Term1,Term2,Term3,Term4},Bytes8}.

'enc_SONInformationReply'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([2,3],2,Val),
[
?RT_PER:setext(false), Opt,
case ?RT_PER:cindex(2,Val1,x2TNLConfigurationInfo) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 1 with type Externaltypereference835S1APX2TNLConfigurationInfo
'enc_X2TNLConfigurationInfo'(Tmpval1)
end,
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 2 with type SEQUENCE OF
'enc_SONInformationReply_iE-Extensions'(Tmpval2)
end].

'enc_SONInformationReply_iE-Extensions'({'SONInformationReply_iE-Extensions',Val}) ->
'enc_SONInformationReply_iE-Extensions'(Val);

'enc_SONInformationReply_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SONInformationReply_iE-Extensions_components'(Val, [])
].
'enc_SONInformationReply_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SONInformationReply_iE-Extensions_components'([H|T], Acc) ->
'enc_SONInformationReply_iE-Extensions_components'(T, ['enc_SONInformationReply_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SONInformationReply_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_25'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SONInformationReply_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_25'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SONInformationReply_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SONInformationReply_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SONInformationReply_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SONInformationReply_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SONInformationReply_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SONInformationReply_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SONInformationReply'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%%  attribute number 1 with type X2TNLConfigurationInfo
{Term1,Bytes3} = case Opt band (1 bsl 1) of
  _Opt1 when _Opt1 > 0 ->'dec_X2TNLConfigurationInfo'(Bytes2,telltype);
0 ->{asn1_NOVALUE,Bytes2}

end,

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_SONInformationReply_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'SONInformationReply',Term1,Term2},Bytes6}.


'enc_SONInformationRequest'({'SONInformationRequest',Val}) ->
'enc_SONInformationRequest'(Val);

'enc_SONInformationRequest'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'x2TNL-Configuration-Info' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_SONInformationRequest'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'x2TNL-Configuration-Info'},{}}).


'enc_SONInformation'({'SONInformation',Val}) ->
'enc_SONInformation'(Val);

'enc_SONInformation'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[sONInformationRequest,sONInformationReply],[]}, {2,0}),
case element(1,Val) of
sONInformationRequest ->
case (case element(2,Val) of {_,Enumval1}-> Enumval1;_->element(2,Val) end) of
'x2TNL-Configuration-Info' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
sONInformationReply ->
'enc_SONInformationReply'(element(2,Val))
end
].


'dec_SONInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {sONInformationRequest,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,0}}],{{'x2TNL-Configuration-Info'},{}})};
1 -> {sONInformationReply,
'dec_SONInformationReply'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_SerialNumber'({'SerialNumber',Val}) ->
'enc_SerialNumber'(Val);

'enc_SerialNumber'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',16}],Val,[]).


'dec_SerialNumber'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',16}],[]).

'enc_SecurityContext'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,7}}],?RT_PER:cindex(2,Val1,nextHopChainingCount)),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',256}],?RT_PER:cindex(3,Val1,nextHopParameter),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_SecurityContext_iE-Extensions'(Tmpval1)
end].

'enc_SecurityContext_iE-Extensions'({'SecurityContext_iE-Extensions',Val}) ->
'enc_SecurityContext_iE-Extensions'(Val);

'enc_SecurityContext_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_SecurityContext_iE-Extensions_components'(Val, [])
].
'enc_SecurityContext_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_SecurityContext_iE-Extensions_components'([H|T], Acc) ->
'enc_SecurityContext_iE-Extensions_components'(T, ['enc_SecurityContext_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_SecurityContext_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_27'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_SecurityContext_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_27'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_SecurityContext_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_SecurityContext_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_SecurityContext_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_SecurityContext_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_SecurityContext_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_SecurityContext_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_SecurityContext'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,7}}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',256}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_SecurityContext_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'SecurityContext',Term1,Term2,Term3},Bytes7}.


'enc_SecurityKey'({'SecurityKey',Val}) ->
'enc_SecurityKey'(Val);

'enc_SecurityKey'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',256}],Val,[]).


'dec_SecurityKey'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',256}],[]).


'enc_RRC-Establishment-Cause'({'RRC-Establishment-Cause',Val}) ->
'enc_RRC-Establishment-Cause'(Val);

'enc_RRC-Establishment-Cause'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'emergency' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 0)];
'highPriorityAccess' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 1)];
'mt-Access' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 2)];
'mo-Signalling' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 3)];
'mo-Data' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 4)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_RRC-Establishment-Cause'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,4}}],{{emergency,highPriorityAccess,'mt-Access','mo-Signalling','mo-Data'},{}}).


'enc_RRC-Container'({'RRC-Container',Val}) ->
'enc_RRC-Container'(Val);

'enc_RRC-Container'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_RRC-Container'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_RNC-ID'({'RNC-ID',Val}) ->
'enc_RNC-ID'(Val);

'enc_RNC-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_RNC-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_RepetitionPeriod'({'RepetitionPeriod',Val}) ->
'enc_RepetitionPeriod'(Val);

'enc_RepetitionPeriod'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4096}}],Val).


'dec_RepetitionPeriod'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4096}}]).


'enc_ReportArea'({'ReportArea',Val}) ->
'enc_ReportArea'(Val);

'enc_ReportArea'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'ecgi' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ReportArea'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{ecgi},{}}).


'enc_RIMRoutingAddress'({'RIMRoutingAddress',Val}) ->
'enc_RIMRoutingAddress'(Val);

'enc_RIMRoutingAddress'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['gERAN-Cell-ID'],[]}, {1,0}),
case element(1,Val) of
'gERAN-Cell-ID' ->
'enc_GERAN-Cell-ID'(element(2,Val))
end
].


'dec_RIMRoutingAddress'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,1,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*1 of
0 -> {'gERAN-Cell-ID',
'dec_GERAN-Cell-ID'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_RIMInformation'({'RIMInformation',Val}) ->
'enc_RIMInformation'(Val);

'enc_RIMInformation'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_RIMInformation'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_RIMTransfer'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(2,Val1,rIMInformation)),
case ?RT_PER:cindex(3,Val1,rIMRoutingAddress) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type Externaltypereference765S1APRIMRoutingAddress
'enc_RIMRoutingAddress'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type SEQUENCE OF
'enc_RIMTransfer_iE-Extensions'(Tmpval2)
end].

'enc_RIMTransfer_iE-Extensions'({'RIMTransfer_iE-Extensions',Val}) ->
'enc_RIMTransfer_iE-Extensions'(Val);

'enc_RIMTransfer_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_RIMTransfer_iE-Extensions_components'(Val, [])
].
'enc_RIMTransfer_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_RIMTransfer_iE-Extensions_components'([H|T], Acc) ->
'enc_RIMTransfer_iE-Extensions_components'(T, ['enc_RIMTransfer_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_RIMTransfer_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_29'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_RIMTransfer_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_29'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_RIMTransfer_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_RIMTransfer_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_RIMTransfer_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_RIMTransfer_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_RIMTransfer_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_RIMTransfer_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_RIMTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[]),

%%  attribute number 2 with type RIMRoutingAddress
{Term2,Bytes4} = case Opt band (1 bsl 1) of
  _Opt2 when _Opt2 > 0 ->'dec_RIMRoutingAddress'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_RIMTransfer_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'RIMTransfer',Term1,Term2,Term3},Bytes7}.

'enc_RequestType'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,eventType) of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,eventType) end) of
'direct' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'change-of-serve-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'stop-change-of-serve-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,reportArea) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(3,Val1,reportArea) end) of
'ecgi' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_RequestType_iE-Extensions'(Tmpval1)
end].

'enc_RequestType_iE-Extensions'({'RequestType_iE-Extensions',Val}) ->
'enc_RequestType_iE-Extensions'(Val);

'enc_RequestType_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_RequestType_iE-Extensions_components'(Val, [])
].
'enc_RequestType_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_RequestType_iE-Extensions_components'([H|T], Acc) ->
'enc_RequestType_iE-Extensions_components'(T, ['enc_RequestType_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_RequestType_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_30'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_RequestType_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_30'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_RequestType_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_RequestType_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_RequestType_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_RequestType_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_RequestType_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_RequestType_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_RequestType'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,2}}],{{direct,'change-of-serve-cell','stop-change-of-serve-cell'},{}}),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,0}}],{{ecgi},{}}),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_RequestType_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'RequestType',Term1,Term2,Term3},Bytes7}.


'enc_RAC'({'RAC',Val}) ->
'enc_RAC'(Val);

'enc_RAC'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',1}],Val).


'dec_RAC'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',1}]).


'enc_RelativeMMECapacity'({'RelativeMMECapacity',Val}) ->
'enc_RelativeMMECapacity'(Val);

'enc_RelativeMMECapacity'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Val).


'dec_RelativeMMECapacity'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]).


'enc_ReceiveStatusofULPDCPSDUs'({'ReceiveStatusofULPDCPSDUs',Val}) ->
'enc_ReceiveStatusofULPDCPSDUs'(Val);

'enc_ReceiveStatusofULPDCPSDUs'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',4096}],Val,[]).


'dec_ReceiveStatusofULPDCPSDUs'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',4096}],[]).


'enc_QCI'({'QCI',Val}) ->
'enc_QCI'(Val);

'enc_QCI'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Val).


'dec_QCI'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]).


'enc_PriorityLevel'({'PriorityLevel',Val}) ->
'enc_PriorityLevel'(Val);

'enc_PriorityLevel'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,15}}],Val,[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]).


'dec_PriorityLevel'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,15}}],[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]).


'enc_Pre-emptionVulnerability'({'Pre-emptionVulnerability',Val}) ->
'enc_Pre-emptionVulnerability'(Val);

'enc_Pre-emptionVulnerability'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'not-pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Pre-emptionVulnerability'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{'not-pre-emptable','pre-emptable'}).


'enc_Pre-emptionCapability'({'Pre-emptionCapability',Val}) ->
'enc_Pre-emptionCapability'(Val);

'enc_Pre-emptionCapability'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'shall-not-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'may-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Pre-emptionCapability'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{'shall-not-trigger-pre-emption','may-trigger-pre-emption'}).


'enc_PLMNidentity'({'PLMNidentity',Val}) ->
'enc_PLMNidentity'(Val);

'enc_PLMNidentity'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',3}],Val).


'dec_PLMNidentity'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]).


'enc_PDCP-SN'({'PDCP-SN',Val}) ->
'enc_PDCP-SN'(Val);

'enc_PDCP-SN'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],Val).


'dec_PDCP-SN'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4095}}]).


'enc_PagingDRX'({'PagingDRX',Val}) ->
'enc_PagingDRX'(Val);

'enc_PagingDRX'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'v32' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'v64' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'v128' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'v256' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_PagingDRX'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{v32,v64,v128,v256},{}}).


'enc_OverloadResponse'({'OverloadResponse',Val}) ->
'enc_OverloadResponse'(Val);

'enc_OverloadResponse'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[overloadAction],[]}, {1,0}),
case element(1,Val) of
overloadAction ->
case (case element(2,Val) of {_,Enumval1}-> Enumval1;_->element(2,Val) end) of
'reject-non-emergency-mo-dt' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'reject-all-rrc-cr-signalling' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'permit-emergency-sessions-only' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end
].


'dec_OverloadResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,1,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*1 of
0 -> {overloadAction,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,2}}],{{'reject-non-emergency-mo-dt','reject-all-rrc-cr-signalling','permit-emergency-sessions-only'},{}})};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_OverloadAction'({'OverloadAction',Val}) ->
'enc_OverloadAction'(Val);

'enc_OverloadAction'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'reject-non-emergency-mo-dt' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'reject-all-rrc-cr-signalling' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'permit-emergency-sessions-only' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_OverloadAction'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{{'reject-non-emergency-mo-dt','reject-all-rrc-cr-signalling','permit-emergency-sessions-only'},{}}).


'enc_OldBSS-ToNewBSS-Information'({'OldBSS-ToNewBSS-Information',Val}) ->
'enc_OldBSS-ToNewBSS-Information'(Val);

'enc_OldBSS-ToNewBSS-Information'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_OldBSS-ToNewBSS-Information'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_NumberofBroadcast'({'NumberofBroadcast',Val}) ->
'enc_NumberofBroadcast'(Val);

'enc_NumberofBroadcast'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_NumberofBroadcast'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_NumberofBroadcastRequest'({'NumberofBroadcastRequest',Val}) ->
'enc_NumberofBroadcastRequest'(Val);

'enc_NumberofBroadcastRequest'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_NumberofBroadcastRequest'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_NASSecurityParameterstoE-UTRAN'({'NASSecurityParameterstoE-UTRAN',Val}) ->
'enc_NASSecurityParameterstoE-UTRAN'(Val);

'enc_NASSecurityParameterstoE-UTRAN'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_NASSecurityParameterstoE-UTRAN'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_NASSecurityParametersfromE-UTRAN'({'NASSecurityParametersfromE-UTRAN',Val}) ->
'enc_NASSecurityParametersfromE-UTRAN'(Val);

'enc_NASSecurityParametersfromE-UTRAN'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_NASSecurityParametersfromE-UTRAN'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_NAS-PDU'({'NAS-PDU',Val}) ->
'enc_NAS-PDU'(Val);

'enc_NAS-PDU'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_NAS-PDU'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_MSClassmark3'({'MSClassmark3',Val}) ->
'enc_MSClassmark3'(Val);

'enc_MSClassmark3'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_MSClassmark3'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_MSClassmark2'({'MSClassmark2',Val}) ->
'enc_MSClassmark2'(Val);

'enc_MSClassmark2'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_MSClassmark2'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_M-TMSI'({'M-TMSI',Val}) ->
'enc_M-TMSI'(Val);

'enc_M-TMSI'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Val).


'dec_M-TMSI'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',4}]).


'enc_MME-UE-S1AP-ID'({'MME-UE-S1AP-ID',Val}) ->
'enc_MME-UE-S1AP-ID'(Val);

'enc_MME-UE-S1AP-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,4294967295}}],Val).


'dec_MME-UE-S1AP-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,4294967295}}]).


'enc_MME-Code'({'MME-Code',Val}) ->
'enc_MME-Code'(Val);

'enc_MME-Code'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',1}],Val).


'dec_MME-Code'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',1}]).


'enc_MME-Group-ID'({'MME-Group-ID',Val}) ->
'enc_MME-Group-ID'(Val);

'enc_MME-Group-ID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_MME-Group-ID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).


'enc_MMEname'({'MMEname',Val}) ->
'enc_MMEname'(Val);

'enc_MMEname'(Val) ->
?RT_PER:encode_PrintableString([{'SizeConstraint',{{1,150},[]}}],Val).


'dec_MMEname'(Bytes,_) ->
?RT_PER:decode_PrintableString(Bytes,[{'SizeConstraint',{{1,150},[]}}]).


'enc_MessageIdentifier'({'MessageIdentifier',Val}) ->
'enc_MessageIdentifier'(Val);

'enc_MessageIdentifier'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',16}],Val,[]).


'dec_MessageIdentifier'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',16}],[]).


'enc_L3-Information'({'L3-Information',Val}) ->
'enc_L3-Information'(Val);

'enc_L3-Information'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_L3-Information'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_LastVisitedGERANCellInformation'({'LastVisitedGERANCellInformation',Val}) ->
'enc_LastVisitedGERANCellInformation'(Val);

'enc_LastVisitedGERANCellInformation'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[undefined],[]}, {1,0}),
case element(1,Val) of
undefined ->
?RT_PER:encode_null(element(2,Val))
end
].


'dec_LastVisitedGERANCellInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,1,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*1 of
0 -> {undefined,
?RT_PER:decode_null(Bytes2)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_LastVisitedUTRANCellInformation'({'LastVisitedUTRANCellInformation',Val}) ->
'enc_LastVisitedUTRANCellInformation'(Val);

'enc_LastVisitedUTRANCellInformation'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_LastVisitedUTRANCellInformation'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_LastVisitedEUTRANCellInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference648S1APEUTRAN-CGI
'enc_EUTRAN-CGI'(?RT_PER:cindex(2,Val1,'global-Cell-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APCellType
'enc_CellType'(?RT_PER:cindex(3,Val1,cellType)),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],?RT_PER:cindex(4,Val1,'time-UE-StayedInCell')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Tmpval1)
end].

'enc_LastVisitedEUTRANCellInformation_iE-Extensions'({'LastVisitedEUTRANCellInformation_iE-Extensions',Val}) ->
'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Val);

'enc_LastVisitedEUTRANCellInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Val, [])
].
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_components'(T, ['enc_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_7'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_7'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_LastVisitedEUTRANCellInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LastVisitedEUTRANCellInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_LastVisitedEUTRANCellInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LastVisitedEUTRANCellInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type EUTRAN-CGI
{Term1,Bytes3} = 'dec_EUTRAN-CGI'(Bytes2,telltype),

%%  attribute number 2 with type CellType
{Term2,Bytes4} = 'dec_CellType'(Bytes3,telltype),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,4095}}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_LastVisitedEUTRANCellInformation_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'LastVisitedEUTRANCellInformation',Term1,Term2,Term3,Term4},Bytes8}.


'enc_LastVisitedCell-Item'({'LastVisitedCell-Item',Val}) ->
'enc_LastVisitedCell-Item'(Val);

'enc_LastVisitedCell-Item'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['e-UTRAN-Cell','uTRAN-Cell','gERAN-Cell'],[]}, {3,0}),
case element(1,Val) of
'e-UTRAN-Cell' ->
'enc_LastVisitedEUTRANCellInformation'(element(2,Val));
'uTRAN-Cell' ->
?RT_PER:encode_octet_string([],element(2,Val));
'gERAN-Cell' ->
'enc_LastVisitedGERANCellInformation'(element(2,Val))
end
].


'dec_LastVisitedCell-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {'e-UTRAN-Cell',
'dec_LastVisitedEUTRANCellInformation'(Bytes2,telltype)};
1 -> {'uTRAN-Cell',
?RT_PER:decode_octet_string(Bytes2,[])};
2 -> {'gERAN-Cell',
'dec_LastVisitedGERANCellInformation'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_LAI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,pLMNidentity)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(3,Val1,lAC)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_LAI_iE-Extensions'(Tmpval1)
end].

'enc_LAI_iE-Extensions'({'LAI_iE-Extensions',Val}) ->
'enc_LAI_iE-Extensions'(Val);

'enc_LAI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_LAI_iE-Extensions_components'(Val, [])
].
'enc_LAI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_LAI_iE-Extensions_components'([H|T], Acc) ->
'enc_LAI_iE-Extensions_components'(T, ['enc_LAI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_LAI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_13'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_LAI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_13'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_LAI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_LAI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_LAI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LAI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LAI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_LAI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LAI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',2}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_LAI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'LAI',Term1,Term2,Term3},Bytes7}.


'enc_LAC'({'LAC',Val}) ->
'enc_LAC'(Val);

'enc_LAC'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_LAC'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).


'enc_InterfacesToTrace'({'InterfacesToTrace',Val}) ->
'enc_InterfacesToTrace'(Val);

'enc_InterfacesToTrace'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',8}],Val,[]).


'dec_InterfacesToTrace'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',8}],[]).


'enc_IntegrityProtectionAlgorithms'({'IntegrityProtectionAlgorithms',Val}) ->
'enc_IntegrityProtectionAlgorithms'(Val);

'enc_IntegrityProtectionAlgorithms'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],Val,[]).


'dec_IntegrityProtectionAlgorithms'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{16,16},[]}}],[]).


'enc_IMSI'({'IMSI',Val}) ->
'enc_IMSI'(Val);

'enc_IMSI'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',{3,8}}],Val).


'dec_IMSI'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',{3,8}}]).


'enc_HFN'({'HFN',Val}) ->
'enc_HFN'(Val);

'enc_HFN'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,1048575}}],Val).


'dec_HFN'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,1048575}}]).


'enc_HandoverType'({'HandoverType',Val}) ->
'enc_HandoverType'(Val);

'enc_HandoverType'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'intralte' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 0)];
'ltetoutran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 1)];
'ltetogeran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 2)];
'utrantolte' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 3)];
'gerantolte' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,4}}], 4)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_HandoverType'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,4}}],{{intralte,ltetoutran,ltetogeran,utrantolte,gerantolte},{}}).

'enc_HandoverRestrictionList'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5,6,7],5,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,servingPLMN)),
case ?RT_PER:cindex(3,Val1,equivalentPLMNs) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ExternaltypereferenceundefinedS1APEPLMNs
'enc_EPLMNs'(Tmpval1)
end,
case ?RT_PER:cindex(4,Val1,forbiddenTAs) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type ExternaltypereferenceundefinedS1APForbiddenTAs
'enc_ForbiddenTAs'(Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,forbiddenLAs) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type ExternaltypereferenceundefinedS1APForbiddenLAs
'enc_ForbiddenLAs'(Tmpval3)
end,
case ?RT_PER:cindex(6,Val1,forbiddenInterRATs) of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 5 with type ENUMERATED
case (case Tmpval4 of {_,Enumval2}-> Enumval2;_->Tmpval4 end) of
'all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'geran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'utran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'cdma2000' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 6 with type SEQUENCE OF
'enc_HandoverRestrictionList_iE-Extensions'(Tmpval5)
end].

'enc_HandoverRestrictionList_iE-Extensions'({'HandoverRestrictionList_iE-Extensions',Val}) ->
'enc_HandoverRestrictionList_iE-Extensions'(Val);

'enc_HandoverRestrictionList_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_HandoverRestrictionList_iE-Extensions_components'(Val, [])
].
'enc_HandoverRestrictionList_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRestrictionList_iE-Extensions_components'([H|T], Acc) ->
'enc_HandoverRestrictionList_iE-Extensions_components'(T, ['enc_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_33'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_33'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRestrictionList_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_HandoverRestrictionList_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_HandoverRestrictionList_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRestrictionList_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRestrictionList_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_HandoverRestrictionList_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRestrictionList'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type EPLMNs
{Term2,Bytes4} = case Opt band (1 bsl 4) of
  _Opt2 when _Opt2 > 0 ->'dec_EPLMNs'(Bytes3,telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,

%%  attribute number 3 with type ForbiddenTAs
{Term3,Bytes5} = case Opt band (1 bsl 3) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenTAs'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type ForbiddenLAs
{Term4,Bytes6} = case Opt band (1 bsl 2) of
  _Opt4 when _Opt4 > 0 ->'dec_ForbiddenLAs'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type ENUMERATED
{Term5,Bytes7} = case Opt band (1 bsl 1) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_enumerated(Bytes6,[{'ValueRange',{0,3}}],{{all,geran,utran,cdma2000},{}});
0 ->{asn1_NOVALUE,Bytes6}

end,

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_HandoverRestrictionList_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'HandoverRestrictionList',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.

'enc_GUMMEI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(3,Val1,'mME-Group-ID')),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],?RT_PER:cindex(4,Val1,'mME-Code')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_GUMMEI_iE-Extensions'(Tmpval1)
end].

'enc_GUMMEI_iE-Extensions'({'GUMMEI_iE-Extensions',Val}) ->
'enc_GUMMEI_iE-Extensions'(Val);

'enc_GUMMEI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GUMMEI_iE-Extensions_components'(Val, [])
].
'enc_GUMMEI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GUMMEI_iE-Extensions_components'([H|T], Acc) ->
'enc_GUMMEI_iE-Extensions_components'(T, ['enc_GUMMEI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GUMMEI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_34'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GUMMEI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_34'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GUMMEI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GUMMEI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GUMMEI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GUMMEI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GUMMEI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GUMMEI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GUMMEI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',2}]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',1}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_GUMMEI_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'GUMMEI',Term1,Term2,Term3,Term4},Bytes8}.


'enc_GTP-TEID'({'GTP-TEID',Val}) ->
'enc_GTP-TEID'(Val);

'enc_GTP-TEID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Val).


'dec_GTP-TEID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',4}]).

'enc_GBR-QosInformation'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(2,Val1,'e-RAB-MaximumBitrateDL')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(3,Val1,'e-RAB-MaximumBitrateUL')),

%% attribute number 3 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(4,Val1,'e-RAB-GuaranteedBitrateDL')),

%% attribute number 4 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],?RT_PER:cindex(5,Val1,'e-RAB-GuaranteedBitrateUL')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_GBR-QosInformation_iE-Extensions'(Tmpval1)
end].

'enc_GBR-QosInformation_iE-Extensions'({'GBR-QosInformation_iE-Extensions',Val}) ->
'enc_GBR-QosInformation_iE-Extensions'(Val);

'enc_GBR-QosInformation_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GBR-QosInformation_iE-Extensions_components'(Val, [])
].
'enc_GBR-QosInformation_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GBR-QosInformation_iE-Extensions_components'([H|T], Acc) ->
'enc_GBR-QosInformation_iE-Extensions_components'(T, ['enc_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_35'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_35'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GBR-QosInformation_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GBR-QosInformation_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GBR-QosInformation_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GBR-QosInformation_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GBR-QosInformation_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GBR-QosInformation_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GBR-QosInformation'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,10000000000}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,10000000000}}]),

%% attribute number 3 with type INTEGER
{Term3,Bytes5} = ?RT_PER:decode_integer(Bytes4,[{'ValueRange',{0,10000000000}}]),

%% attribute number 4 with type INTEGER
{Term4,Bytes6} = ?RT_PER:decode_integer(Bytes5,[{'ValueRange',{0,10000000000}}]),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_GBR-QosInformation_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'GBR-QosInformation',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_ForbiddenLACs'({'ForbiddenLACs',Val}) ->
'enc_ForbiddenLACs'(Val);

'enc_ForbiddenLACs'(Val) ->
[

   ?RT_PER:encode_length({1,4096},length(Val)),
   'enc_ForbiddenLACs_components'(Val, [])
].
'enc_ForbiddenLACs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLACs_components'([H|T], Acc) ->
'enc_ForbiddenLACs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',2}],H) | Acc]).


'dec_ForbiddenLACs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,4096}),
'dec_ForbiddenLACs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLACs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLACs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]),
   'dec_ForbiddenLACs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ForbiddenLAs-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APForbiddenLACs
'enc_ForbiddenLACs'(?RT_PER:cindex(3,Val1,forbiddenLACs)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ForbiddenLAs-Item_iE-Extensions'(Tmpval1)
end].

'enc_ForbiddenLAs-Item_iE-Extensions'({'ForbiddenLAs-Item_iE-Extensions',Val}) ->
'enc_ForbiddenLAs-Item_iE-Extensions'(Val);

'enc_ForbiddenLAs-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ForbiddenLAs-Item_iE-Extensions_components'(Val, [])
].
'enc_ForbiddenLAs-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLAs-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_ForbiddenLAs-Item_iE-Extensions_components'(T, ['enc_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_32'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_32'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ForbiddenLAs-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLAs-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenLAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ForbiddenLAs-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ForbiddenLAs-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ForbiddenLACs
{Term2,Bytes4} = 'dec_ForbiddenLACs'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenLAs-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ForbiddenLAs-Item',Term1,Term2,Term3},Bytes7}.


'enc_ForbiddenLAs'({'ForbiddenLAs',Val}) ->
'enc_ForbiddenLAs'(Val);

'enc_ForbiddenLAs'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_ForbiddenLAs_components'(Val, [])
].
'enc_ForbiddenLAs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenLAs_components'([H|T], Acc) ->
'enc_ForbiddenLAs_components'(T, ['enc_ForbiddenLAs-Item'(H)

 | Acc]).


'dec_ForbiddenLAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_ForbiddenLAs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenLAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenLAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenLAs-Item'(Bytes,telltype),
   'dec_ForbiddenLAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ForbiddenTACs'({'ForbiddenTACs',Val}) ->
'enc_ForbiddenTACs'(Val);

'enc_ForbiddenTACs'(Val) ->
[

   ?RT_PER:encode_length({1,4096},length(Val)),
   'enc_ForbiddenTACs_components'(Val, [])
].
'enc_ForbiddenTACs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTACs_components'([H|T], Acc) ->
'enc_ForbiddenTACs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',2}],H) | Acc]).


'dec_ForbiddenTACs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,4096}),
'dec_ForbiddenTACs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTACs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTACs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]),
   'dec_ForbiddenTACs_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ForbiddenTAs-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,'pLMN-Identity')),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APForbiddenTACs
'enc_ForbiddenTACs'(?RT_PER:cindex(3,Val1,forbiddenTACs)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_ForbiddenTAs-Item_iE-Extensions'(Tmpval1)
end].

'enc_ForbiddenTAs-Item_iE-Extensions'({'ForbiddenTAs-Item_iE-Extensions',Val}) ->
'enc_ForbiddenTAs-Item_iE-Extensions'(Val);

'enc_ForbiddenTAs-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ForbiddenTAs-Item_iE-Extensions_components'(Val, [])
].
'enc_ForbiddenTAs-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTAs-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_ForbiddenTAs-Item_iE-Extensions_components'(T, ['enc_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_31'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_31'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ForbiddenTAs-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTAs-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenTAs-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ForbiddenTAs-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ForbiddenTAs-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ForbiddenTACs
{Term2,Bytes4} = 'dec_ForbiddenTACs'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_ForbiddenTAs-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'ForbiddenTAs-Item',Term1,Term2,Term3},Bytes7}.


'enc_ForbiddenTAs'({'ForbiddenTAs',Val}) ->
'enc_ForbiddenTAs'(Val);

'enc_ForbiddenTAs'(Val) ->
[

   ?RT_PER:encode_length({1,16},length(Val)),
   'enc_ForbiddenTAs_components'(Val, [])
].
'enc_ForbiddenTAs_components'([], Acc) -> lists:reverse(Acc);

'enc_ForbiddenTAs_components'([H|T], Acc) ->
'enc_ForbiddenTAs_components'(T, ['enc_ForbiddenTAs-Item'(H)

 | Acc]).


'dec_ForbiddenTAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,16}),
'dec_ForbiddenTAs_components'(Num, Bytes1, telltype, []).
'dec_ForbiddenTAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ForbiddenTAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ForbiddenTAs-Item'(Bytes,telltype),
   'dec_ForbiddenTAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ForbiddenInterRATs'({'ForbiddenInterRATs',Val}) ->
'enc_ForbiddenInterRATs'(Val);

'enc_ForbiddenInterRATs'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'geran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'utran' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'cdma2000' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ForbiddenInterRATs'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{all,geran,utran,cdma2000},{}}).


'enc_ExtendedRNC-ID'({'ExtendedRNC-ID',Val}) ->
'enc_ExtendedRNC-ID'(Val);

'enc_ExtendedRNC-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{4096,65535}}],Val).


'dec_ExtendedRNC-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{4096,65535}}]).

'enc_EUTRAN-CGI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,pLMNidentity)),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',28}],?RT_PER:cindex(3,Val1,'cell-ID'),[]),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_EUTRAN-CGI_iE-Extensions'(Tmpval1)
end].

'enc_EUTRAN-CGI_iE-Extensions'({'EUTRAN-CGI_iE-Extensions',Val}) ->
'enc_EUTRAN-CGI_iE-Extensions'(Val);

'enc_EUTRAN-CGI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_EUTRAN-CGI_iE-Extensions_components'(Val, [])
].
'enc_EUTRAN-CGI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_EUTRAN-CGI_iE-Extensions_components'([H|T], Acc) ->
'enc_EUTRAN-CGI_iE-Extensions_components'(T, ['enc_EUTRAN-CGI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_EUTRAN-CGI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_2'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_EUTRAN-CGI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_2'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_EUTRAN-CGI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_EUTRAN-CGI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_EUTRAN-CGI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EUTRAN-CGI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_EUTRAN-CGI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_EUTRAN-CGI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_EUTRAN-CGI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',28}],[]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_EUTRAN-CGI_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'EUTRAN-CGI',Term1,Term2,Term3},Bytes7}.

'enc_E-RABLevelQoSParameters'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4,5],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,255}}],?RT_PER:cindex(2,Val1,qCI)),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APAllocationAndRetentionPriority
'enc_AllocationAndRetentionPriority'(?RT_PER:cindex(3,Val1,allocationRetentionPriority)),
case ?RT_PER:cindex(4,Val1,gbrQosInformation) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type Externaltypereference493S1APGBR-QosInformation
'enc_GBR-QosInformation'(Tmpval1)
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABLevelQoSParameters_iE-Extensions'(Tmpval2)
end].

'enc_E-RABLevelQoSParameters_iE-Extensions'({'E-RABLevelQoSParameters_iE-Extensions',Val}) ->
'enc_E-RABLevelQoSParameters_iE-Extensions'(Val);

'enc_E-RABLevelQoSParameters_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABLevelQoSParameters_iE-Extensions_components'(Val, [])
].
'enc_E-RABLevelQoSParameters_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABLevelQoSParameters_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABLevelQoSParameters_iE-Extensions_components'(T, ['enc_E-RABLevelQoSParameters_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABLevelQoSParameters_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_37'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABLevelQoSParameters_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_37'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABLevelQoSParameters_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABLevelQoSParameters_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABLevelQoSParameters_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABLevelQoSParameters_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABLevelQoSParameters_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABLevelQoSParameters_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABLevelQoSParameters'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,255}}]),

%%  attribute number 2 with type AllocationAndRetentionPriority
{Term2,Bytes4} = 'dec_AllocationAndRetentionPriority'(Bytes3,telltype),

%%  attribute number 3 with type GBR-QosInformation
{Term3,Bytes5} = case Opt band (1 bsl 1) of
  _Opt3 when _Opt3 > 0 ->'dec_GBR-QosInformation'(Bytes4,telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABLevelQoSParameters_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABLevelQoSParameters',Term1,Term2,Term3,Term4},Bytes8}.

'enc_E-RABItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APCause
'enc_Cause'(?RT_PER:cindex(3,Val1,cause)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_E-RABItem_iE-Extensions'(Tmpval1)
end].

'enc_E-RABItem_iE-Extensions'({'E-RABItem_iE-Extensions',Val}) ->
'enc_E-RABItem_iE-Extensions'(Val);

'enc_E-RABItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABItem_iE-Extensions_components'(T, ['enc_E-RABItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_38'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_38'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type Cause
{Term2,Bytes4} = 'dec_Cause'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_E-RABItem_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'E-RABItem',Term1,Term2,Term3},Bytes7}.


'enc_E-RABList'({'E-RABList',Val}) ->
'enc_E-RABList'(Val);

'enc_E-RABList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABList_components'(Val, [])
].
'enc_E-RABList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABList_components'([H|T], Acc) ->
'enc_E-RABList_components'(T, ['enc_E-RABList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_39'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_39'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABList_components'(Num, Bytes1, telltype, []).
'dec_E-RABList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABInformationListItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,'dL-Forwarding') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type ENUMERATED
case (case Tmpval1 of {_,Enumval2}-> Enumval2;_->Tmpval1 end) of
'dL-Forwarding-proposed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type SEQUENCE OF
'enc_E-RABInformationListItem_iE-Extensions'(Tmpval2)
end].

'enc_E-RABInformationListItem_iE-Extensions'({'E-RABInformationListItem_iE-Extensions',Val}) ->
'enc_E-RABInformationListItem_iE-Extensions'(Val);

'enc_E-RABInformationListItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABInformationListItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABInformationListItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABInformationListItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABInformationListItem_iE-Extensions_components'(T, ['enc_E-RABInformationListItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABInformationListItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_40'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABInformationListItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_40'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABInformationListItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABInformationListItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABInformationListItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABInformationListItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABInformationListItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABInformationListItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABInformationListItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = case Opt band (1 bsl 1) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,0}}],{{'dL-Forwarding-proposed'},{}});
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_E-RABInformationListItem_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'E-RABInformationListItem',Term1,Term2,Term3},Bytes7}.


'enc_E-RABInformationList'({'E-RABInformationList',Val}) ->
'enc_E-RABInformationList'(Val);

'enc_E-RABInformationList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABInformationList_components'(Val, [])
].
'enc_E-RABInformationList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABInformationList_components'([H|T], Acc) ->
'enc_E-RABInformationList_components'(T, ['enc_E-RABInformationList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABInformationList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_22'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABInformationList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_22'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABInformationList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABInformationList_components'(Num, Bytes1, telltype, []).
'dec_E-RABInformationList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABInformationList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABInformationList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABInformationList_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_E-RAB-ID'({'E-RAB-ID',Val}) ->
'enc_E-RAB-ID'(Val);

'enc_E-RAB-ID'(Val) ->
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],Val).


'dec_E-RAB-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{{'ValueRange',{0,15}},[]}]).


'enc_EventType'({'EventType',Val}) ->
'enc_EventType'(Val);

'enc_EventType'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'direct' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0)];
'change-of-serve-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1)];
'stop-change-of-serve-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_EventType'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{{direct,'change-of-serve-cell','stop-change-of-serve-cell'},{}}).


'enc_EPLMNs'({'EPLMNs',Val}) ->
'enc_EPLMNs'(Val);

'enc_EPLMNs'(Val) ->
[

   ?RT_PER:encode_length({1,15},length(Val)),
   'enc_EPLMNs_components'(Val, [])
].
'enc_EPLMNs_components'([], Acc) -> lists:reverse(Acc);

'enc_EPLMNs_components'([H|T], Acc) ->
'enc_EPLMNs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_EPLMNs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,15}),
'dec_EPLMNs_components'(Num, Bytes1, telltype, []).
'dec_EPLMNs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EPLMNs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_EPLMNs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_EncryptionAlgorithms'({'EncryptionAlgorithms',Val}) ->
'enc_EncryptionAlgorithms'(Val);

'enc_EncryptionAlgorithms'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',{{16,16},[]}}],Val,[]).


'dec_EncryptionAlgorithms'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{16,16},[]}}],[]).


'enc_ENBX2TLAs'({'ENBX2TLAs',Val}) ->
'enc_ENBX2TLAs'(Val);

'enc_ENBX2TLAs'(Val) ->
[

   ?RT_PER:encode_length({1,2},length(Val)),
   'enc_ENBX2TLAs_components'(Val, [])
].
'enc_ENBX2TLAs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBX2TLAs_components'([H|T], Acc) ->
'enc_ENBX2TLAs_components'(T, [?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],H,[]) | Acc]).


'dec_ENBX2TLAs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,2}),
'dec_ENBX2TLAs_components'(Num, Bytes1, telltype, []).
'dec_ENBX2TLAs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBX2TLAs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',{{1,160},[]}}],[]),
   'dec_ENBX2TLAs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ENBname'({'ENBname',Val}) ->
'enc_ENBname'(Val);

'enc_ENBname'(Val) ->
?RT_PER:encode_PrintableString([{'SizeConstraint',{{1,150},[]}}],Val).


'dec_ENBname'(Bytes,_) ->
?RT_PER:decode_PrintableString(Bytes,[{'SizeConstraint',{{1,150},[]}}]).


'enc_ENB-UE-S1AP-ID'({'ENB-UE-S1AP-ID',Val}) ->
'enc_ENB-UE-S1AP-ID'(Val);

'enc_ENB-UE-S1AP-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,16777215}}],Val).


'dec_ENB-UE-S1AP-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,16777215}}]).

'enc_ENB-StatusTransfer-TransparentContainer'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ExternaltypereferenceundefinedS1APBearers-SubjectToStatusTransferList
'enc_Bearers-SubjectToStatusTransferList'(?RT_PER:cindex(2,Val1,'bearers-SubjectToStatusTransferList')),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions'(Tmpval1)
end].

'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions'({'ENB-StatusTransfer-TransparentContainer_iE-Extensions',Val}) ->
'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions'(Val);

'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(Val, [])
].
'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'([H|T], Acc) ->
'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(T, ['enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_ENB-StatusTransfer-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_42'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_42'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENB-StatusTransfer-TransparentContainer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type Bearers-SubjectToStatusTransferList
{Term1,Bytes3} = 'dec_Bearers-SubjectToStatusTransferList'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_ENB-StatusTransfer-TransparentContainer_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'ENB-StatusTransfer-TransparentContainer',Term1,Term2},Bytes6}.

'enc_Global-ENB-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,pLMNidentity)),

%% attribute number 2 with type ExternaltypereferenceundefinedS1APENB-ID
'enc_ENB-ID'(?RT_PER:cindex(3,Val1,'eNB-ID')),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_Global-ENB-ID_iE-Extensions'(Tmpval1)
end].

'enc_Global-ENB-ID_iE-Extensions'({'Global-ENB-ID_iE-Extensions',Val}) ->
'enc_Global-ENB-ID_iE-Extensions'(Val);

'enc_Global-ENB-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_Global-ENB-ID_iE-Extensions_components'(Val, [])
].
'enc_Global-ENB-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_Global-ENB-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_Global-ENB-ID_iE-Extensions_components'(T, ['enc_Global-ENB-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_Global-ENB-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_15'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_Global-ENB-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_15'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_Global-ENB-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_Global-ENB-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_Global-ENB-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Global-ENB-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Global-ENB-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_Global-ENB-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_Global-ENB-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type ENB-ID
{Term2,Bytes4} = 'dec_ENB-ID'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_Global-ENB-ID_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'Global-ENB-ID',Term1,Term2,Term3},Bytes7}.

'enc_GERAN-Cell-ID'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference400S1APLAI
'enc_LAI'(?RT_PER:cindex(2,Val1,lAI)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],?RT_PER:cindex(3,Val1,rAC)),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(4,Val1,cI)),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_GERAN-Cell-ID_iE-Extensions'(Tmpval1)
end].

'enc_GERAN-Cell-ID_iE-Extensions'({'GERAN-Cell-ID_iE-Extensions',Val}) ->
'enc_GERAN-Cell-ID_iE-Extensions'(Val);

'enc_GERAN-Cell-ID_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_GERAN-Cell-ID_iE-Extensions_components'(Val, [])
].
'enc_GERAN-Cell-ID_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_GERAN-Cell-ID_iE-Extensions_components'([H|T], Acc) ->
'enc_GERAN-Cell-ID_iE-Extensions_components'(T, ['enc_GERAN-Cell-ID_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_GERAN-Cell-ID_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_28'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_GERAN-Cell-ID_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_28'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_GERAN-Cell-ID_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_GERAN-Cell-ID_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_GERAN-Cell-ID_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_GERAN-Cell-ID_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_GERAN-Cell-ID_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_GERAN-Cell-ID_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_GERAN-Cell-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type LAI
{Term1,Bytes3} = 'dec_LAI'(Bytes2,telltype),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',1}]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',2}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_GERAN-Cell-ID_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'GERAN-Cell-ID',Term1,Term2,Term3,Term4},Bytes8}.


'enc_ENB-ID'({'ENB-ID',Val}) ->
'enc_ENB-ID'(Val);

'enc_ENB-ID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['macroENB-ID','homeENB-ID'],[]}, {2,0}),
case element(1,Val) of
'macroENB-ID' ->
?RT_PER:encode_bit_string([{'SizeConstraint',20}],element(2,Val),[]);
'homeENB-ID' ->
?RT_PER:encode_bit_string([{'SizeConstraint',28}],element(2,Val),[])
end
].


'dec_ENB-ID'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {'macroENB-ID',
?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',20}],[])};
1 -> {'homeENB-ID',
?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',28}],[])};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_CompletedCellinEAI-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference384S1APEUTRAN-CGI
'enc_EUTRAN-CGI'(?RT_PER:cindex(2,Val1,eCGI)),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CompletedCellinEAI-Item_iE-Extensions'(Tmpval1)
end].

'enc_CompletedCellinEAI-Item_iE-Extensions'({'CompletedCellinEAI-Item_iE-Extensions',Val}) ->
'enc_CompletedCellinEAI-Item_iE-Extensions'(Val);

'enc_CompletedCellinEAI-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CompletedCellinEAI-Item_iE-Extensions_components'(Val, [])
].
'enc_CompletedCellinEAI-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CompletedCellinEAI-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CompletedCellinEAI-Item_iE-Extensions_components'(T, ['enc_CompletedCellinEAI-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CompletedCellinEAI-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_43'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CompletedCellinEAI-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_43'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CompletedCellinEAI-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CompletedCellinEAI-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CompletedCellinEAI-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CompletedCellinEAI-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CompletedCellinEAI-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CompletedCellinEAI-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CompletedCellinEAI-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type EUTRAN-CGI
{Term1,Bytes3} = 'dec_EUTRAN-CGI'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CompletedCellinEAI-Item_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CompletedCellinEAI-Item',Term1,Term2},Bytes6}.


'enc_CompletedCellinEAI'({'CompletedCellinEAI',Val}) ->
'enc_CompletedCellinEAI'(Val);

'enc_CompletedCellinEAI'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CompletedCellinEAI_components'(Val, [])
].
'enc_CompletedCellinEAI_components'([], Acc) -> lists:reverse(Acc);

'enc_CompletedCellinEAI_components'([H|T], Acc) ->
'enc_CompletedCellinEAI_components'(T, ['enc_CompletedCellinEAI-Item'(H)

 | Acc]).


'dec_CompletedCellinEAI'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CompletedCellinEAI_components'(Num, Bytes1, telltype, []).
'dec_CompletedCellinEAI_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CompletedCellinEAI_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CompletedCellinEAI-Item'(Bytes,telltype),
   'dec_CompletedCellinEAI_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_EmergencyAreaID-Broadcast-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,emergencyAreaID)),

%% attribute number 2 with type Externaltypereference371S1APCompletedCellinEAI
'enc_CompletedCellinEAI'(?RT_PER:cindex(3,Val1,completedCellinEAI)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions'(Tmpval1)
end].

'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions'({'EmergencyAreaID-Broadcast-Item_iE-Extensions',Val}) ->
'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions'(Val);

'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(Val, [])
].
'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(T, ['enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_EmergencyAreaID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_44'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_44'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_EmergencyAreaID-Broadcast-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%%  attribute number 2 with type CompletedCellinEAI
{Term2,Bytes4} = 'dec_CompletedCellinEAI'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_EmergencyAreaID-Broadcast-Item_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'EmergencyAreaID-Broadcast-Item',Term1,Term2,Term3},Bytes7}.


'enc_EmergencyAreaID-Broadcast'({'EmergencyAreaID-Broadcast',Val}) ->
'enc_EmergencyAreaID-Broadcast'(Val);

'enc_EmergencyAreaID-Broadcast'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_EmergencyAreaID-Broadcast_components'(Val, [])
].
'enc_EmergencyAreaID-Broadcast_components'([], Acc) -> lists:reverse(Acc);

'enc_EmergencyAreaID-Broadcast_components'([H|T], Acc) ->
'enc_EmergencyAreaID-Broadcast_components'(T, ['enc_EmergencyAreaID-Broadcast-Item'(H)

 | Acc]).


'dec_EmergencyAreaID-Broadcast'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_EmergencyAreaID-Broadcast_components'(Num, Bytes1, telltype, []).
'dec_EmergencyAreaID-Broadcast_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EmergencyAreaID-Broadcast_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_EmergencyAreaID-Broadcast-Item'(Bytes,telltype),
   'dec_EmergencyAreaID-Broadcast_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_EmergencyAreaID'({'EmergencyAreaID',Val}) ->
'enc_EmergencyAreaID'(Val);

'enc_EmergencyAreaID'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',3}],Val).


'dec_EmergencyAreaID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]).


'enc_EmergencyAreaIDList'({'EmergencyAreaIDList',Val}) ->
'enc_EmergencyAreaIDList'(Val);

'enc_EmergencyAreaIDList'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_EmergencyAreaIDList_components'(Val, [])
].
'enc_EmergencyAreaIDList_components'([], Acc) -> lists:reverse(Acc);

'enc_EmergencyAreaIDList_components'([H|T], Acc) ->
'enc_EmergencyAreaIDList_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_EmergencyAreaIDList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_EmergencyAreaIDList_components'(Num, Bytes1, telltype, []).
'dec_EmergencyAreaIDList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_EmergencyAreaIDList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_EmergencyAreaIDList_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ECGIList'({'ECGIList',Val}) ->
'enc_ECGIList'(Val);

'enc_ECGIList'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_ECGIList_components'(Val, [])
].
'enc_ECGIList_components'([], Acc) -> lists:reverse(Acc);

'enc_ECGIList_components'([H|T], Acc) ->
'enc_ECGIList_components'(T, ['enc_EUTRAN-CGI'(H)

 | Acc]).


'dec_ECGIList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_ECGIList_components'(Num, Bytes1, telltype, []).
'dec_ECGIList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ECGIList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_EUTRAN-CGI'(Bytes,telltype),
   'dec_ECGIList_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_Direct-Forwarding-Path-Availability'({'Direct-Forwarding-Path-Availability',Val}) ->
'enc_Direct-Forwarding-Path-Availability'(Val);

'enc_Direct-Forwarding-Path-Availability'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'directPathAvailable' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Direct-Forwarding-Path-Availability'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{directPathAvailable},{}}).


'enc_DL-Forwarding'({'DL-Forwarding',Val}) ->
'enc_DL-Forwarding'(Val);

'enc_DL-Forwarding'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'dL-Forwarding-proposed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_DL-Forwarding'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'dL-Forwarding-proposed'},{}}).


'enc_DataCodingScheme'({'DataCodingScheme',Val}) ->
'enc_DataCodingScheme'(Val);

'enc_DataCodingScheme'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',8}],Val,[]).


'dec_DataCodingScheme'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',8}],[]).

'enc_CriticalityDiagnostics-IE-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,iECriticality) of {_,Enumval1}->Enumval1;_->?RT_PER:cindex(2,Val1,iECriticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(3,Val1,'iE-ID')),

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,typeOfError) of {_,Enumval3}-> Enumval3;_->?RT_PER:cindex(4,Val1,typeOfError) end) of
'not-understood' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'missing' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_CriticalityDiagnostics-IE-Item_iE-Extensions'(Tmpval1)
end].

'enc_CriticalityDiagnostics-IE-Item_iE-Extensions'({'CriticalityDiagnostics-IE-Item_iE-Extensions',Val}) ->
'enc_CriticalityDiagnostics-IE-Item_iE-Extensions'(Val);

'enc_CriticalityDiagnostics-IE-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(Val, [])
].
'enc_CriticalityDiagnostics-IE-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics-IE-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(T, ['enc_CriticalityDiagnostics-IE-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CriticalityDiagnostics-IE-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_45'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_45'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CriticalityDiagnostics-IE-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CriticalityDiagnostics-IE-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CriticalityDiagnostics-IE-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,65535}}]),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,1}}],{{'not-understood',missing},{}}),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_CriticalityDiagnostics-IE-Item_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'CriticalityDiagnostics-IE-Item',Term1,Term2,Term3,Term4},Bytes8}.


'enc_CriticalityDiagnostics-IE-List'({'CriticalityDiagnostics-IE-List',Val}) ->
'enc_CriticalityDiagnostics-IE-List'(Val);

'enc_CriticalityDiagnostics-IE-List'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CriticalityDiagnostics-IE-List_components'(Val, [])
].
'enc_CriticalityDiagnostics-IE-List_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics-IE-List_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics-IE-List_components'(T, ['enc_CriticalityDiagnostics-IE-Item'(H)

 | Acc]).


'dec_CriticalityDiagnostics-IE-List'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CriticalityDiagnostics-IE-List_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics-IE-List_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics-IE-List_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics-IE-Item'(Bytes,telltype),
   'dec_CriticalityDiagnostics-IE-List_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_CriticalityDiagnostics'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([2,3,4,5,6],5,Val),
[
?RT_PER:setext(false), Opt,
case ?RT_PER:cindex(2,Val1,procedureCode) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Tmpval1)
end,
case ?RT_PER:cindex(3,Val1,triggeringMessage) of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 2 with type ENUMERATED
case (case Tmpval2 of {_,Enumval2}->Enumval2;_->Tmpval2 end) of
'initiating-message' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'successful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'unsuccessfull-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(4,Val1,procedureCriticality) of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 3 with type ENUMERATED
case (case Tmpval3 of {_,Enumval3}->Enumval3;_->Tmpval3 end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end,
case ?RT_PER:cindex(5,Val1,iEsCriticalityDiagnostics) of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 4 with type Externaltypereference321S1APCriticalityDiagnostics-IE-List
'enc_CriticalityDiagnostics-IE-List'(Tmpval4)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 5 with type SEQUENCE OF
'enc_CriticalityDiagnostics_iE-Extensions'(Tmpval5)
end].

'enc_CriticalityDiagnostics_iE-Extensions'({'CriticalityDiagnostics_iE-Extensions',Val}) ->
'enc_CriticalityDiagnostics_iE-Extensions'(Val);

'enc_CriticalityDiagnostics_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CriticalityDiagnostics_iE-Extensions_components'(Val, [])
].
'enc_CriticalityDiagnostics_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CriticalityDiagnostics_iE-Extensions_components'([H|T], Acc) ->
'enc_CriticalityDiagnostics_iE-Extensions_components'(T, ['enc_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_46'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_46'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CriticalityDiagnostics_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CriticalityDiagnostics_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CriticalityDiagnostics_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CriticalityDiagnostics_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CriticalityDiagnostics_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CriticalityDiagnostics_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CriticalityDiagnostics'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = case Opt band (1 bsl 4) of
  _Opt1 when _Opt1 > 0 ->?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,255}}]);
0 ->{asn1_NOVALUE,Bytes2}

end,

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = case Opt band (1 bsl 3) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,2}}],{'initiating-message','successful-outcome','unsuccessfull-outcome'});
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = case Opt band (1 bsl 2) of
  _Opt3 when _Opt3 > 0 ->?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,2}}],{reject,ignore,notify});
0 ->{asn1_NOVALUE,Bytes4}

end,

%%  attribute number 4 with type CriticalityDiagnostics-IE-List
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->'dec_CriticalityDiagnostics-IE-List'(Bytes5,telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_CriticalityDiagnostics_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'CriticalityDiagnostics',Term1,Term2,Term3,Term4,Term5},Bytes9}.

'enc_COUNTvalue'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,4095}}],?RT_PER:cindex(2,Val1,'pDCP-SN')),

%% attribute number 2 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,1048575}}],?RT_PER:cindex(3,Val1,hFN)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_COUNTvalue_iE-Extensions'(Tmpval1)
end].

'enc_COUNTvalue_iE-Extensions'({'COUNTvalue_iE-Extensions',Val}) ->
'enc_COUNTvalue_iE-Extensions'(Val);

'enc_COUNTvalue_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_COUNTvalue_iE-Extensions_components'(Val, [])
].
'enc_COUNTvalue_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_COUNTvalue_iE-Extensions_components'([H|T], Acc) ->
'enc_COUNTvalue_iE-Extensions_components'(T, ['enc_COUNTvalue_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_47'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_47'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_COUNTvalue_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_COUNTvalue_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_COUNTvalue_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_COUNTvalue_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_COUNTvalue_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_COUNTvalue_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_COUNTvalue'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,4095}}]),

%% attribute number 2 with type INTEGER
{Term2,Bytes4} = ?RT_PER:decode_integer(Bytes3,[{'ValueRange',{0,1048575}}]),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_COUNTvalue_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'COUNTvalue',Term1,Term2,Term3},Bytes7}.

'enc_CSG-IdList-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',27}],?RT_PER:cindex(2,Val1,'cSG-Id'),[]),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CSG-IdList-Item_iE-Extensions'(Tmpval1)
end].

'enc_CSG-IdList-Item_iE-Extensions'({'CSG-IdList-Item_iE-Extensions',Val}) ->
'enc_CSG-IdList-Item_iE-Extensions'(Val);

'enc_CSG-IdList-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CSG-IdList-Item_iE-Extensions_components'(Val, [])
].
'enc_CSG-IdList-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CSG-IdList-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CSG-IdList-Item_iE-Extensions_components'(T, ['enc_CSG-IdList-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CSG-IdList-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_48'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CSG-IdList-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_48'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CSG-IdList-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CSG-IdList-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CSG-IdList-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CSG-IdList-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CSG-IdList-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CSG-IdList-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CSG-IdList-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type BIT STRING
{Term1,Bytes3} = ?RT_PER:decode_bit_string(Bytes2,[{'SizeConstraint',27}],[]),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CSG-IdList-Item_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CSG-IdList-Item',Term1,Term2},Bytes6}.


'enc_CSG-IdList'({'CSG-IdList',Val}) ->
'enc_CSG-IdList'(Val);

'enc_CSG-IdList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_CSG-IdList_components'(Val, [])
].
'enc_CSG-IdList_components'([], Acc) -> lists:reverse(Acc);

'enc_CSG-IdList_components'([H|T], Acc) ->
'enc_CSG-IdList_components'(T, ['enc_CSG-IdList-Item'(H)

 | Acc]).


'dec_CSG-IdList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_CSG-IdList_components'(Num, Bytes1, telltype, []).
'dec_CSG-IdList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CSG-IdList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CSG-IdList-Item'(Bytes,telltype),
   'dec_CSG-IdList_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_CSG-Id'({'CSG-Id',Val}) ->
'enc_CSG-Id'(Val);

'enc_CSG-Id'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',27}],Val,[]).


'dec_CSG-Id'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',27}],[]).


'enc_CSFallbackIndicator'({'CSFallbackIndicator',Val}) ->
'enc_CSFallbackIndicator'(Val);

'enc_CSFallbackIndicator'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'cs-fallback-required' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];
'cs-fallback-high-priority' -> [{bit,1},?RT_PER:encode_small_number(0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CSFallbackIndicator'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'cs-fallback-required'},{'cs-fallback-high-priority'}}).


'enc_CNDomain'({'CNDomain',Val}) ->
'enc_CNDomain'(Val);

'enc_CNDomain'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'ps' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'cs' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CNDomain'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{ps,cs}).


'enc_CI'({'CI',Val}) ->
'enc_CI'(Val);

'enc_CI'(Val) ->
?RT_PER:encode_octet_string([{'SizeConstraint',2}],Val).


'dec_CI'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',2}]).

'enc_CGI'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5,6],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',3}],?RT_PER:cindex(2,Val1,pLMNidentity)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(3,Val1,lAC)),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',2}],?RT_PER:cindex(4,Val1,cI)),
case ?RT_PER:cindex(5,Val1,rAC) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',1}],Tmpval1)
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 5 with type SEQUENCE OF
'enc_CGI_iE-Extensions'(Tmpval2)
end].

'enc_CGI_iE-Extensions'({'CGI_iE-Extensions',Val}) ->
'enc_CGI_iE-Extensions'(Val);

'enc_CGI_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CGI_iE-Extensions_components'(Val, [])
].
'enc_CGI_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CGI_iE-Extensions_components'([H|T], Acc) ->
'enc_CGI_iE-Extensions_components'(T, ['enc_CGI_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CGI_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_17'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CGI_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_17'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CGI_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CGI_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CGI_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CGI_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CGI_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CGI_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CGI'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[{'SizeConstraint',3}]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[{'SizeConstraint',2}]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',2}]),

%% attribute number 4 with type OCTET STRING
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_octet_string(Bytes5,[{'SizeConstraint',1}]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_CGI_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'CGI',Term1,Term2,Term3,Term4,Term5},Bytes9}.

'enc_CellType'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type ENUMERATED
case (case ?RT_PER:cindex(2,Val1,'cell-Size') of {_,Enumval1}-> Enumval1;_->?RT_PER:cindex(2,Val1,'cell-Size') end) of
'verysmall' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'small' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'large' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CellType_iE-Extensions'(Tmpval1)
end].

'enc_CellType_iE-Extensions'({'CellType_iE-Extensions',Val}) ->
'enc_CellType_iE-Extensions'(Val);

'enc_CellType_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellType_iE-Extensions_components'(Val, [])
].
'enc_CellType_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellType_iE-Extensions_components'([H|T], Acc) ->
'enc_CellType_iE-Extensions_components'(T, ['enc_CellType_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellType_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_6'(id, 
                                              ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellType_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_6'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellType_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellType_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellType_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellType_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellType_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellType_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellType'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type ENUMERATED
{Term1,Bytes3} = ?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,3}}],{{verysmall,small,medium,large},{}}),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CellType_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CellType',Term1,Term2},Bytes6}.


'enc_Cell-Size'({'Cell-Size',Val}) ->
'enc_Cell-Size'(Val);

'enc_Cell-Size'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'verysmall' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'small' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'medium' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'large' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Cell-Size'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{verysmall,small,medium,large},{}}).


'enc_Cdma2000OneXRAND'({'Cdma2000OneXRAND',Val}) ->
'enc_Cdma2000OneXRAND'(Val);

'enc_Cdma2000OneXRAND'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000OneXRAND'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Cdma2000OneXPilot'({'Cdma2000OneXPilot',Val}) ->
'enc_Cdma2000OneXPilot'(Val);

'enc_Cdma2000OneXPilot'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000OneXPilot'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Cdma2000OneXMSI'({'Cdma2000OneXMSI',Val}) ->
'enc_Cdma2000OneXMSI'(Val);

'enc_Cdma2000OneXMSI'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000OneXMSI'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Cdma2000OneXMEID'({'Cdma2000OneXMEID',Val}) ->
'enc_Cdma2000OneXMEID'(Val);

'enc_Cdma2000OneXMEID'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000OneXMEID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_Cdma2000OneXSRVCCInfo'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(2,Val1,cdma2000OneXMEID)),

%% attribute number 2 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(3,Val1,cdma2000OneXMSI)),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(4,Val1,cdma2000OneXPilot)),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_Cdma2000OneXSRVCCInfo_iE-Extensions'(Tmpval1)
end].

'enc_Cdma2000OneXSRVCCInfo_iE-Extensions'({'Cdma2000OneXSRVCCInfo_iE-Extensions',Val}) ->
'enc_Cdma2000OneXSRVCCInfo_iE-Extensions'(Val);

'enc_Cdma2000OneXSRVCCInfo_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(Val, [])
].
'enc_Cdma2000OneXSRVCCInfo_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_Cdma2000OneXSRVCCInfo_iE-Extensions_components'([H|T], Acc) ->
'enc_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(T, ['enc_Cdma2000OneXSRVCCInfo_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_Cdma2000OneXSRVCCInfo_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_49'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_49'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_Cdma2000OneXSRVCCInfo_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_Cdma2000OneXSRVCCInfo_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_Cdma2000OneXSRVCCInfo'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type OCTET STRING
{Term1,Bytes3} = ?RT_PER:decode_octet_string(Bytes2,[]),

%% attribute number 2 with type OCTET STRING
{Term2,Bytes4} = ?RT_PER:decode_octet_string(Bytes3,[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_Cdma2000OneXSRVCCInfo_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'Cdma2000OneXSRVCCInfo',Term1,Term2,Term3,Term4},Bytes8}.


'enc_Cdma2000HORequiredIndication'({'Cdma2000HORequiredIndication',Val}) ->
'enc_Cdma2000HORequiredIndication'(Val);

'enc_Cdma2000HORequiredIndication'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'true' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Cdma2000HORequiredIndication'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{true},{}}).


'enc_Cdma2000HOStatus'({'Cdma2000HOStatus',Val}) ->
'enc_Cdma2000HOStatus'(Val);

'enc_Cdma2000HOStatus'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'hOSuccess' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'hOFailure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Cdma2000HOStatus'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{hOSuccess,hOFailure},{}}).


'enc_Cdma2000SectorID'({'Cdma2000SectorID',Val}) ->
'enc_Cdma2000SectorID'(Val);

'enc_Cdma2000SectorID'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000SectorID'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).


'enc_Cdma2000RATType'({'Cdma2000RATType',Val}) ->
'enc_Cdma2000RATType'(Val);

'enc_Cdma2000RATType'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'hRPD' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'onexRTT' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Cdma2000RATType'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{hRPD,onexRTT},{}}).


'enc_Cdma2000PDU'({'Cdma2000PDU',Val}) ->
'enc_Cdma2000PDU'(Val);

'enc_Cdma2000PDU'(Val) ->
?RT_PER:encode_octet_string([],Val).


'dec_Cdma2000PDU'(Bytes,_) ->
?RT_PER:decode_octet_string(Bytes,[]).

'enc_CellID-Broadcast-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference202S1APEUTRAN-CGI
'enc_EUTRAN-CGI'(?RT_PER:cindex(2,Val1,eCGI)),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_CellID-Broadcast-Item_iE-Extensions'(Tmpval1)
end].

'enc_CellID-Broadcast-Item_iE-Extensions'({'CellID-Broadcast-Item_iE-Extensions',Val}) ->
'enc_CellID-Broadcast-Item_iE-Extensions'(Val);

'enc_CellID-Broadcast-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellID-Broadcast-Item_iE-Extensions_components'(Val, [])
].
'enc_CellID-Broadcast-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_CellID-Broadcast-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_CellID-Broadcast-Item_iE-Extensions_components'(T, ['enc_CellID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_CellID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_50'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_CellID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_50'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_CellID-Broadcast-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellID-Broadcast-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_CellID-Broadcast-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellID-Broadcast-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellID-Broadcast-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_CellID-Broadcast-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellID-Broadcast-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type EUTRAN-CGI
{Term1,Bytes3} = 'dec_EUTRAN-CGI'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_CellID-Broadcast-Item_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'CellID-Broadcast-Item',Term1,Term2},Bytes6}.


'enc_CellID-Broadcast'({'CellID-Broadcast',Val}) ->
'enc_CellID-Broadcast'(Val);

'enc_CellID-Broadcast'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_CellID-Broadcast_components'(Val, [])
].
'enc_CellID-Broadcast_components'([], Acc) -> lists:reverse(Acc);

'enc_CellID-Broadcast_components'([H|T], Acc) ->
'enc_CellID-Broadcast_components'(T, ['enc_CellID-Broadcast-Item'(H)

 | Acc]).


'dec_CellID-Broadcast'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_CellID-Broadcast_components'(Num, Bytes1, telltype, []).
'dec_CellID-Broadcast_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellID-Broadcast_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellID-Broadcast-Item'(Bytes,telltype),
   'dec_CellID-Broadcast_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_CellIdentity'({'CellIdentity',Val}) ->
'enc_CellIdentity'(Val);

'enc_CellIdentity'(Val) ->
?RT_PER:encode_bit_string([{'SizeConstraint',28}],Val,[]).


'dec_CellIdentity'(Bytes,_) ->
?RT_PER:decode_bit_string(Bytes,[{'SizeConstraint',28}],[]).


'enc_CauseNas'({'CauseNas',Val}) ->
'enc_CauseNas'(Val);

'enc_CauseNas'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'normal-release' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'authentication-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'detach' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseNas'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,3}}],{{'normal-release','authentication-failure',detach,unspecified},{}}).


'enc_CauseTransport'({'CauseTransport',Val}) ->
'enc_CauseTransport'(Val);

'enc_CauseTransport'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'transport-resource-unavailable' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseTransport'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,1}}],{{'transport-resource-unavailable',unspecified},{}}).


'enc_CauseRadioNetwork'({'CauseRadioNetwork',Val}) ->
'enc_CauseRadioNetwork'(Val);

'enc_CauseRadioNetwork'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 0)];
'tx2relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 1)];
'successful-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 2)];
'release-due-to-eutran-generated-reason' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 3)];
'handover-cancelled' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 4)];
'partial-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 5)];
'ho-failure-in-target-EPC-eNB-or-target-system' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 6)];
'ho-target-not-allowed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 7)];
'tS1relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 8)];
'tS1relocprep-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 9)];
'cell-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 10)];
'unknown-targetID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 11)];
'no-radio-resources-available-in-target-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 12)];
'unknown-mme-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 13)];
'unknown-enb-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 14)];
'unknown-pair-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 15)];
'handover-desirable-for-radio-reason' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 16)];
'time-critical-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 17)];
'resource-optimisation-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 18)];
'reduce-load-in-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 19)];
'user-inactivity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 20)];
'radio-connection-with-ue-lost' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 21)];
'load-balancing-tau-required' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 22)];
'cs-fallback-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 23)];
'ue-not-available-for-ps-service' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 24)];
'radio-resources-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 25)];
'failure-in-radio-interface-procedure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 26)];
'invalid-qos-combination' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 27)];
'interrat-redirection' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 28)];
'interaction-with-other-procedure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 29)];
'unknown-E-RAB-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 30)];
'multiple-E-RAB-ID-instances' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 31)];
'encryption-and-or-integrity-protection-algorithms-not-supported' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 32)];
's1-intra-system-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 33)];
's1-inter-system-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 34)];
'x2-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 35)];
'redirection-towards-1xRTT' -> [{bit,1},?RT_PER:encode_small_number(0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseRadioNetwork'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,35}}],{{unspecified,'tx2relocoverall-expiry','successful-handover','release-due-to-eutran-generated-reason','handover-cancelled','partial-handover','ho-failure-in-target-EPC-eNB-or-target-system','ho-target-not-allowed','tS1relocoverall-expiry','tS1relocprep-expiry','cell-not-available','unknown-targetID','no-radio-resources-available-in-target-cell','unknown-mme-ue-s1ap-id','unknown-enb-ue-s1ap-id','unknown-pair-ue-s1ap-id','handover-desirable-for-radio-reason','time-critical-handover','resource-optimisation-handover','reduce-load-in-serving-cell','user-inactivity','radio-connection-with-ue-lost','load-balancing-tau-required','cs-fallback-triggered','ue-not-available-for-ps-service','radio-resources-not-available','failure-in-radio-interface-procedure','invalid-qos-combination','interrat-redirection','interaction-with-other-procedure','unknown-E-RAB-ID','multiple-E-RAB-ID-instances','encryption-and-or-integrity-protection-algorithms-not-supported','s1-intra-system-handover-triggered','s1-inter-system-handover-triggered','x2-handover-triggered'},{'redirection-towards-1xRTT'}}).


'enc_CauseProtocol'({'CauseProtocol',Val}) ->
'enc_CauseProtocol'(Val);

'enc_CauseProtocol'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'transfer-syntax-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'abstract-syntax-error-reject' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'abstract-syntax-error-ignore-and-notify' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'message-not-compatible-with-receiver-state' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'semantic-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'abstract-syntax-error-falsely-constructed-message' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseProtocol'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,6}}],{{'transfer-syntax-error','abstract-syntax-error-reject','abstract-syntax-error-ignore-and-notify','message-not-compatible-with-receiver-state','semantic-error','abstract-syntax-error-falsely-constructed-message',unspecified},{}}).


'enc_CauseMisc'({'CauseMisc',Val}) ->
'enc_CauseMisc'(Val);

'enc_CauseMisc'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'control-processing-overload' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'not-enough-user-plane-processing-resources' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'hardware-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'om-intervention' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'unknown-PLMN' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_CauseMisc'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,5}}],{{'control-processing-overload','not-enough-user-plane-processing-resources','hardware-failure','om-intervention',unspecified,'unknown-PLMN'},{}}).


'enc_Cause'({'Cause',Val}) ->
'enc_Cause'(Val);

'enc_Cause'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[radioNetwork,transport,nas,protocol,misc],[]}, {5,0}),
case element(1,Val) of
radioNetwork ->
case (case element(2,Val) of {_,Enumval1}-> Enumval1;_->element(2,Val) end) of
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 0)];
'tx2relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 1)];
'successful-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 2)];
'release-due-to-eutran-generated-reason' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 3)];
'handover-cancelled' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 4)];
'partial-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 5)];
'ho-failure-in-target-EPC-eNB-or-target-system' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 6)];
'ho-target-not-allowed' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 7)];
'tS1relocoverall-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 8)];
'tS1relocprep-expiry' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 9)];
'cell-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 10)];
'unknown-targetID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 11)];
'no-radio-resources-available-in-target-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 12)];
'unknown-mme-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 13)];
'unknown-enb-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 14)];
'unknown-pair-ue-s1ap-id' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 15)];
'handover-desirable-for-radio-reason' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 16)];
'time-critical-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 17)];
'resource-optimisation-handover' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 18)];
'reduce-load-in-serving-cell' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 19)];
'user-inactivity' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 20)];
'radio-connection-with-ue-lost' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 21)];
'load-balancing-tau-required' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 22)];
'cs-fallback-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 23)];
'ue-not-available-for-ps-service' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 24)];
'radio-resources-not-available' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 25)];
'failure-in-radio-interface-procedure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 26)];
'invalid-qos-combination' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 27)];
'interrat-redirection' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 28)];
'interaction-with-other-procedure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 29)];
'unknown-E-RAB-ID' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 30)];
'multiple-E-RAB-ID-instances' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 31)];
'encryption-and-or-integrity-protection-algorithms-not-supported' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 32)];
's1-intra-system-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 33)];
's1-inter-system-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 34)];
'x2-handover-triggered' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,35}}], 35)];
'redirection-towards-1xRTT' -> [{bit,1},?RT_PER:encode_small_number(0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
transport ->
case (case element(2,Val) of {_,Enumval3}-> Enumval3;_->element(2,Val) end) of
'transport-resource-unavailable' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
nas ->
case (case element(2,Val) of {_,Enumval5}-> Enumval5;_->element(2,Val) end) of
'normal-release' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 0)];
'authentication-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 1)];
'detach' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 2)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,3}}], 3)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
protocol ->
case (case element(2,Val) of {_,Enumval7}-> Enumval7;_->element(2,Val) end) of
'transfer-syntax-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 0)];
'abstract-syntax-error-reject' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 1)];
'abstract-syntax-error-ignore-and-notify' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 2)];
'message-not-compatible-with-receiver-state' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 3)];
'semantic-error' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 4)];
'abstract-syntax-error-falsely-constructed-message' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 5)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,6}}], 6)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
misc ->
case (case element(2,Val) of {_,Enumval9}-> Enumval9;_->element(2,Val) end) of
'control-processing-overload' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 0)];
'not-enough-user-plane-processing-resources' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 1)];
'hardware-failure' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 2)];
'om-intervention' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 3)];
'unspecified' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 4)];
'unknown-PLMN' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,5}}], 5)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end
end
].


'dec_Cause'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,5,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*5 of
0 -> {radioNetwork,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,35}}],{{unspecified,'tx2relocoverall-expiry','successful-handover','release-due-to-eutran-generated-reason','handover-cancelled','partial-handover','ho-failure-in-target-EPC-eNB-or-target-system','ho-target-not-allowed','tS1relocoverall-expiry','tS1relocprep-expiry','cell-not-available','unknown-targetID','no-radio-resources-available-in-target-cell','unknown-mme-ue-s1ap-id','unknown-enb-ue-s1ap-id','unknown-pair-ue-s1ap-id','handover-desirable-for-radio-reason','time-critical-handover','resource-optimisation-handover','reduce-load-in-serving-cell','user-inactivity','radio-connection-with-ue-lost','load-balancing-tau-required','cs-fallback-triggered','ue-not-available-for-ps-service','radio-resources-not-available','failure-in-radio-interface-procedure','invalid-qos-combination','interrat-redirection','interaction-with-other-procedure','unknown-E-RAB-ID','multiple-E-RAB-ID-instances','encryption-and-or-integrity-protection-algorithms-not-supported','s1-intra-system-handover-triggered','s1-inter-system-handover-triggered','x2-handover-triggered'},{'redirection-towards-1xRTT'}})};
1 -> {transport,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,1}}],{{'transport-resource-unavailable',unspecified},{}})};
2 -> {nas,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,3}}],{{'normal-release','authentication-failure',detach,unspecified},{}})};
3 -> {protocol,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,6}}],{{'transfer-syntax-error','abstract-syntax-error-reject','abstract-syntax-error-ignore-and-notify','message-not-compatible-with-receiver-state','semantic-error','abstract-syntax-error-falsely-constructed-message',unspecified},{}})};
4 -> {misc,
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,5}}],{{'control-processing-overload','not-enough-user-plane-processing-resources','hardware-failure','om-intervention',unspecified,'unknown-PLMN'},{}})};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_BroadcastCompletedAreaList'({'BroadcastCompletedAreaList',Val}) ->
'enc_BroadcastCompletedAreaList'(Val);

'enc_BroadcastCompletedAreaList'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['cellID-Broadcast','tAI-Broadcast','emergencyAreaID-Broadcast'],[]}, {3,0}),
case element(1,Val) of
'cellID-Broadcast' ->
'enc_CellID-Broadcast'(element(2,Val));
'tAI-Broadcast' ->
'enc_TAI-Broadcast'(element(2,Val));
'emergencyAreaID-Broadcast' ->
'enc_EmergencyAreaID-Broadcast'(element(2,Val))
end
].


'dec_BroadcastCompletedAreaList'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,3,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*3 of
0 -> {'cellID-Broadcast',
'dec_CellID-Broadcast'(Bytes2,telltype)};
1 -> {'tAI-Broadcast',
'dec_TAI-Broadcast'(Bytes2,telltype)};
2 -> {'emergencyAreaID-Broadcast',
'dec_EmergencyAreaID-Broadcast'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.

'enc_BPLMNs'({'BPLMNs',Val}) ->
'enc_BPLMNs'(Val);

'enc_BPLMNs'(Val) ->
[

   ?RT_PER:encode_length({1,6},length(Val)),
   'enc_BPLMNs_components'(Val, [])
].
'enc_BPLMNs_components'([], Acc) -> lists:reverse(Acc);

'enc_BPLMNs_components'([H|T], Acc) ->
'enc_BPLMNs_components'(T, [?RT_PER:encode_octet_string([{'SizeConstraint',3}],H) | Acc]).


'dec_BPLMNs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,6}),
'dec_BPLMNs_components'(Num, Bytes1, telltype, []).
'dec_BPLMNs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_BPLMNs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = ?RT_PER:decode_octet_string(Bytes,[{'SizeConstraint',3}]),
   'dec_BPLMNs_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_BitRate'({'BitRate',Val}) ->
'enc_BitRate'(Val);

'enc_BitRate'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,10000000000}}],Val).


'dec_BitRate'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,10000000000}}]).

'enc_Bearers-SubjectToStatusTransfer-Item'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5,6],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type Externaltypereference86S1APCOUNTvalue
'enc_COUNTvalue'(?RT_PER:cindex(3,Val1,'uL-COUNTvalue')),

%% attribute number 3 with type Externaltypereference87S1APCOUNTvalue
'enc_COUNTvalue'(?RT_PER:cindex(4,Val1,'dL-COUNTvalue')),
case ?RT_PER:cindex(5,Val1,receiveStatusofULPDCPSDUs) of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',4096}],Tmpval1,[])
end,
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 5 with type SEQUENCE OF
'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'(Tmpval2)
end].

'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'({'Bearers-SubjectToStatusTransfer-Item_iE-Extensions',Val}) ->
'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'(Val);

'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(Val, [])
].
'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'([H|T], Acc) ->
'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(T, ['enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_51'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_51'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_Bearers-SubjectToStatusTransfer-Item'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type COUNTvalue
{Term2,Bytes4} = 'dec_COUNTvalue'(Bytes3,telltype),

%%  attribute number 3 with type COUNTvalue
{Term3,Bytes5} = 'dec_COUNTvalue'(Bytes4,telltype),

%% attribute number 4 with type BIT STRING
{Term4,Bytes6} = case Opt band (1 bsl 1) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_bit_string(Bytes5,[{'SizeConstraint',4096}],[]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_Bearers-SubjectToStatusTransfer-Item_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'Bearers-SubjectToStatusTransfer-Item',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_Bearers-SubjectToStatusTransferList'({'Bearers-SubjectToStatusTransferList',Val}) ->
'enc_Bearers-SubjectToStatusTransferList'(Val);

'enc_Bearers-SubjectToStatusTransferList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_Bearers-SubjectToStatusTransferList_components'(Val, [])
].
'enc_Bearers-SubjectToStatusTransferList_components'([], Acc) -> lists:reverse(Acc);

'enc_Bearers-SubjectToStatusTransferList_components'([H|T], Acc) ->
'enc_Bearers-SubjectToStatusTransferList_components'(T, ['enc_Bearers-SubjectToStatusTransferList_ProtocolIE-Field'(H)

 | Acc]).
'enc_Bearers-SubjectToStatusTransferList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_41'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_Bearers-SubjectToStatusTransferList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_41'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_Bearers-SubjectToStatusTransferList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_Bearers-SubjectToStatusTransferList_components'(Num, Bytes1, telltype, []).
'dec_Bearers-SubjectToStatusTransferList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Bearers-SubjectToStatusTransferList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Bearers-SubjectToStatusTransferList_ProtocolIE-Field'(Bytes, telltype),
   'dec_Bearers-SubjectToStatusTransferList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_AllocationAndRetentionPriority'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{'ValueRange',{0,15}}],?RT_PER:cindex(2,Val1,priorityLevel),[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]),

%% attribute number 2 with type ENUMERATED
case (case ?RT_PER:cindex(3,Val1,'pre-emptionCapability') of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,'pre-emptionCapability') end) of
'shall-not-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'may-trigger-pre-emption' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ENUMERATED
case (case ?RT_PER:cindex(4,Val1,'pre-emptionVulnerability') of {_,Enumval3}->Enumval3;_->?RT_PER:cindex(4,Val1,'pre-emptionVulnerability') end) of
'not-pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 0);
'pre-emptable' -> ?RT_PER:encode_integer([{'ValueRange',{0,1}}], 1);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_AllocationAndRetentionPriority_iE-Extensions'(Tmpval1)
end].

'enc_AllocationAndRetentionPriority_iE-Extensions'({'AllocationAndRetentionPriority_iE-Extensions',Val}) ->
'enc_AllocationAndRetentionPriority_iE-Extensions'(Val);

'enc_AllocationAndRetentionPriority_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_AllocationAndRetentionPriority_iE-Extensions_components'(Val, [])
].
'enc_AllocationAndRetentionPriority_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_AllocationAndRetentionPriority_iE-Extensions_components'([H|T], Acc) ->
'enc_AllocationAndRetentionPriority_iE-Extensions_components'(T, ['enc_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_36'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_36'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_AllocationAndRetentionPriority_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_AllocationAndRetentionPriority_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_AllocationAndRetentionPriority_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_AllocationAndRetentionPriority'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{'ValueRange',{0,15}}],[{spare,0},{highest,1},{lowest,14},{'no-priority',15}]),

%% attribute number 2 with type ENUMERATED
{Term2,Bytes4} = ?RT_PER:decode_enumerated(Bytes3,[{'ValueRange',{0,1}}],{'shall-not-trigger-pre-emption','may-trigger-pre-emption'}),

%% attribute number 3 with type ENUMERATED
{Term3,Bytes5} = ?RT_PER:decode_enumerated(Bytes4,[{'ValueRange',{0,1}}],{'not-pre-emptable','pre-emptable'}),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_AllocationAndRetentionPriority_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'AllocationAndRetentionPriority',Term1,Term2,Term3,Term4},Bytes8}.


'enc_TriggeringMessage'({'TriggeringMessage',Val}) ->
'enc_TriggeringMessage'(Val);

'enc_TriggeringMessage'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'initiating-message' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'successful-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'unsuccessfull-outcome' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_TriggeringMessage'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{'initiating-message','successful-outcome','unsuccessfull-outcome'}).


'enc_ProtocolIE-ID'({'ProtocolIE-ID',Val}) ->
'enc_ProtocolIE-ID'(Val);

'enc_ProtocolIE-ID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_ProtocolIE-ID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_ProtocolExtensionID'({'ProtocolExtensionID',Val}) ->
'enc_ProtocolExtensionID'(Val);

'enc_ProtocolExtensionID'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],Val).


'dec_ProtocolExtensionID'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]).


'enc_ProcedureCode'({'ProcedureCode',Val}) ->
'enc_ProcedureCode'(Val);

'enc_ProcedureCode'(Val) ->
?RT_PER:encode_integer([{'ValueRange',{0,255}}],Val).


'dec_ProcedureCode'(Bytes,_) ->
?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,255}}]).


'enc_PrivateIE-ID'({'PrivateIE-ID',Val}) ->
'enc_PrivateIE-ID'(Val);

'enc_PrivateIE-ID'(Val) ->
[
?RT_PER:set_choice(element(1,Val),[local,global], 2),
case element(1,Val) of
local ->
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],element(2,Val));
global ->
?RT_PER:encode_object_identifier(element(2,Val))
end
].


'dec_PrivateIE-ID'(Bytes,_) ->
{Choice,Bytes1} = ?RT_PER:getchoice(Bytes,2, 0),
{Cname,{Val,NewBytes}} = case Choice of
0 -> {local,
?RT_PER:decode_integer(Bytes1,[{'ValueRange',{0,65535}}])};
1 -> {global,
?RT_PER:decode_object_identifier(Bytes1)}
end,

{{Cname,Val},NewBytes}.

'enc_Presence'({'Presence',Val}) ->
'enc_Presence'(Val);

'enc_Presence'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'optional' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'conditional' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'mandatory' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Presence'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{optional,conditional,mandatory}).


'enc_Criticality'({'Criticality',Val}) ->
'enc_Criticality'(Val);

'enc_Criticality'(Val) ->
case (case Val of {_,Enumval1}->Enumval1;_->Val end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_Criticality'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,2}}],{reject,ignore,notify}).

'enc_PrivateMessage'(Val) ->
Val1 = ?RT_PER:list_to_record('PrivateMessage', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_PrivateMessage_privateIEs'(?RT_PER:cindex(2,Val1,privateIEs))].

'enc_PrivateMessage_privateIEs'({'PrivateMessage_privateIEs',Val}) ->
'enc_PrivateMessage_privateIEs'(Val);

'enc_PrivateMessage_privateIEs'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_PrivateMessage_privateIEs_components'(Val, [])
].
'enc_PrivateMessage_privateIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_PrivateMessage_privateIEs_components'([H|T], Acc) ->
'enc_PrivateMessage_privateIEs_components'(T, ['enc_PrivateMessage_privateIEs_PrivateIE-Field'(H)

 | Acc]).
'enc_PrivateMessage_privateIEs_PrivateIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('PrivateIE-Field', Val),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeExternaltypereference103S1APPrivateIE-IDno
'enc_PrivateIE-ID'(?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval1}->Enumval1;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type ASN1_OPEN_TYPE
?RT_PER:encode_open_type([],?RT_PER:cindex(4,Val1,value))].

'dec_PrivateMessage_privateIEs_PrivateIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = 'dec_PrivateIE-ID'(Bytes,telltype),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%% attribute number 3 with type ASN1_OPEN_TYPE
{Term3,Bytes3} = fun() -> {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2, []), {binary_to_list(XTerm),XBytes} end(),
{{'PrivateIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_PrivateMessage_privateIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_PrivateMessage_privateIEs_components'(Num, Bytes1, telltype, []).
'dec_PrivateMessage_privateIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_PrivateMessage_privateIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_PrivateMessage_privateIEs_PrivateIE-Field'(Bytes, telltype),
   'dec_PrivateMessage_privateIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_PrivateMessage'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_PrivateMessage_privateIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'PrivateMessage',Term1},Bytes4}.

'enc_MMEConfigurationTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEConfigurationTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEConfigurationTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEConfigurationTransfer_protocolIEs'({'MMEConfigurationTransfer_protocolIEs',Val}) ->
'enc_MMEConfigurationTransfer_protocolIEs'(Val);

'enc_MMEConfigurationTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEConfigurationTransfer_protocolIEs_components'(Val, [])
].
'enc_MMEConfigurationTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEConfigurationTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_MMEConfigurationTransfer_protocolIEs_components'(T, ['enc_MMEConfigurationTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_53'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_53'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEConfigurationTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEConfigurationTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEConfigurationTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEConfigurationTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEConfigurationTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEConfigurationTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEConfigurationTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEConfigurationTransfer',Term1},Bytes4}.

'enc_ENBConfigurationTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationTransfer_protocolIEs'({'ENBConfigurationTransfer_protocolIEs',Val}) ->
'enc_ENBConfigurationTransfer_protocolIEs'(Val);

'enc_ENBConfigurationTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationTransfer_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationTransfer_protocolIEs_components'(T, ['enc_ENBConfigurationTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_54'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_54'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationTransfer',Term1},Bytes4}.

'enc_MMEDirectInformationTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEDirectInformationTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEDirectInformationTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEDirectInformationTransfer_protocolIEs'({'MMEDirectInformationTransfer_protocolIEs',Val}) ->
'enc_MMEDirectInformationTransfer_protocolIEs'(Val);

'enc_MMEDirectInformationTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEDirectInformationTransfer_protocolIEs_components'(Val, [])
].
'enc_MMEDirectInformationTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEDirectInformationTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_MMEDirectInformationTransfer_protocolIEs_components'(T, ['enc_MMEDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_55'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_55'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEDirectInformationTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEDirectInformationTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEDirectInformationTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEDirectInformationTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEDirectInformationTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEDirectInformationTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEDirectInformationTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEDirectInformationTransfer',Term1},Bytes4}.


'enc_Inter-SystemInformationTransferType'({'Inter-SystemInformationTransferType',Val}) ->
'enc_Inter-SystemInformationTransferType'(Val);

'enc_Inter-SystemInformationTransferType'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{[rIMTransfer],[]}, {1,0}),
case element(1,Val) of
rIMTransfer ->
'enc_RIMTransfer'(element(2,Val))
end
].


'dec_Inter-SystemInformationTransferType'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,1,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*1 of
0 -> {rIMTransfer,
'dec_RIMTransfer'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_ENBDirectInformationTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBDirectInformationTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBDirectInformationTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBDirectInformationTransfer_protocolIEs'({'ENBDirectInformationTransfer_protocolIEs',Val}) ->
'enc_ENBDirectInformationTransfer_protocolIEs'(Val);

'enc_ENBDirectInformationTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBDirectInformationTransfer_protocolIEs_components'(Val, [])
].
'enc_ENBDirectInformationTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBDirectInformationTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_ENBDirectInformationTransfer_protocolIEs_components'(T, ['enc_ENBDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_56'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_56'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBDirectInformationTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBDirectInformationTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBDirectInformationTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBDirectInformationTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBDirectInformationTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBDirectInformationTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBDirectInformationTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBDirectInformationTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBDirectInformationTransfer',Term1},Bytes4}.

'enc_WriteReplaceWarningResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('WriteReplaceWarningResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_WriteReplaceWarningResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_WriteReplaceWarningResponse_protocolIEs'({'WriteReplaceWarningResponse_protocolIEs',Val}) ->
'enc_WriteReplaceWarningResponse_protocolIEs'(Val);

'enc_WriteReplaceWarningResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_WriteReplaceWarningResponse_protocolIEs_components'(Val, [])
].
'enc_WriteReplaceWarningResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_WriteReplaceWarningResponse_protocolIEs_components'([H|T], Acc) ->
'enc_WriteReplaceWarningResponse_protocolIEs_components'(T, ['enc_WriteReplaceWarningResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_WriteReplaceWarningResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_57'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_WriteReplaceWarningResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_57'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_WriteReplaceWarningResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_WriteReplaceWarningResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_WriteReplaceWarningResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_WriteReplaceWarningResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_WriteReplaceWarningResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_WriteReplaceWarningResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_WriteReplaceWarningResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_WriteReplaceWarningResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'WriteReplaceWarningResponse',Term1},Bytes4}.

'enc_WriteReplaceWarningRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('WriteReplaceWarningRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_WriteReplaceWarningRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_WriteReplaceWarningRequest_protocolIEs'({'WriteReplaceWarningRequest_protocolIEs',Val}) ->
'enc_WriteReplaceWarningRequest_protocolIEs'(Val);

'enc_WriteReplaceWarningRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_WriteReplaceWarningRequest_protocolIEs_components'(Val, [])
].
'enc_WriteReplaceWarningRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_WriteReplaceWarningRequest_protocolIEs_components'([H|T], Acc) ->
'enc_WriteReplaceWarningRequest_protocolIEs_components'(T, ['enc_WriteReplaceWarningRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_WriteReplaceWarningRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_58'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_WriteReplaceWarningRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_58'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_WriteReplaceWarningRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_WriteReplaceWarningRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_WriteReplaceWarningRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_WriteReplaceWarningRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_WriteReplaceWarningRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_WriteReplaceWarningRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_WriteReplaceWarningRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_WriteReplaceWarningRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'WriteReplaceWarningRequest',Term1},Bytes4}.

'enc_OverloadStop'(Val) ->
Val1 = ?RT_PER:list_to_record('OverloadStop', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_OverloadStop_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_OverloadStop_protocolIEs'({'OverloadStop_protocolIEs',Val}) ->
'enc_OverloadStop_protocolIEs'(Val);

'enc_OverloadStop_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_OverloadStop_protocolIEs_components'(Val, [])
].
'enc_OverloadStop_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_OverloadStop_protocolIEs_components'([H|T], Acc) ->
'enc_OverloadStop_protocolIEs_components'(T, ['enc_OverloadStop_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_OverloadStop_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_59'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_OverloadStop_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_59'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_OverloadStop_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_OverloadStop_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_OverloadStop_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_OverloadStop_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_OverloadStop_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_OverloadStop_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_OverloadStop'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_OverloadStop_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'OverloadStop',Term1},Bytes4}.

'enc_OverloadStart'(Val) ->
Val1 = ?RT_PER:list_to_record('OverloadStart', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_OverloadStart_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_OverloadStart_protocolIEs'({'OverloadStart_protocolIEs',Val}) ->
'enc_OverloadStart_protocolIEs'(Val);

'enc_OverloadStart_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_OverloadStart_protocolIEs_components'(Val, [])
].
'enc_OverloadStart_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_OverloadStart_protocolIEs_components'([H|T], Acc) ->
'enc_OverloadStart_protocolIEs_components'(T, ['enc_OverloadStart_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_OverloadStart_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_60'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_OverloadStart_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_60'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_OverloadStart_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_OverloadStart_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_OverloadStart_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_OverloadStart_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_OverloadStart_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_OverloadStart_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_OverloadStart'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_OverloadStart_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'OverloadStart',Term1},Bytes4}.

'enc_LocationReport'(Val) ->
Val1 = ?RT_PER:list_to_record('LocationReport', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_LocationReport_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_LocationReport_protocolIEs'({'LocationReport_protocolIEs',Val}) ->
'enc_LocationReport_protocolIEs'(Val);

'enc_LocationReport_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_LocationReport_protocolIEs_components'(Val, [])
].
'enc_LocationReport_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_LocationReport_protocolIEs_components'([H|T], Acc) ->
'enc_LocationReport_protocolIEs_components'(T, ['enc_LocationReport_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_LocationReport_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_61'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_LocationReport_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_61'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_LocationReport_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_LocationReport_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_LocationReport_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LocationReport_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LocationReport_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_LocationReport_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LocationReport'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_LocationReport_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'LocationReport',Term1},Bytes4}.

'enc_LocationReportingFailureIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('LocationReportingFailureIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_LocationReportingFailureIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_LocationReportingFailureIndication_protocolIEs'({'LocationReportingFailureIndication_protocolIEs',Val}) ->
'enc_LocationReportingFailureIndication_protocolIEs'(Val);

'enc_LocationReportingFailureIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_LocationReportingFailureIndication_protocolIEs_components'(Val, [])
].
'enc_LocationReportingFailureIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_LocationReportingFailureIndication_protocolIEs_components'([H|T], Acc) ->
'enc_LocationReportingFailureIndication_protocolIEs_components'(T, ['enc_LocationReportingFailureIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_LocationReportingFailureIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_62'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_LocationReportingFailureIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_62'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_LocationReportingFailureIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_LocationReportingFailureIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_LocationReportingFailureIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LocationReportingFailureIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LocationReportingFailureIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_LocationReportingFailureIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LocationReportingFailureIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_LocationReportingFailureIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'LocationReportingFailureIndication',Term1},Bytes4}.

'enc_LocationReportingControl'(Val) ->
Val1 = ?RT_PER:list_to_record('LocationReportingControl', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_LocationReportingControl_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_LocationReportingControl_protocolIEs'({'LocationReportingControl_protocolIEs',Val}) ->
'enc_LocationReportingControl_protocolIEs'(Val);

'enc_LocationReportingControl_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_LocationReportingControl_protocolIEs_components'(Val, [])
].
'enc_LocationReportingControl_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_LocationReportingControl_protocolIEs_components'([H|T], Acc) ->
'enc_LocationReportingControl_protocolIEs_components'(T, ['enc_LocationReportingControl_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_LocationReportingControl_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_63'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_LocationReportingControl_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_63'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_LocationReportingControl_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_LocationReportingControl_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_LocationReportingControl_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_LocationReportingControl_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_LocationReportingControl_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_LocationReportingControl_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_LocationReportingControl'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_LocationReportingControl_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'LocationReportingControl',Term1},Bytes4}.

'enc_CellTrafficTrace'(Val) ->
Val1 = ?RT_PER:list_to_record('CellTrafficTrace', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_CellTrafficTrace_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_CellTrafficTrace_protocolIEs'({'CellTrafficTrace_protocolIEs',Val}) ->
'enc_CellTrafficTrace_protocolIEs'(Val);

'enc_CellTrafficTrace_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_CellTrafficTrace_protocolIEs_components'(Val, [])
].
'enc_CellTrafficTrace_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_CellTrafficTrace_protocolIEs_components'([H|T], Acc) ->
'enc_CellTrafficTrace_protocolIEs_components'(T, ['enc_CellTrafficTrace_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_CellTrafficTrace_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_64'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_CellTrafficTrace_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_64'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_CellTrafficTrace_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_CellTrafficTrace_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_CellTrafficTrace_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_CellTrafficTrace_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_CellTrafficTrace_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_CellTrafficTrace_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_CellTrafficTrace'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_CellTrafficTrace_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'CellTrafficTrace',Term1},Bytes4}.

'enc_DeactivateTrace'(Val) ->
Val1 = ?RT_PER:list_to_record('DeactivateTrace', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_DeactivateTrace_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_DeactivateTrace_protocolIEs'({'DeactivateTrace_protocolIEs',Val}) ->
'enc_DeactivateTrace_protocolIEs'(Val);

'enc_DeactivateTrace_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_DeactivateTrace_protocolIEs_components'(Val, [])
].
'enc_DeactivateTrace_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_DeactivateTrace_protocolIEs_components'([H|T], Acc) ->
'enc_DeactivateTrace_protocolIEs_components'(T, ['enc_DeactivateTrace_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_DeactivateTrace_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_65'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_DeactivateTrace_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_65'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_DeactivateTrace_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_DeactivateTrace_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_DeactivateTrace_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_DeactivateTrace_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_DeactivateTrace_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_DeactivateTrace_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_DeactivateTrace'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_DeactivateTrace_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'DeactivateTrace',Term1},Bytes4}.

'enc_TraceFailureIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('TraceFailureIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_TraceFailureIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_TraceFailureIndication_protocolIEs'({'TraceFailureIndication_protocolIEs',Val}) ->
'enc_TraceFailureIndication_protocolIEs'(Val);

'enc_TraceFailureIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_TraceFailureIndication_protocolIEs_components'(Val, [])
].
'enc_TraceFailureIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_TraceFailureIndication_protocolIEs_components'([H|T], Acc) ->
'enc_TraceFailureIndication_protocolIEs_components'(T, ['enc_TraceFailureIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_TraceFailureIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_66'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_TraceFailureIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_66'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_TraceFailureIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_TraceFailureIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_TraceFailureIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TraceFailureIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TraceFailureIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_TraceFailureIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TraceFailureIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_TraceFailureIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'TraceFailureIndication',Term1},Bytes4}.

'enc_TraceStart'(Val) ->
Val1 = ?RT_PER:list_to_record('TraceStart', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_TraceStart_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_TraceStart_protocolIEs'({'TraceStart_protocolIEs',Val}) ->
'enc_TraceStart_protocolIEs'(Val);

'enc_TraceStart_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_TraceStart_protocolIEs_components'(Val, [])
].
'enc_TraceStart_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_TraceStart_protocolIEs_components'([H|T], Acc) ->
'enc_TraceStart_protocolIEs_components'(T, ['enc_TraceStart_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_TraceStart_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_67'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_TraceStart_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_67'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_TraceStart_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_TraceStart_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_TraceStart_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TraceStart_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TraceStart_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_TraceStart_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TraceStart'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_TraceStart_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'TraceStart',Term1},Bytes4}.

'enc_MMEStatusTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEStatusTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEStatusTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEStatusTransfer_protocolIEs'({'MMEStatusTransfer_protocolIEs',Val}) ->
'enc_MMEStatusTransfer_protocolIEs'(Val);

'enc_MMEStatusTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEStatusTransfer_protocolIEs_components'(Val, [])
].
'enc_MMEStatusTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEStatusTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_MMEStatusTransfer_protocolIEs_components'(T, ['enc_MMEStatusTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEStatusTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_68'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_68'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEStatusTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEStatusTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEStatusTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEStatusTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEStatusTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEStatusTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEStatusTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEStatusTransfer',Term1},Bytes4}.

'enc_ENBStatusTransfer'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBStatusTransfer', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBStatusTransfer_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBStatusTransfer_protocolIEs'({'ENBStatusTransfer_protocolIEs',Val}) ->
'enc_ENBStatusTransfer_protocolIEs'(Val);

'enc_ENBStatusTransfer_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBStatusTransfer_protocolIEs_components'(Val, [])
].
'enc_ENBStatusTransfer_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBStatusTransfer_protocolIEs_components'([H|T], Acc) ->
'enc_ENBStatusTransfer_protocolIEs_components'(T, ['enc_ENBStatusTransfer_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBStatusTransfer_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_69'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_69'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBStatusTransfer_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBStatusTransfer_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBStatusTransfer_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBStatusTransfer_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBStatusTransfer_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBStatusTransfer_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBStatusTransfer'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBStatusTransfer_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBStatusTransfer',Term1},Bytes4}.

'enc_UECapabilityInfoIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('UECapabilityInfoIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UECapabilityInfoIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UECapabilityInfoIndication_protocolIEs'({'UECapabilityInfoIndication_protocolIEs',Val}) ->
'enc_UECapabilityInfoIndication_protocolIEs'(Val);

'enc_UECapabilityInfoIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UECapabilityInfoIndication_protocolIEs_components'(Val, [])
].
'enc_UECapabilityInfoIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UECapabilityInfoIndication_protocolIEs_components'([H|T], Acc) ->
'enc_UECapabilityInfoIndication_protocolIEs_components'(T, ['enc_UECapabilityInfoIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UECapabilityInfoIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_70'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UECapabilityInfoIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_70'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UECapabilityInfoIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UECapabilityInfoIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UECapabilityInfoIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UECapabilityInfoIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UECapabilityInfoIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UECapabilityInfoIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UECapabilityInfoIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UECapabilityInfoIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UECapabilityInfoIndication',Term1},Bytes4}.

'enc_UplinkS1cdma2000tunneling'(Val) ->
Val1 = ?RT_PER:list_to_record('UplinkS1cdma2000tunneling', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UplinkS1cdma2000tunneling_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UplinkS1cdma2000tunneling_protocolIEs'({'UplinkS1cdma2000tunneling_protocolIEs',Val}) ->
'enc_UplinkS1cdma2000tunneling_protocolIEs'(Val);

'enc_UplinkS1cdma2000tunneling_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UplinkS1cdma2000tunneling_protocolIEs_components'(Val, [])
].
'enc_UplinkS1cdma2000tunneling_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UplinkS1cdma2000tunneling_protocolIEs_components'([H|T], Acc) ->
'enc_UplinkS1cdma2000tunneling_protocolIEs_components'(T, ['enc_UplinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UplinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_71'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UplinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_71'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UplinkS1cdma2000tunneling_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UplinkS1cdma2000tunneling_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UplinkS1cdma2000tunneling_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UplinkS1cdma2000tunneling_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UplinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UplinkS1cdma2000tunneling_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UplinkS1cdma2000tunneling'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UplinkS1cdma2000tunneling_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UplinkS1cdma2000tunneling',Term1},Bytes4}.

'enc_DownlinkS1cdma2000tunneling'(Val) ->
Val1 = ?RT_PER:list_to_record('DownlinkS1cdma2000tunneling', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_DownlinkS1cdma2000tunneling_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_DownlinkS1cdma2000tunneling_protocolIEs'({'DownlinkS1cdma2000tunneling_protocolIEs',Val}) ->
'enc_DownlinkS1cdma2000tunneling_protocolIEs'(Val);

'enc_DownlinkS1cdma2000tunneling_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_DownlinkS1cdma2000tunneling_protocolIEs_components'(Val, [])
].
'enc_DownlinkS1cdma2000tunneling_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_DownlinkS1cdma2000tunneling_protocolIEs_components'([H|T], Acc) ->
'enc_DownlinkS1cdma2000tunneling_protocolIEs_components'(T, ['enc_DownlinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_DownlinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_72'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_DownlinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_72'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_DownlinkS1cdma2000tunneling_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_DownlinkS1cdma2000tunneling_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_DownlinkS1cdma2000tunneling_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_DownlinkS1cdma2000tunneling_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_DownlinkS1cdma2000tunneling_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_DownlinkS1cdma2000tunneling_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_DownlinkS1cdma2000tunneling'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_DownlinkS1cdma2000tunneling_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'DownlinkS1cdma2000tunneling',Term1},Bytes4}.

'enc_MMEConfigurationUpdateFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEConfigurationUpdateFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEConfigurationUpdateFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEConfigurationUpdateFailure_protocolIEs'({'MMEConfigurationUpdateFailure_protocolIEs',Val}) ->
'enc_MMEConfigurationUpdateFailure_protocolIEs'(Val);

'enc_MMEConfigurationUpdateFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEConfigurationUpdateFailure_protocolIEs_components'(Val, [])
].
'enc_MMEConfigurationUpdateFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEConfigurationUpdateFailure_protocolIEs_components'([H|T], Acc) ->
'enc_MMEConfigurationUpdateFailure_protocolIEs_components'(T, ['enc_MMEConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_73'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_73'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEConfigurationUpdateFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEConfigurationUpdateFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEConfigurationUpdateFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEConfigurationUpdateFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEConfigurationUpdateFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEConfigurationUpdateFailure',Term1},Bytes4}.

'enc_MMEConfigurationUpdateAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEConfigurationUpdateAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEConfigurationUpdateAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEConfigurationUpdateAcknowledge_protocolIEs'({'MMEConfigurationUpdateAcknowledge_protocolIEs',Val}) ->
'enc_MMEConfigurationUpdateAcknowledge_protocolIEs'(Val);

'enc_MMEConfigurationUpdateAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(Val, [])
].
'enc_MMEConfigurationUpdateAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEConfigurationUpdateAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(T, ['enc_MMEConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_74'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_74'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEConfigurationUpdateAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEConfigurationUpdateAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEConfigurationUpdateAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEConfigurationUpdateAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEConfigurationUpdateAcknowledge',Term1},Bytes4}.

'enc_MMEConfigurationUpdate'(Val) ->
Val1 = ?RT_PER:list_to_record('MMEConfigurationUpdate', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_MMEConfigurationUpdate_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_MMEConfigurationUpdate_protocolIEs'({'MMEConfigurationUpdate_protocolIEs',Val}) ->
'enc_MMEConfigurationUpdate_protocolIEs'(Val);

'enc_MMEConfigurationUpdate_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_MMEConfigurationUpdate_protocolIEs_components'(Val, [])
].
'enc_MMEConfigurationUpdate_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_MMEConfigurationUpdate_protocolIEs_components'([H|T], Acc) ->
'enc_MMEConfigurationUpdate_protocolIEs_components'(T, ['enc_MMEConfigurationUpdate_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_MMEConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_75'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_MMEConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_75'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_MMEConfigurationUpdate_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_MMEConfigurationUpdate_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_MMEConfigurationUpdate_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_MMEConfigurationUpdate_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_MMEConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_MMEConfigurationUpdate_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_MMEConfigurationUpdate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_MMEConfigurationUpdate_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'MMEConfigurationUpdate',Term1},Bytes4}.

'enc_ENBConfigurationUpdateFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdateFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdateFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdateFailure_protocolIEs'({'ENBConfigurationUpdateFailure_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdateFailure_protocolIEs'(Val);

'enc_ENBConfigurationUpdateFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdateFailure_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdateFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdateFailure_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdateFailure_protocolIEs_components'(T, ['enc_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_76'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_76'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdateFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdateFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdateFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdateFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdateFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdateFailure',Term1},Bytes4}.

'enc_ENBConfigurationUpdateAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdateAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'({'ENBConfigurationUpdateAcknowledge_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(Val);

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(T, ['enc_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_77'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_77'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdateAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdateAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdateAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdateAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdateAcknowledge',Term1},Bytes4}.

'enc_ENBConfigurationUpdate'(Val) ->
Val1 = ?RT_PER:list_to_record('ENBConfigurationUpdate', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ENBConfigurationUpdate_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ENBConfigurationUpdate_protocolIEs'({'ENBConfigurationUpdate_protocolIEs',Val}) ->
'enc_ENBConfigurationUpdate_protocolIEs'(Val);

'enc_ENBConfigurationUpdate_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ENBConfigurationUpdate_protocolIEs_components'(Val, [])
].
'enc_ENBConfigurationUpdate_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ENBConfigurationUpdate_protocolIEs_components'([H|T], Acc) ->
'enc_ENBConfigurationUpdate_protocolIEs_components'(T, ['enc_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_78'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_78'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ENBConfigurationUpdate_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ENBConfigurationUpdate_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ENBConfigurationUpdate_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ENBConfigurationUpdate_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ENBConfigurationUpdate_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ENBConfigurationUpdate_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ENBConfigurationUpdate'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ENBConfigurationUpdate_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ENBConfigurationUpdate',Term1},Bytes4}.

'enc_S1SetupFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('S1SetupFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_S1SetupFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_S1SetupFailure_protocolIEs'({'S1SetupFailure_protocolIEs',Val}) ->
'enc_S1SetupFailure_protocolIEs'(Val);

'enc_S1SetupFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_S1SetupFailure_protocolIEs_components'(Val, [])
].
'enc_S1SetupFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_S1SetupFailure_protocolIEs_components'([H|T], Acc) ->
'enc_S1SetupFailure_protocolIEs_components'(T, ['enc_S1SetupFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_S1SetupFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_79'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_S1SetupFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_79'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_S1SetupFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_S1SetupFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_S1SetupFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_S1SetupFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_S1SetupFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_S1SetupFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_S1SetupFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_S1SetupFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'S1SetupFailure',Term1},Bytes4}.

'enc_S1SetupResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('S1SetupResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_S1SetupResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_S1SetupResponse_protocolIEs'({'S1SetupResponse_protocolIEs',Val}) ->
'enc_S1SetupResponse_protocolIEs'(Val);

'enc_S1SetupResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_S1SetupResponse_protocolIEs_components'(Val, [])
].
'enc_S1SetupResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_S1SetupResponse_protocolIEs_components'([H|T], Acc) ->
'enc_S1SetupResponse_protocolIEs_components'(T, ['enc_S1SetupResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_S1SetupResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_80'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_S1SetupResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_80'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_S1SetupResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_S1SetupResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_S1SetupResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_S1SetupResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_S1SetupResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_S1SetupResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_S1SetupResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_S1SetupResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'S1SetupResponse',Term1},Bytes4}.

'enc_S1SetupRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('S1SetupRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_S1SetupRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_S1SetupRequest_protocolIEs'({'S1SetupRequest_protocolIEs',Val}) ->
'enc_S1SetupRequest_protocolIEs'(Val);

'enc_S1SetupRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_S1SetupRequest_protocolIEs_components'(Val, [])
].
'enc_S1SetupRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_S1SetupRequest_protocolIEs_components'([H|T], Acc) ->
'enc_S1SetupRequest_protocolIEs_components'(T, ['enc_S1SetupRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_S1SetupRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_81'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_S1SetupRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_81'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_S1SetupRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_S1SetupRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_S1SetupRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_S1SetupRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_S1SetupRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_S1SetupRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_S1SetupRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_S1SetupRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'S1SetupRequest',Term1},Bytes4}.

'enc_ErrorIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('ErrorIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ErrorIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ErrorIndication_protocolIEs'({'ErrorIndication_protocolIEs',Val}) ->
'enc_ErrorIndication_protocolIEs'(Val);

'enc_ErrorIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ErrorIndication_protocolIEs_components'(Val, [])
].
'enc_ErrorIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ErrorIndication_protocolIEs_components'([H|T], Acc) ->
'enc_ErrorIndication_protocolIEs_components'(T, ['enc_ErrorIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ErrorIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_82'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ErrorIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_82'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ErrorIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ErrorIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ErrorIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ErrorIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ErrorIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ErrorIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ErrorIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ErrorIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ErrorIndication',Term1},Bytes4}.


'enc_UE-associatedLogicalS1-ConnectionListResAck'({'UE-associatedLogicalS1-ConnectionListResAck',Val}) ->
'enc_UE-associatedLogicalS1-ConnectionListResAck'(Val);

'enc_UE-associatedLogicalS1-ConnectionListResAck'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_UE-associatedLogicalS1-ConnectionListResAck_components'(Val, [])
].
'enc_UE-associatedLogicalS1-ConnectionListResAck_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-associatedLogicalS1-ConnectionListResAck_components'([H|T], Acc) ->
'enc_UE-associatedLogicalS1-ConnectionListResAck_components'(T, ['enc_UE-associatedLogicalS1-ConnectionListResAck_ProtocolIE-Field'(H)

 | Acc]).
'enc_UE-associatedLogicalS1-ConnectionListResAck_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_83'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UE-associatedLogicalS1-ConnectionListResAck_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_83'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_UE-associatedLogicalS1-ConnectionListResAck'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_UE-associatedLogicalS1-ConnectionListResAck_components'(Num, Bytes1, telltype, []).
'dec_UE-associatedLogicalS1-ConnectionListResAck_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-associatedLogicalS1-ConnectionListResAck_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UE-associatedLogicalS1-ConnectionListResAck_ProtocolIE-Field'(Bytes, telltype),
   'dec_UE-associatedLogicalS1-ConnectionListResAck_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_ResetAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('ResetAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_ResetAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_ResetAcknowledge_protocolIEs'({'ResetAcknowledge_protocolIEs',Val}) ->
'enc_ResetAcknowledge_protocolIEs'(Val);

'enc_ResetAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_ResetAcknowledge_protocolIEs_components'(Val, [])
].
'enc_ResetAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_ResetAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_ResetAcknowledge_protocolIEs_components'(T, ['enc_ResetAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_ResetAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_84'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_ResetAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_84'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_ResetAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_ResetAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_ResetAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_ResetAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_ResetAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_ResetAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_ResetAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_ResetAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'ResetAcknowledge',Term1},Bytes4}.


'enc_UE-associatedLogicalS1-ConnectionListRes'({'UE-associatedLogicalS1-ConnectionListRes',Val}) ->
'enc_UE-associatedLogicalS1-ConnectionListRes'(Val);

'enc_UE-associatedLogicalS1-ConnectionListRes'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_UE-associatedLogicalS1-ConnectionListRes_components'(Val, [])
].
'enc_UE-associatedLogicalS1-ConnectionListRes_components'([], Acc) -> lists:reverse(Acc);

'enc_UE-associatedLogicalS1-ConnectionListRes_components'([H|T], Acc) ->
'enc_UE-associatedLogicalS1-ConnectionListRes_components'(T, ['enc_UE-associatedLogicalS1-ConnectionListRes_ProtocolIE-Field'(H)

 | Acc]).
'enc_UE-associatedLogicalS1-ConnectionListRes_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_85'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UE-associatedLogicalS1-ConnectionListRes_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_85'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_UE-associatedLogicalS1-ConnectionListRes'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_UE-associatedLogicalS1-ConnectionListRes_components'(Num, Bytes1, telltype, []).
'dec_UE-associatedLogicalS1-ConnectionListRes_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UE-associatedLogicalS1-ConnectionListRes_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UE-associatedLogicalS1-ConnectionListRes_ProtocolIE-Field'(Bytes, telltype),
   'dec_UE-associatedLogicalS1-ConnectionListRes_components'(Num-1, Remain, telltype, [Term|Acc]).

'enc_ResetAll'({'ResetAll',Val}) ->
'enc_ResetAll'(Val);

'enc_ResetAll'(Val) ->
case (case Val of {_,Enumval1}-> Enumval1;_->Val end) of
'reset-all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end.


'dec_ResetAll'(Bytes,_) ->
?RT_PER:decode_enumerated(Bytes,[{'ValueRange',{0,0}}],{{'reset-all'},{}}).


'enc_ResetType'({'ResetType',Val}) ->
'enc_ResetType'(Val);

'enc_ResetType'(Val) ->
[
?RT_PER:set_choice(element(1,Val),{['s1-Interface','partOfS1-Interface'],[]}, {2,0}),
case element(1,Val) of
's1-Interface' ->
case (case element(2,Val) of {_,Enumval1}-> Enumval1;_->element(2,Val) end) of
'reset-all' -> [{bit,0},?RT_PER:encode_integer([{'ValueRange',{0,0}}], 0)];

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end;
'partOfS1-Interface' ->
'enc_UE-associatedLogicalS1-ConnectionListRes'(element(2,Val))
end
].


'dec_ResetType'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getbit(Bytes),
{Choice,Bytes2} = ?RT_PER:getchoice(Bytes1,2,Ext ),
{Cname,{Val,NewBytes}} = case Choice + Ext*2 of
0 -> {'s1-Interface',
?RT_PER:decode_enumerated(Bytes2,[{'ValueRange',{0,0}}],{{'reset-all'},{}})};
1 -> {'partOfS1-Interface',
'dec_UE-associatedLogicalS1-ConnectionListRes'(Bytes2,telltype)};
_ -> {asn1_ExtAlt,
      fun() -> 
          {XTerm,XBytes} = ?RT_PER:decode_open_type(Bytes2,[]),
          {binary_to_list(XTerm),XBytes}
      end()}
end,

{{Cname,Val},NewBytes}.
'enc_Reset'(Val) ->
Val1 = ?RT_PER:list_to_record('Reset', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_Reset_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_Reset_protocolIEs'({'Reset_protocolIEs',Val}) ->
'enc_Reset_protocolIEs'(Val);

'enc_Reset_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_Reset_protocolIEs_components'(Val, [])
].
'enc_Reset_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_Reset_protocolIEs_components'([H|T], Acc) ->
'enc_Reset_protocolIEs_components'(T, ['enc_Reset_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_Reset_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_86'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_Reset_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_86'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_Reset_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_Reset_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_Reset_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Reset_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Reset_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_Reset_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_Reset'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_Reset_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'Reset',Term1},Bytes4}.

'enc_NASNonDeliveryIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('NASNonDeliveryIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_NASNonDeliveryIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_NASNonDeliveryIndication_protocolIEs'({'NASNonDeliveryIndication_protocolIEs',Val}) ->
'enc_NASNonDeliveryIndication_protocolIEs'(Val);

'enc_NASNonDeliveryIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_NASNonDeliveryIndication_protocolIEs_components'(Val, [])
].
'enc_NASNonDeliveryIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_NASNonDeliveryIndication_protocolIEs_components'([H|T], Acc) ->
'enc_NASNonDeliveryIndication_protocolIEs_components'(T, ['enc_NASNonDeliveryIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_NASNonDeliveryIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_87'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_NASNonDeliveryIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_87'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_NASNonDeliveryIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_NASNonDeliveryIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_NASNonDeliveryIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_NASNonDeliveryIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_NASNonDeliveryIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_NASNonDeliveryIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_NASNonDeliveryIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_NASNonDeliveryIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'NASNonDeliveryIndication',Term1},Bytes4}.

'enc_UplinkNASTransport'(Val) ->
Val1 = ?RT_PER:list_to_record('UplinkNASTransport', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UplinkNASTransport_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UplinkNASTransport_protocolIEs'({'UplinkNASTransport_protocolIEs',Val}) ->
'enc_UplinkNASTransport_protocolIEs'(Val);

'enc_UplinkNASTransport_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UplinkNASTransport_protocolIEs_components'(Val, [])
].
'enc_UplinkNASTransport_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UplinkNASTransport_protocolIEs_components'([H|T], Acc) ->
'enc_UplinkNASTransport_protocolIEs_components'(T, ['enc_UplinkNASTransport_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UplinkNASTransport_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_88'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UplinkNASTransport_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_88'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UplinkNASTransport_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UplinkNASTransport_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UplinkNASTransport_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UplinkNASTransport_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UplinkNASTransport_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UplinkNASTransport_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UplinkNASTransport'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UplinkNASTransport_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UplinkNASTransport',Term1},Bytes4}.

'enc_InitialUEMessage'(Val) ->
Val1 = ?RT_PER:list_to_record('InitialUEMessage', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_InitialUEMessage_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_InitialUEMessage_protocolIEs'({'InitialUEMessage_protocolIEs',Val}) ->
'enc_InitialUEMessage_protocolIEs'(Val);

'enc_InitialUEMessage_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_InitialUEMessage_protocolIEs_components'(Val, [])
].
'enc_InitialUEMessage_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_InitialUEMessage_protocolIEs_components'([H|T], Acc) ->
'enc_InitialUEMessage_protocolIEs_components'(T, ['enc_InitialUEMessage_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_InitialUEMessage_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_89'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_InitialUEMessage_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_89'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_InitialUEMessage_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_InitialUEMessage_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_InitialUEMessage_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_InitialUEMessage_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_InitialUEMessage_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_InitialUEMessage_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_InitialUEMessage'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_InitialUEMessage_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'InitialUEMessage',Term1},Bytes4}.

'enc_DownlinkNASTransport'(Val) ->
Val1 = ?RT_PER:list_to_record('DownlinkNASTransport', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_DownlinkNASTransport_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_DownlinkNASTransport_protocolIEs'({'DownlinkNASTransport_protocolIEs',Val}) ->
'enc_DownlinkNASTransport_protocolIEs'(Val);

'enc_DownlinkNASTransport_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_DownlinkNASTransport_protocolIEs_components'(Val, [])
].
'enc_DownlinkNASTransport_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_DownlinkNASTransport_protocolIEs_components'([H|T], Acc) ->
'enc_DownlinkNASTransport_protocolIEs_components'(T, ['enc_DownlinkNASTransport_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_DownlinkNASTransport_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_90'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_DownlinkNASTransport_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_90'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_DownlinkNASTransport_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_DownlinkNASTransport_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_DownlinkNASTransport_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_DownlinkNASTransport_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_DownlinkNASTransport_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_DownlinkNASTransport_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_DownlinkNASTransport'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_DownlinkNASTransport_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'DownlinkNASTransport',Term1},Bytes4}.

'enc_UEContextModificationFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextModificationFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextModificationFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextModificationFailure_protocolIEs'({'UEContextModificationFailure_protocolIEs',Val}) ->
'enc_UEContextModificationFailure_protocolIEs'(Val);

'enc_UEContextModificationFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextModificationFailure_protocolIEs_components'(Val, [])
].
'enc_UEContextModificationFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextModificationFailure_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextModificationFailure_protocolIEs_components'(T, ['enc_UEContextModificationFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextModificationFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_91'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextModificationFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_91'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextModificationFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextModificationFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextModificationFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextModificationFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextModificationFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextModificationFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextModificationFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextModificationFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextModificationFailure',Term1},Bytes4}.

'enc_UEContextModificationResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextModificationResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextModificationResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextModificationResponse_protocolIEs'({'UEContextModificationResponse_protocolIEs',Val}) ->
'enc_UEContextModificationResponse_protocolIEs'(Val);

'enc_UEContextModificationResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextModificationResponse_protocolIEs_components'(Val, [])
].
'enc_UEContextModificationResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextModificationResponse_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextModificationResponse_protocolIEs_components'(T, ['enc_UEContextModificationResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextModificationResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_92'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextModificationResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_92'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextModificationResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextModificationResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextModificationResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextModificationResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextModificationResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextModificationResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextModificationResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextModificationResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextModificationResponse',Term1},Bytes4}.

'enc_UEContextModificationRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextModificationRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextModificationRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextModificationRequest_protocolIEs'({'UEContextModificationRequest_protocolIEs',Val}) ->
'enc_UEContextModificationRequest_protocolIEs'(Val);

'enc_UEContextModificationRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextModificationRequest_protocolIEs_components'(Val, [])
].
'enc_UEContextModificationRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextModificationRequest_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextModificationRequest_protocolIEs_components'(T, ['enc_UEContextModificationRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextModificationRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_93'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextModificationRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_93'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextModificationRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextModificationRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextModificationRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextModificationRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextModificationRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextModificationRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextModificationRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextModificationRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextModificationRequest',Term1},Bytes4}.

'enc_UEContextReleaseComplete'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextReleaseComplete', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextReleaseComplete_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextReleaseComplete_protocolIEs'({'UEContextReleaseComplete_protocolIEs',Val}) ->
'enc_UEContextReleaseComplete_protocolIEs'(Val);

'enc_UEContextReleaseComplete_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextReleaseComplete_protocolIEs_components'(Val, [])
].
'enc_UEContextReleaseComplete_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextReleaseComplete_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextReleaseComplete_protocolIEs_components'(T, ['enc_UEContextReleaseComplete_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextReleaseComplete_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_94'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextReleaseComplete_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_94'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextReleaseComplete_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextReleaseComplete_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextReleaseComplete_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextReleaseComplete_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextReleaseComplete_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextReleaseComplete_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextReleaseComplete'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextReleaseComplete_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextReleaseComplete',Term1},Bytes4}.

'enc_UEContextReleaseCommand'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextReleaseCommand', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextReleaseCommand_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextReleaseCommand_protocolIEs'({'UEContextReleaseCommand_protocolIEs',Val}) ->
'enc_UEContextReleaseCommand_protocolIEs'(Val);

'enc_UEContextReleaseCommand_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextReleaseCommand_protocolIEs_components'(Val, [])
].
'enc_UEContextReleaseCommand_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextReleaseCommand_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextReleaseCommand_protocolIEs_components'(T, ['enc_UEContextReleaseCommand_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextReleaseCommand_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_95'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextReleaseCommand_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_95'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextReleaseCommand_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextReleaseCommand_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextReleaseCommand_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextReleaseCommand_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextReleaseCommand_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextReleaseCommand_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextReleaseCommand'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextReleaseCommand_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextReleaseCommand',Term1},Bytes4}.

'enc_UEContextReleaseRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('UEContextReleaseRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_UEContextReleaseRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_UEContextReleaseRequest_protocolIEs'({'UEContextReleaseRequest_protocolIEs',Val}) ->
'enc_UEContextReleaseRequest_protocolIEs'(Val);

'enc_UEContextReleaseRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_UEContextReleaseRequest_protocolIEs_components'(Val, [])
].
'enc_UEContextReleaseRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_UEContextReleaseRequest_protocolIEs_components'([H|T], Acc) ->
'enc_UEContextReleaseRequest_protocolIEs_components'(T, ['enc_UEContextReleaseRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_UEContextReleaseRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_96'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_UEContextReleaseRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_96'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_UEContextReleaseRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_UEContextReleaseRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_UEContextReleaseRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_UEContextReleaseRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_UEContextReleaseRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_UEContextReleaseRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_UEContextReleaseRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_UEContextReleaseRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'UEContextReleaseRequest',Term1},Bytes4}.

'enc_TAIItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type Externaltypereference1103S1APTAI
'enc_TAI'(?RT_PER:cindex(2,Val1,tAI)),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_TAIItem_iE-Extensions'(Tmpval1)
end].

'enc_TAIItem_iE-Extensions'({'TAIItem_iE-Extensions',Val}) ->
'enc_TAIItem_iE-Extensions'(Val);

'enc_TAIItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_TAIItem_iE-Extensions_components'(Val, [])
].
'enc_TAIItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_TAIItem_iE-Extensions_components'([H|T], Acc) ->
'enc_TAIItem_iE-Extensions_components'(T, ['enc_TAIItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_TAIItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_97'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_TAIItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_97'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_TAIItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_TAIItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_TAIItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAIItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAIItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_TAIItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_TAIItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%%  attribute number 1 with type TAI
{Term1,Bytes3} = 'dec_TAI'(Bytes2,telltype),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_TAIItem_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'TAIItem',Term1,Term2},Bytes6}.


'enc_TAIList'({'TAIList',Val}) ->
'enc_TAIList'(Val);

'enc_TAIList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_TAIList_components'(Val, [])
].
'enc_TAIList_components'([], Acc) -> lists:reverse(Acc);

'enc_TAIList_components'([H|T], Acc) ->
'enc_TAIList_components'(T, ['enc_TAIList_ProtocolIE-Field'(H)

 | Acc]).
'enc_TAIList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_98'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_TAIList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_98'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_TAIList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_TAIList_components'(Num, Bytes1, telltype, []).
'dec_TAIList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_TAIList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_TAIList_ProtocolIE-Field'(Bytes, telltype),
   'dec_TAIList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_Paging'(Val) ->
Val1 = ?RT_PER:list_to_record('Paging', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_Paging_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_Paging_protocolIEs'({'Paging_protocolIEs',Val}) ->
'enc_Paging_protocolIEs'(Val);

'enc_Paging_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_Paging_protocolIEs_components'(Val, [])
].
'enc_Paging_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_Paging_protocolIEs_components'([H|T], Acc) ->
'enc_Paging_protocolIEs_components'(T, ['enc_Paging_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_Paging_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_99'(id, 
                                               ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_Paging_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_99'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_Paging_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_Paging_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_Paging_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_Paging_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_Paging_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_Paging_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_Paging'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_Paging_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'Paging',Term1},Bytes4}.

'enc_InitialContextSetupFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('InitialContextSetupFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_InitialContextSetupFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_InitialContextSetupFailure_protocolIEs'({'InitialContextSetupFailure_protocolIEs',Val}) ->
'enc_InitialContextSetupFailure_protocolIEs'(Val);

'enc_InitialContextSetupFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_InitialContextSetupFailure_protocolIEs_components'(Val, [])
].
'enc_InitialContextSetupFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_InitialContextSetupFailure_protocolIEs_components'([H|T], Acc) ->
'enc_InitialContextSetupFailure_protocolIEs_components'(T, ['enc_InitialContextSetupFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_InitialContextSetupFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_100'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_InitialContextSetupFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_100'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_InitialContextSetupFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_InitialContextSetupFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_InitialContextSetupFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_InitialContextSetupFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_InitialContextSetupFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_InitialContextSetupFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_InitialContextSetupFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_InitialContextSetupFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'InitialContextSetupFailure',Term1},Bytes4}.

'enc_E-RABSetupItemCtxtSURes'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABSetupItemCtxtSURes_iE-Extensions'(Tmpval1)
end].

'enc_E-RABSetupItemCtxtSURes_iE-Extensions'({'E-RABSetupItemCtxtSURes_iE-Extensions',Val}) ->
'enc_E-RABSetupItemCtxtSURes_iE-Extensions'(Val);

'enc_E-RABSetupItemCtxtSURes_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABSetupItemCtxtSURes_iE-Extensions_components'(Val, [])
].
'enc_E-RABSetupItemCtxtSURes_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupItemCtxtSURes_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABSetupItemCtxtSURes_iE-Extensions_components'(T, ['enc_E-RABSetupItemCtxtSURes_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABSetupItemCtxtSURes_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_101'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABSetupItemCtxtSURes_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_101'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABSetupItemCtxtSURes_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABSetupItemCtxtSURes_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupItemCtxtSURes_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupItemCtxtSURes_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupItemCtxtSURes_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABSetupItemCtxtSURes_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABSetupItemCtxtSURes'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABSetupItemCtxtSURes_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABSetupItemCtxtSURes',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABSetupListCtxtSURes'({'E-RABSetupListCtxtSURes',Val}) ->
'enc_E-RABSetupListCtxtSURes'(Val);

'enc_E-RABSetupListCtxtSURes'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABSetupListCtxtSURes_components'(Val, [])
].
'enc_E-RABSetupListCtxtSURes_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupListCtxtSURes_components'([H|T], Acc) ->
'enc_E-RABSetupListCtxtSURes_components'(T, ['enc_E-RABSetupListCtxtSURes_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABSetupListCtxtSURes_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_102'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABSetupListCtxtSURes_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_102'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABSetupListCtxtSURes'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABSetupListCtxtSURes_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupListCtxtSURes_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupListCtxtSURes_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupListCtxtSURes_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABSetupListCtxtSURes_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_InitialContextSetupResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('InitialContextSetupResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_InitialContextSetupResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_InitialContextSetupResponse_protocolIEs'({'InitialContextSetupResponse_protocolIEs',Val}) ->
'enc_InitialContextSetupResponse_protocolIEs'(Val);

'enc_InitialContextSetupResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_InitialContextSetupResponse_protocolIEs_components'(Val, [])
].
'enc_InitialContextSetupResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_InitialContextSetupResponse_protocolIEs_components'([H|T], Acc) ->
'enc_InitialContextSetupResponse_protocolIEs_components'(T, ['enc_InitialContextSetupResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_InitialContextSetupResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_103'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_InitialContextSetupResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_103'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_InitialContextSetupResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_InitialContextSetupResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_InitialContextSetupResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_InitialContextSetupResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_InitialContextSetupResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_InitialContextSetupResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_InitialContextSetupResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_InitialContextSetupResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'InitialContextSetupResponse',Term1},Bytes4}.

'enc_E-RABToBeSetupItemCtxtSUReq'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6,7],2,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type Externaltypereference992S1APE-RABLevelQoSParameters
'enc_E-RABLevelQoSParameters'(?RT_PER:cindex(3,Val1,'e-RABlevelQoSParameters')),

%% attribute number 3 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(4,Val1,transportLayerAddress),[]),

%% attribute number 4 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(5,Val1,'gTP-TEID')),
case ?RT_PER:cindex(6,Val1,'nAS-PDU') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type OCTET STRING
?RT_PER:encode_octet_string([],Tmpval1)
end,
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 6 with type SEQUENCE OF
'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'(Tmpval2)
end].

'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'({'E-RABToBeSetupItemCtxtSUReq_iE-Extensions',Val}) ->
'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'(Val);

'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(T, ['enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_104'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_104'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeSetupItemCtxtSUReq'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,2), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type E-RABLevelQoSParameters
{Term2,Bytes4} = 'dec_E-RABLevelQoSParameters'(Bytes3,telltype),

%% attribute number 3 with type BIT STRING
{Term3,Bytes5} = ?RT_PER:decode_bit_string(Bytes4,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 4 with type OCTET STRING
{Term4,Bytes6} = ?RT_PER:decode_octet_string(Bytes5,[{'SizeConstraint',4}]),

%% attribute number 5 with type OCTET STRING
{Term5,Bytes7} = case Opt band (1 bsl 1) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_octet_string(Bytes6,[]);
0 ->{asn1_NOVALUE,Bytes6}

end,

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_E-RABToBeSetupItemCtxtSUReq_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'E-RABToBeSetupItemCtxtSUReq',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_E-RABToBeSetupListCtxtSUReq'({'E-RABToBeSetupListCtxtSUReq',Val}) ->
'enc_E-RABToBeSetupListCtxtSUReq'(Val);

'enc_E-RABToBeSetupListCtxtSUReq'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeSetupListCtxtSUReq_components'(Val, [])
].
'enc_E-RABToBeSetupListCtxtSUReq_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupListCtxtSUReq_components'([H|T], Acc) ->
'enc_E-RABToBeSetupListCtxtSUReq_components'(T, ['enc_E-RABToBeSetupListCtxtSUReq_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeSetupListCtxtSUReq_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_105'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeSetupListCtxtSUReq_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_105'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeSetupListCtxtSUReq'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeSetupListCtxtSUReq_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupListCtxtSUReq_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupListCtxtSUReq_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupListCtxtSUReq_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeSetupListCtxtSUReq_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_InitialContextSetupRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('InitialContextSetupRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_InitialContextSetupRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_InitialContextSetupRequest_protocolIEs'({'InitialContextSetupRequest_protocolIEs',Val}) ->
'enc_InitialContextSetupRequest_protocolIEs'(Val);

'enc_InitialContextSetupRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_InitialContextSetupRequest_protocolIEs_components'(Val, [])
].
'enc_InitialContextSetupRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_InitialContextSetupRequest_protocolIEs_components'([H|T], Acc) ->
'enc_InitialContextSetupRequest_protocolIEs_components'(T, ['enc_InitialContextSetupRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_InitialContextSetupRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_106'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_InitialContextSetupRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_106'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_InitialContextSetupRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_InitialContextSetupRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_InitialContextSetupRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_InitialContextSetupRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_InitialContextSetupRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_InitialContextSetupRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_InitialContextSetupRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_InitialContextSetupRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'InitialContextSetupRequest',Term1},Bytes4}.

'enc_E-RABReleaseIndication'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABReleaseIndication', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABReleaseIndication_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABReleaseIndication_protocolIEs'({'E-RABReleaseIndication_protocolIEs',Val}) ->
'enc_E-RABReleaseIndication_protocolIEs'(Val);

'enc_E-RABReleaseIndication_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABReleaseIndication_protocolIEs_components'(Val, [])
].
'enc_E-RABReleaseIndication_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABReleaseIndication_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABReleaseIndication_protocolIEs_components'(T, ['enc_E-RABReleaseIndication_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABReleaseIndication_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_107'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABReleaseIndication_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_107'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABReleaseIndication_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABReleaseIndication_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABReleaseIndication_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABReleaseIndication_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABReleaseIndication_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABReleaseIndication_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABReleaseIndication'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABReleaseIndication_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABReleaseIndication',Term1},Bytes4}.

'enc_E-RABReleaseItemBearerRelComp'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_E-RABReleaseItemBearerRelComp_iE-Extensions'(Tmpval1)
end].

'enc_E-RABReleaseItemBearerRelComp_iE-Extensions'({'E-RABReleaseItemBearerRelComp_iE-Extensions',Val}) ->
'enc_E-RABReleaseItemBearerRelComp_iE-Extensions'(Val);

'enc_E-RABReleaseItemBearerRelComp_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(Val, [])
].
'enc_E-RABReleaseItemBearerRelComp_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABReleaseItemBearerRelComp_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(T, ['enc_E-RABReleaseItemBearerRelComp_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABReleaseItemBearerRelComp_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_108'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_108'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABReleaseItemBearerRelComp_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABReleaseItemBearerRelComp_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABReleaseItemBearerRelComp'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_E-RABReleaseItemBearerRelComp_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'E-RABReleaseItemBearerRelComp',Term1,Term2},Bytes6}.


'enc_E-RABReleaseListBearerRelComp'({'E-RABReleaseListBearerRelComp',Val}) ->
'enc_E-RABReleaseListBearerRelComp'(Val);

'enc_E-RABReleaseListBearerRelComp'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABReleaseListBearerRelComp_components'(Val, [])
].
'enc_E-RABReleaseListBearerRelComp_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABReleaseListBearerRelComp_components'([H|T], Acc) ->
'enc_E-RABReleaseListBearerRelComp_components'(T, ['enc_E-RABReleaseListBearerRelComp_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABReleaseListBearerRelComp_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_109'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABReleaseListBearerRelComp_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_109'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABReleaseListBearerRelComp'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABReleaseListBearerRelComp_components'(Num, Bytes1, telltype, []).
'dec_E-RABReleaseListBearerRelComp_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABReleaseListBearerRelComp_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABReleaseListBearerRelComp_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABReleaseListBearerRelComp_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABReleaseResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABReleaseResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABReleaseResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABReleaseResponse_protocolIEs'({'E-RABReleaseResponse_protocolIEs',Val}) ->
'enc_E-RABReleaseResponse_protocolIEs'(Val);

'enc_E-RABReleaseResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABReleaseResponse_protocolIEs_components'(Val, [])
].
'enc_E-RABReleaseResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABReleaseResponse_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABReleaseResponse_protocolIEs_components'(T, ['enc_E-RABReleaseResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABReleaseResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_110'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABReleaseResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_110'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABReleaseResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABReleaseResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABReleaseResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABReleaseResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABReleaseResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABReleaseResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABReleaseResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABReleaseResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABReleaseResponse',Term1},Bytes4}.

'enc_E-RABReleaseCommand'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABReleaseCommand', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABReleaseCommand_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABReleaseCommand_protocolIEs'({'E-RABReleaseCommand_protocolIEs',Val}) ->
'enc_E-RABReleaseCommand_protocolIEs'(Val);

'enc_E-RABReleaseCommand_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABReleaseCommand_protocolIEs_components'(Val, [])
].
'enc_E-RABReleaseCommand_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABReleaseCommand_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABReleaseCommand_protocolIEs_components'(T, ['enc_E-RABReleaseCommand_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABReleaseCommand_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_111'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABReleaseCommand_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_111'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABReleaseCommand_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABReleaseCommand_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABReleaseCommand_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABReleaseCommand_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABReleaseCommand_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABReleaseCommand_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABReleaseCommand'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABReleaseCommand_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABReleaseCommand',Term1},Bytes4}.

'enc_E-RABModifyItemBearerModRes'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type SEQUENCE OF
'enc_E-RABModifyItemBearerModRes_iE-Extensions'(Tmpval1)
end].

'enc_E-RABModifyItemBearerModRes_iE-Extensions'({'E-RABModifyItemBearerModRes_iE-Extensions',Val}) ->
'enc_E-RABModifyItemBearerModRes_iE-Extensions'(Val);

'enc_E-RABModifyItemBearerModRes_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABModifyItemBearerModRes_iE-Extensions_components'(Val, [])
].
'enc_E-RABModifyItemBearerModRes_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABModifyItemBearerModRes_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABModifyItemBearerModRes_iE-Extensions_components'(T, ['enc_E-RABModifyItemBearerModRes_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABModifyItemBearerModRes_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_112'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABModifyItemBearerModRes_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_112'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABModifyItemBearerModRes_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABModifyItemBearerModRes_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABModifyItemBearerModRes_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABModifyItemBearerModRes_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABModifyItemBearerModRes_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABModifyItemBearerModRes_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABModifyItemBearerModRes'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type SEQUENCE OF
{Term2,Bytes4} = case Opt band (1 bsl 0) of
  _Opt2 when _Opt2 > 0 ->'dec_E-RABModifyItemBearerModRes_iE-Extensions'(Bytes3, telltype);
0 ->{asn1_NOVALUE,Bytes3}

end,
{Extensions,Bytes5} = ?RT_PER:getextension(Ext,Bytes4),
Bytes6= ?RT_PER:skipextensions(Bytes5,1,Extensions)
,
{{'E-RABModifyItemBearerModRes',Term1,Term2},Bytes6}.


'enc_E-RABModifyListBearerModRes'({'E-RABModifyListBearerModRes',Val}) ->
'enc_E-RABModifyListBearerModRes'(Val);

'enc_E-RABModifyListBearerModRes'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABModifyListBearerModRes_components'(Val, [])
].
'enc_E-RABModifyListBearerModRes_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABModifyListBearerModRes_components'([H|T], Acc) ->
'enc_E-RABModifyListBearerModRes_components'(T, ['enc_E-RABModifyListBearerModRes_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABModifyListBearerModRes_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_113'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABModifyListBearerModRes_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_113'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABModifyListBearerModRes'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABModifyListBearerModRes_components'(Num, Bytes1, telltype, []).
'dec_E-RABModifyListBearerModRes_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABModifyListBearerModRes_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABModifyListBearerModRes_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABModifyListBearerModRes_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABModifyResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABModifyResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABModifyResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABModifyResponse_protocolIEs'({'E-RABModifyResponse_protocolIEs',Val}) ->
'enc_E-RABModifyResponse_protocolIEs'(Val);

'enc_E-RABModifyResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABModifyResponse_protocolIEs_components'(Val, [])
].
'enc_E-RABModifyResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABModifyResponse_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABModifyResponse_protocolIEs_components'(T, ['enc_E-RABModifyResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABModifyResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_114'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABModifyResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_114'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABModifyResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABModifyResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABModifyResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABModifyResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABModifyResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABModifyResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABModifyResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABModifyResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABModifyResponse',Term1},Bytes4}.

'enc_E-RABToBeModifiedItemBearerModReq'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type Externaltypereference801S1APE-RABLevelQoSParameters
'enc_E-RABLevelQoSParameters'(?RT_PER:cindex(3,Val1,'e-RABLevelQoSParameters')),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(4,Val1,'nAS-PDU')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions'(Tmpval1)
end].

'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions'({'E-RABToBeModifiedItemBearerModReq_iE-Extensions',Val}) ->
'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions'(Val);

'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(T, ['enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeModifiedItemBearerModReq_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_115'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_115'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeModifiedItemBearerModReq'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type E-RABLevelQoSParameters
{Term2,Bytes4} = 'dec_E-RABLevelQoSParameters'(Bytes3,telltype),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABToBeModifiedItemBearerModReq_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABToBeModifiedItemBearerModReq',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABToBeModifiedListBearerModReq'({'E-RABToBeModifiedListBearerModReq',Val}) ->
'enc_E-RABToBeModifiedListBearerModReq'(Val);

'enc_E-RABToBeModifiedListBearerModReq'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeModifiedListBearerModReq_components'(Val, [])
].
'enc_E-RABToBeModifiedListBearerModReq_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeModifiedListBearerModReq_components'([H|T], Acc) ->
'enc_E-RABToBeModifiedListBearerModReq_components'(T, ['enc_E-RABToBeModifiedListBearerModReq_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeModifiedListBearerModReq_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_116'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeModifiedListBearerModReq_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_116'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeModifiedListBearerModReq'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeModifiedListBearerModReq_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeModifiedListBearerModReq_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeModifiedListBearerModReq_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeModifiedListBearerModReq_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeModifiedListBearerModReq_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABModifyRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABModifyRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABModifyRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABModifyRequest_protocolIEs'({'E-RABModifyRequest_protocolIEs',Val}) ->
'enc_E-RABModifyRequest_protocolIEs'(Val);

'enc_E-RABModifyRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABModifyRequest_protocolIEs_components'(Val, [])
].
'enc_E-RABModifyRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABModifyRequest_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABModifyRequest_protocolIEs_components'(T, ['enc_E-RABModifyRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABModifyRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_117'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABModifyRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_117'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABModifyRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABModifyRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABModifyRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABModifyRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABModifyRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABModifyRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABModifyRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABModifyRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABModifyRequest',Term1},Bytes4}.

'enc_E-RABSetupItemBearerSURes'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABSetupItemBearerSURes_iE-Extensions'(Tmpval1)
end].

'enc_E-RABSetupItemBearerSURes_iE-Extensions'({'E-RABSetupItemBearerSURes_iE-Extensions',Val}) ->
'enc_E-RABSetupItemBearerSURes_iE-Extensions'(Val);

'enc_E-RABSetupItemBearerSURes_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABSetupItemBearerSURes_iE-Extensions_components'(Val, [])
].
'enc_E-RABSetupItemBearerSURes_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupItemBearerSURes_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABSetupItemBearerSURes_iE-Extensions_components'(T, ['enc_E-RABSetupItemBearerSURes_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABSetupItemBearerSURes_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_118'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABSetupItemBearerSURes_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_118'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABSetupItemBearerSURes_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABSetupItemBearerSURes_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupItemBearerSURes_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupItemBearerSURes_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupItemBearerSURes_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABSetupItemBearerSURes_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABSetupItemBearerSURes'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABSetupItemBearerSURes_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABSetupItemBearerSURes',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABSetupListBearerSURes'({'E-RABSetupListBearerSURes',Val}) ->
'enc_E-RABSetupListBearerSURes'(Val);

'enc_E-RABSetupListBearerSURes'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABSetupListBearerSURes_components'(Val, [])
].
'enc_E-RABSetupListBearerSURes_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupListBearerSURes_components'([H|T], Acc) ->
'enc_E-RABSetupListBearerSURes_components'(T, ['enc_E-RABSetupListBearerSURes_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABSetupListBearerSURes_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_119'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABSetupListBearerSURes_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_119'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABSetupListBearerSURes'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABSetupListBearerSURes_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupListBearerSURes_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupListBearerSURes_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupListBearerSURes_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABSetupListBearerSURes_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABSetupResponse'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABSetupResponse', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABSetupResponse_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABSetupResponse_protocolIEs'({'E-RABSetupResponse_protocolIEs',Val}) ->
'enc_E-RABSetupResponse_protocolIEs'(Val);

'enc_E-RABSetupResponse_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABSetupResponse_protocolIEs_components'(Val, [])
].
'enc_E-RABSetupResponse_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupResponse_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABSetupResponse_protocolIEs_components'(T, ['enc_E-RABSetupResponse_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABSetupResponse_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_120'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABSetupResponse_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_120'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABSetupResponse_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABSetupResponse_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupResponse_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupResponse_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupResponse_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABSetupResponse_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABSetupResponse'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABSetupResponse_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABSetupResponse',Term1},Bytes4}.

'enc_E-RABToBeSetupItemBearerSUReq'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([7],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type Externaltypereference710S1APE-RABLevelQoSParameters
'enc_E-RABLevelQoSParameters'(?RT_PER:cindex(3,Val1,'e-RABlevelQoSParameters')),

%% attribute number 3 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(4,Val1,transportLayerAddress),[]),

%% attribute number 4 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(5,Val1,'gTP-TEID')),

%% attribute number 5 with type OCTET STRING
?RT_PER:encode_octet_string([],?RT_PER:cindex(6,Val1,'nAS-PDU')),
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 6 with type SEQUENCE OF
'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions'(Tmpval1)
end].

'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions'({'E-RABToBeSetupItemBearerSUReq_iE-Extensions',Val}) ->
'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions'(Val);

'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(T, ['enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeSetupItemBearerSUReq_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_121'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_121'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeSetupItemBearerSUReq'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type E-RABLevelQoSParameters
{Term2,Bytes4} = 'dec_E-RABLevelQoSParameters'(Bytes3,telltype),

%% attribute number 3 with type BIT STRING
{Term3,Bytes5} = ?RT_PER:decode_bit_string(Bytes4,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 4 with type OCTET STRING
{Term4,Bytes6} = ?RT_PER:decode_octet_string(Bytes5,[{'SizeConstraint',4}]),

%% attribute number 5 with type OCTET STRING
{Term5,Bytes7} = ?RT_PER:decode_octet_string(Bytes6,[]),

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_E-RABToBeSetupItemBearerSUReq_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'E-RABToBeSetupItemBearerSUReq',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_E-RABToBeSetupListBearerSUReq'({'E-RABToBeSetupListBearerSUReq',Val}) ->
'enc_E-RABToBeSetupListBearerSUReq'(Val);

'enc_E-RABToBeSetupListBearerSUReq'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeSetupListBearerSUReq_components'(Val, [])
].
'enc_E-RABToBeSetupListBearerSUReq_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupListBearerSUReq_components'([H|T], Acc) ->
'enc_E-RABToBeSetupListBearerSUReq_components'(T, ['enc_E-RABToBeSetupListBearerSUReq_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeSetupListBearerSUReq_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_122'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeSetupListBearerSUReq_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_122'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeSetupListBearerSUReq'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeSetupListBearerSUReq_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupListBearerSUReq_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupListBearerSUReq_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupListBearerSUReq_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeSetupListBearerSUReq_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABSetupRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('E-RABSetupRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_E-RABSetupRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_E-RABSetupRequest_protocolIEs'({'E-RABSetupRequest_protocolIEs',Val}) ->
'enc_E-RABSetupRequest_protocolIEs'(Val);

'enc_E-RABSetupRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_E-RABSetupRequest_protocolIEs_components'(Val, [])
].
'enc_E-RABSetupRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSetupRequest_protocolIEs_components'([H|T], Acc) ->
'enc_E-RABSetupRequest_protocolIEs_components'(T, ['enc_E-RABSetupRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABSetupRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_123'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABSetupRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_123'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_E-RABSetupRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_E-RABSetupRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_E-RABSetupRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSetupRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSetupRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABSetupRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABSetupRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_E-RABSetupRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'E-RABSetupRequest',Term1},Bytes4}.

'enc_HandoverCancelAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverCancelAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverCancelAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverCancelAcknowledge_protocolIEs'({'HandoverCancelAcknowledge_protocolIEs',Val}) ->
'enc_HandoverCancelAcknowledge_protocolIEs'(Val);

'enc_HandoverCancelAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverCancelAcknowledge_protocolIEs_components'(Val, [])
].
'enc_HandoverCancelAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverCancelAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverCancelAcknowledge_protocolIEs_components'(T, ['enc_HandoverCancelAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverCancelAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_124'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverCancelAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_124'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverCancelAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverCancelAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverCancelAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverCancelAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverCancelAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverCancelAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverCancelAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverCancelAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverCancelAcknowledge',Term1},Bytes4}.

'enc_HandoverCancel'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverCancel', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverCancel_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverCancel_protocolIEs'({'HandoverCancel_protocolIEs',Val}) ->
'enc_HandoverCancel_protocolIEs'(Val);

'enc_HandoverCancel_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverCancel_protocolIEs_components'(Val, [])
].
'enc_HandoverCancel_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverCancel_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverCancel_protocolIEs_components'(T, ['enc_HandoverCancel_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverCancel_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_125'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverCancel_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_125'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverCancel_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverCancel_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverCancel_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverCancel_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverCancel_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverCancel_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverCancel'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverCancel_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverCancel',Term1},Bytes4}.

'enc_PathSwitchRequestFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('PathSwitchRequestFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_PathSwitchRequestFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_PathSwitchRequestFailure_protocolIEs'({'PathSwitchRequestFailure_protocolIEs',Val}) ->
'enc_PathSwitchRequestFailure_protocolIEs'(Val);

'enc_PathSwitchRequestFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_PathSwitchRequestFailure_protocolIEs_components'(Val, [])
].
'enc_PathSwitchRequestFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_PathSwitchRequestFailure_protocolIEs_components'([H|T], Acc) ->
'enc_PathSwitchRequestFailure_protocolIEs_components'(T, ['enc_PathSwitchRequestFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_PathSwitchRequestFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_126'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_PathSwitchRequestFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_126'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_PathSwitchRequestFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_PathSwitchRequestFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_PathSwitchRequestFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_PathSwitchRequestFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_PathSwitchRequestFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_PathSwitchRequestFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_PathSwitchRequestFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_PathSwitchRequestFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'PathSwitchRequestFailure',Term1},Bytes4}.

'enc_E-RABToBeSwitchedULItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABToBeSwitchedULItem_iE-Extensions'(Tmpval1)
end].

'enc_E-RABToBeSwitchedULItem_iE-Extensions'({'E-RABToBeSwitchedULItem_iE-Extensions',Val}) ->
'enc_E-RABToBeSwitchedULItem_iE-Extensions'(Val);

'enc_E-RABToBeSwitchedULItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeSwitchedULItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeSwitchedULItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSwitchedULItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeSwitchedULItem_iE-Extensions_components'(T, ['enc_E-RABToBeSwitchedULItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeSwitchedULItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_127'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeSwitchedULItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_127'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeSwitchedULItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeSwitchedULItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSwitchedULItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSwitchedULItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSwitchedULItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeSwitchedULItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeSwitchedULItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABToBeSwitchedULItem_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABToBeSwitchedULItem',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABToBeSwitchedULList'({'E-RABToBeSwitchedULList',Val}) ->
'enc_E-RABToBeSwitchedULList'(Val);

'enc_E-RABToBeSwitchedULList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeSwitchedULList_components'(Val, [])
].
'enc_E-RABToBeSwitchedULList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSwitchedULList_components'([H|T], Acc) ->
'enc_E-RABToBeSwitchedULList_components'(T, ['enc_E-RABToBeSwitchedULList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeSwitchedULList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_128'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeSwitchedULList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_128'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeSwitchedULList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeSwitchedULList_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSwitchedULList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSwitchedULList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSwitchedULList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeSwitchedULList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_PathSwitchRequestAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('PathSwitchRequestAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_PathSwitchRequestAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_PathSwitchRequestAcknowledge_protocolIEs'({'PathSwitchRequestAcknowledge_protocolIEs',Val}) ->
'enc_PathSwitchRequestAcknowledge_protocolIEs'(Val);

'enc_PathSwitchRequestAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_PathSwitchRequestAcknowledge_protocolIEs_components'(Val, [])
].
'enc_PathSwitchRequestAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_PathSwitchRequestAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_PathSwitchRequestAcknowledge_protocolIEs_components'(T, ['enc_PathSwitchRequestAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_PathSwitchRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_129'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_PathSwitchRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_129'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_PathSwitchRequestAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_PathSwitchRequestAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_PathSwitchRequestAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_PathSwitchRequestAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_PathSwitchRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_PathSwitchRequestAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_PathSwitchRequestAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_PathSwitchRequestAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'PathSwitchRequestAcknowledge',Term1},Bytes4}.

'enc_E-RABToBeSwitchedDLItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),
case ?RT_PER:cindex(5,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type SEQUENCE OF
'enc_E-RABToBeSwitchedDLItem_iE-Extensions'(Tmpval1)
end].

'enc_E-RABToBeSwitchedDLItem_iE-Extensions'({'E-RABToBeSwitchedDLItem_iE-Extensions',Val}) ->
'enc_E-RABToBeSwitchedDLItem_iE-Extensions'(Val);

'enc_E-RABToBeSwitchedDLItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeSwitchedDLItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeSwitchedDLItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSwitchedDLItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeSwitchedDLItem_iE-Extensions_components'(T, ['enc_E-RABToBeSwitchedDLItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeSwitchedDLItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_130'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeSwitchedDLItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_130'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeSwitchedDLItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeSwitchedDLItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSwitchedDLItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSwitchedDLItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSwitchedDLItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeSwitchedDLItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeSwitchedDLItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%% attribute number 4 with type SEQUENCE OF
{Term4,Bytes6} = case Opt band (1 bsl 0) of
  _Opt4 when _Opt4 > 0 ->'dec_E-RABToBeSwitchedDLItem_iE-Extensions'(Bytes5, telltype);
0 ->{asn1_NOVALUE,Bytes5}

end,
{Extensions,Bytes7} = ?RT_PER:getextension(Ext,Bytes6),
Bytes8= ?RT_PER:skipextensions(Bytes7,1,Extensions)
,
{{'E-RABToBeSwitchedDLItem',Term1,Term2,Term3,Term4},Bytes8}.


'enc_E-RABToBeSwitchedDLList'({'E-RABToBeSwitchedDLList',Val}) ->
'enc_E-RABToBeSwitchedDLList'(Val);

'enc_E-RABToBeSwitchedDLList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeSwitchedDLList_components'(Val, [])
].
'enc_E-RABToBeSwitchedDLList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSwitchedDLList_components'([H|T], Acc) ->
'enc_E-RABToBeSwitchedDLList_components'(T, ['enc_E-RABToBeSwitchedDLList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeSwitchedDLList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_131'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeSwitchedDLList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_131'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeSwitchedDLList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeSwitchedDLList_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSwitchedDLList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSwitchedDLList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSwitchedDLList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeSwitchedDLList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_PathSwitchRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('PathSwitchRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_PathSwitchRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_PathSwitchRequest_protocolIEs'({'PathSwitchRequest_protocolIEs',Val}) ->
'enc_PathSwitchRequest_protocolIEs'(Val);

'enc_PathSwitchRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_PathSwitchRequest_protocolIEs_components'(Val, [])
].
'enc_PathSwitchRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_PathSwitchRequest_protocolIEs_components'([H|T], Acc) ->
'enc_PathSwitchRequest_protocolIEs_components'(T, ['enc_PathSwitchRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_PathSwitchRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_132'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_PathSwitchRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_132'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_PathSwitchRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_PathSwitchRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_PathSwitchRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_PathSwitchRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_PathSwitchRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_PathSwitchRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_PathSwitchRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_PathSwitchRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'PathSwitchRequest',Term1},Bytes4}.

'enc_HandoverNotify'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverNotify', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverNotify_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverNotify_protocolIEs'({'HandoverNotify_protocolIEs',Val}) ->
'enc_HandoverNotify_protocolIEs'(Val);

'enc_HandoverNotify_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverNotify_protocolIEs_components'(Val, [])
].
'enc_HandoverNotify_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverNotify_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverNotify_protocolIEs_components'(T, ['enc_HandoverNotify_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverNotify_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_133'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverNotify_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_133'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverNotify_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverNotify_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverNotify_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverNotify_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverNotify_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverNotify_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverNotify'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverNotify_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverNotify',Term1},Bytes4}.

'enc_HandoverFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverFailure_protocolIEs'({'HandoverFailure_protocolIEs',Val}) ->
'enc_HandoverFailure_protocolIEs'(Val);

'enc_HandoverFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverFailure_protocolIEs_components'(Val, [])
].
'enc_HandoverFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverFailure_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverFailure_protocolIEs_components'(T, ['enc_HandoverFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_134'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_134'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverFailure',Term1},Bytes4}.

'enc_E-RABFailedToSetupItemHOReqAck'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([4],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type Externaltypereference474S1APCause
'enc_Cause'(?RT_PER:cindex(3,Val1,cause)),
case ?RT_PER:cindex(4,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 3 with type SEQUENCE OF
'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions'(Tmpval1)
end].

'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions'({'E-RABFailedToSetupItemHOReqAck_iE-Extensions',Val}) ->
'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions'(Val);

'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(Val, [])
].
'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(T, ['enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABFailedToSetupItemHOReqAck_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_135'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_135'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABFailedToSetupItemHOReqAck'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%%  attribute number 2 with type Cause
{Term2,Bytes4} = 'dec_Cause'(Bytes3,telltype),

%% attribute number 3 with type SEQUENCE OF
{Term3,Bytes5} = case Opt band (1 bsl 0) of
  _Opt3 when _Opt3 > 0 ->'dec_E-RABFailedToSetupItemHOReqAck_iE-Extensions'(Bytes4, telltype);
0 ->{asn1_NOVALUE,Bytes4}

end,
{Extensions,Bytes6} = ?RT_PER:getextension(Ext,Bytes5),
Bytes7= ?RT_PER:skipextensions(Bytes6,1,Extensions)
,
{{'E-RABFailedToSetupItemHOReqAck',Term1,Term2,Term3},Bytes7}.


'enc_E-RABFailedtoSetupListHOReqAck'({'E-RABFailedtoSetupListHOReqAck',Val}) ->
'enc_E-RABFailedtoSetupListHOReqAck'(Val);

'enc_E-RABFailedtoSetupListHOReqAck'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABFailedtoSetupListHOReqAck_components'(Val, [])
].
'enc_E-RABFailedtoSetupListHOReqAck_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABFailedtoSetupListHOReqAck_components'([H|T], Acc) ->
'enc_E-RABFailedtoSetupListHOReqAck_components'(T, ['enc_E-RABFailedtoSetupListHOReqAck_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABFailedtoSetupListHOReqAck_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_136'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABFailedtoSetupListHOReqAck_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_136'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABFailedtoSetupListHOReqAck'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABFailedtoSetupListHOReqAck_components'(Num, Bytes1, telltype, []).
'dec_E-RABFailedtoSetupListHOReqAck_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABFailedtoSetupListHOReqAck_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABFailedtoSetupListHOReqAck_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABFailedtoSetupListHOReqAck_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_E-RABAdmittedItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([5,6,7,8,9],5,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),
case ?RT_PER:cindex(5,Val1,'dL-transportLayerAddress') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 4 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Tmpval1,[])
end,
case ?RT_PER:cindex(6,Val1,'dL-gTP-TEID') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 5 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Tmpval2)
end,
case ?RT_PER:cindex(7,Val1,'uL-TransportLayerAddress') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 6 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Tmpval3,[])
end,
case ?RT_PER:cindex(8,Val1,'uL-GTP-TEID') of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 7 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Tmpval4)
end,
case ?RT_PER:cindex(9,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 8 with type SEQUENCE OF
'enc_E-RABAdmittedItem_iE-Extensions'(Tmpval5)
end].

'enc_E-RABAdmittedItem_iE-Extensions'({'E-RABAdmittedItem_iE-Extensions',Val}) ->
'enc_E-RABAdmittedItem_iE-Extensions'(Val);

'enc_E-RABAdmittedItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABAdmittedItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABAdmittedItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABAdmittedItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABAdmittedItem_iE-Extensions_components'(T, ['enc_E-RABAdmittedItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABAdmittedItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_137'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABAdmittedItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_137'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABAdmittedItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABAdmittedItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABAdmittedItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABAdmittedItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABAdmittedItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABAdmittedItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABAdmittedItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%% attribute number 4 with type BIT STRING
{Term4,Bytes6} = case Opt band (1 bsl 4) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_bit_string(Bytes5,[{'SizeConstraint',{{1,160},[]}}],[]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type OCTET STRING
{Term5,Bytes7} = case Opt band (1 bsl 3) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_octet_string(Bytes6,[{'SizeConstraint',4}]);
0 ->{asn1_NOVALUE,Bytes6}

end,

%% attribute number 6 with type BIT STRING
{Term6,Bytes8} = case Opt band (1 bsl 2) of
  _Opt6 when _Opt6 > 0 ->?RT_PER:decode_bit_string(Bytes7,[{'SizeConstraint',{{1,160},[]}}],[]);
0 ->{asn1_NOVALUE,Bytes7}

end,

%% attribute number 7 with type OCTET STRING
{Term7,Bytes9} = case Opt band (1 bsl 1) of
  _Opt7 when _Opt7 > 0 ->?RT_PER:decode_octet_string(Bytes8,[{'SizeConstraint',4}]);
0 ->{asn1_NOVALUE,Bytes8}

end,

%% attribute number 8 with type SEQUENCE OF
{Term8,Bytes10} = case Opt band (1 bsl 0) of
  _Opt8 when _Opt8 > 0 ->'dec_E-RABAdmittedItem_iE-Extensions'(Bytes9, telltype);
0 ->{asn1_NOVALUE,Bytes9}

end,
{Extensions,Bytes11} = ?RT_PER:getextension(Ext,Bytes10),
Bytes12= ?RT_PER:skipextensions(Bytes11,1,Extensions)
,
{{'E-RABAdmittedItem',Term1,Term2,Term3,Term4,Term5,Term6,Term7,Term8},Bytes12}.


'enc_E-RABAdmittedList'({'E-RABAdmittedList',Val}) ->
'enc_E-RABAdmittedList'(Val);

'enc_E-RABAdmittedList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABAdmittedList_components'(Val, [])
].
'enc_E-RABAdmittedList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABAdmittedList_components'([H|T], Acc) ->
'enc_E-RABAdmittedList_components'(T, ['enc_E-RABAdmittedList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABAdmittedList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_138'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABAdmittedList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_138'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABAdmittedList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABAdmittedList_components'(Num, Bytes1, telltype, []).
'dec_E-RABAdmittedList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABAdmittedList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABAdmittedList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABAdmittedList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_HandoverRequestAcknowledge'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverRequestAcknowledge', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverRequestAcknowledge_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverRequestAcknowledge_protocolIEs'({'HandoverRequestAcknowledge_protocolIEs',Val}) ->
'enc_HandoverRequestAcknowledge_protocolIEs'(Val);

'enc_HandoverRequestAcknowledge_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverRequestAcknowledge_protocolIEs_components'(Val, [])
].
'enc_HandoverRequestAcknowledge_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRequestAcknowledge_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverRequestAcknowledge_protocolIEs_components'(T, ['enc_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_139'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_139'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRequestAcknowledge_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverRequestAcknowledge_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRequestAcknowledge_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverRequestAcknowledge_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRequestAcknowledge'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverRequestAcknowledge_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverRequestAcknowledge',Term1},Bytes4}.

'enc_E-RABToBeSetupItemHOReq'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([6],1,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],?RT_PER:cindex(3,Val1,transportLayerAddress),[]),

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],?RT_PER:cindex(4,Val1,'gTP-TEID')),

%% attribute number 4 with type Externaltypereference412S1APE-RABLevelQoSParameters
'enc_E-RABLevelQoSParameters'(?RT_PER:cindex(5,Val1,'e-RABlevelQosParameters')),
case ?RT_PER:cindex(6,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 5 with type SEQUENCE OF
'enc_E-RABToBeSetupItemHOReq_iE-Extensions'(Tmpval1)
end].

'enc_E-RABToBeSetupItemHOReq_iE-Extensions'({'E-RABToBeSetupItemHOReq_iE-Extensions',Val}) ->
'enc_E-RABToBeSetupItemHOReq_iE-Extensions'(Val);

'enc_E-RABToBeSetupItemHOReq_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABToBeSetupItemHOReq_iE-Extensions_components'(Val, [])
].
'enc_E-RABToBeSetupItemHOReq_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupItemHOReq_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABToBeSetupItemHOReq_iE-Extensions_components'(T, ['enc_E-RABToBeSetupItemHOReq_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABToBeSetupItemHOReq_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_140'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABToBeSetupItemHOReq_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_140'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABToBeSetupItemHOReq_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABToBeSetupItemHOReq_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupItemHOReq_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupItemHOReq_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupItemHOReq_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABToBeSetupItemHOReq_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABToBeSetupItemHOReq'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,1), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = ?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]),

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = ?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]),

%%  attribute number 4 with type E-RABLevelQoSParameters
{Term4,Bytes6} = 'dec_E-RABLevelQoSParameters'(Bytes5,telltype),

%% attribute number 5 with type SEQUENCE OF
{Term5,Bytes7} = case Opt band (1 bsl 0) of
  _Opt5 when _Opt5 > 0 ->'dec_E-RABToBeSetupItemHOReq_iE-Extensions'(Bytes6, telltype);
0 ->{asn1_NOVALUE,Bytes6}

end,
{Extensions,Bytes8} = ?RT_PER:getextension(Ext,Bytes7),
Bytes9= ?RT_PER:skipextensions(Bytes8,1,Extensions)
,
{{'E-RABToBeSetupItemHOReq',Term1,Term2,Term3,Term4,Term5},Bytes9}.


'enc_E-RABToBeSetupListHOReq'({'E-RABToBeSetupListHOReq',Val}) ->
'enc_E-RABToBeSetupListHOReq'(Val);

'enc_E-RABToBeSetupListHOReq'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABToBeSetupListHOReq_components'(Val, [])
].
'enc_E-RABToBeSetupListHOReq_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABToBeSetupListHOReq_components'([H|T], Acc) ->
'enc_E-RABToBeSetupListHOReq_components'(T, ['enc_E-RABToBeSetupListHOReq_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABToBeSetupListHOReq_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_141'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABToBeSetupListHOReq_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_141'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABToBeSetupListHOReq'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABToBeSetupListHOReq_components'(Num, Bytes1, telltype, []).
'dec_E-RABToBeSetupListHOReq_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABToBeSetupListHOReq_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABToBeSetupListHOReq_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABToBeSetupListHOReq_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_HandoverRequest'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverRequest', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverRequest_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverRequest_protocolIEs'({'HandoverRequest_protocolIEs',Val}) ->
'enc_HandoverRequest_protocolIEs'(Val);

'enc_HandoverRequest_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverRequest_protocolIEs_components'(Val, [])
].
'enc_HandoverRequest_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRequest_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverRequest_protocolIEs_components'(T, ['enc_HandoverRequest_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverRequest_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_142'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverRequest_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_142'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRequest_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverRequest_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverRequest_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRequest_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRequest_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverRequest_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRequest'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverRequest_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverRequest',Term1},Bytes4}.

'enc_HandoverPreparationFailure'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverPreparationFailure', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverPreparationFailure_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverPreparationFailure_protocolIEs'({'HandoverPreparationFailure_protocolIEs',Val}) ->
'enc_HandoverPreparationFailure_protocolIEs'(Val);

'enc_HandoverPreparationFailure_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverPreparationFailure_protocolIEs_components'(Val, [])
].
'enc_HandoverPreparationFailure_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverPreparationFailure_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverPreparationFailure_protocolIEs_components'(T, ['enc_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_143'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_143'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverPreparationFailure_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverPreparationFailure_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverPreparationFailure_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverPreparationFailure_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverPreparationFailure_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverPreparationFailure_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverPreparationFailure'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverPreparationFailure_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverPreparationFailure',Term1},Bytes4}.

'enc_E-RABDataForwardingItem'(Val) ->
{Val1,Opt} = ?RT_PER:fixoptionals([3,4,5,6,7],5,Val),
[
?RT_PER:setext(false), Opt,

%% attribute number 1 with type INTEGER
?RT_PER:encode_integer([{{'ValueRange',{0,15}},[]}],?RT_PER:cindex(2,Val1,'e-RAB-ID')),
case ?RT_PER:cindex(3,Val1,'dL-transportLayerAddress') of
asn1_NOVALUE -> [];
Tmpval1 ->

%% attribute number 2 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Tmpval1,[])
end,
case ?RT_PER:cindex(4,Val1,'dL-gTP-TEID') of
asn1_NOVALUE -> [];
Tmpval2 ->

%% attribute number 3 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Tmpval2)
end,
case ?RT_PER:cindex(5,Val1,'uL-TransportLayerAddress') of
asn1_NOVALUE -> [];
Tmpval3 ->

%% attribute number 4 with type BIT STRING
?RT_PER:encode_bit_string([{'SizeConstraint',{{1,160},[]}}],Tmpval3,[])
end,
case ?RT_PER:cindex(6,Val1,'uL-GTP-TEID') of
asn1_NOVALUE -> [];
Tmpval4 ->

%% attribute number 5 with type OCTET STRING
?RT_PER:encode_octet_string([{'SizeConstraint',4}],Tmpval4)
end,
case ?RT_PER:cindex(7,Val1,'iE-Extensions') of
asn1_NOVALUE -> [];
Tmpval5 ->

%% attribute number 6 with type SEQUENCE OF
'enc_E-RABDataForwardingItem_iE-Extensions'(Tmpval5)
end].

'enc_E-RABDataForwardingItem_iE-Extensions'({'E-RABDataForwardingItem_iE-Extensions',Val}) ->
'enc_E-RABDataForwardingItem_iE-Extensions'(Val);

'enc_E-RABDataForwardingItem_iE-Extensions'(Val) ->
[

   ?RT_PER:encode_length({1,65535},length(Val)),
   'enc_E-RABDataForwardingItem_iE-Extensions_components'(Val, [])
].
'enc_E-RABDataForwardingItem_iE-Extensions_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABDataForwardingItem_iE-Extensions_components'([H|T], Acc) ->
'enc_E-RABDataForwardingItem_iE-Extensions_components'(T, ['enc_E-RABDataForwardingItem_iE-Extensions_ProtocolExtensionField'(H)

 | Acc]).
'enc_E-RABDataForwardingItem_iE-Extensions_ProtocolExtensionField'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolExtensionField', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_144'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldExtension
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Extension', ?RT_PER:cindex(4,Val1,extensionValue), [])))].

'dec_E-RABDataForwardingItem_iE-Extensions_ProtocolExtensionField'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Extension
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_144'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Extension', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolExtensionField',Term1,Term2,Term3},Bytes3}.


'dec_E-RABDataForwardingItem_iE-Extensions'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,65535}),
'dec_E-RABDataForwardingItem_iE-Extensions_components'(Num, Bytes1, telltype, []).
'dec_E-RABDataForwardingItem_iE-Extensions_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABDataForwardingItem_iE-Extensions_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABDataForwardingItem_iE-Extensions_ProtocolExtensionField'(Bytes, telltype),
   'dec_E-RABDataForwardingItem_iE-Extensions_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_E-RABDataForwardingItem'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),
{Opt,Bytes2} = ?RT_PER:getoptionals2(Bytes1,5), 
%% attribute number 1 with type INTEGER
{Term1,Bytes3} = ?RT_PER:decode_integer(Bytes2,[{{'ValueRange',{0,15}},[]}]),

%% attribute number 2 with type BIT STRING
{Term2,Bytes4} = case Opt band (1 bsl 4) of
  _Opt2 when _Opt2 > 0 ->?RT_PER:decode_bit_string(Bytes3,[{'SizeConstraint',{{1,160},[]}}],[]);
0 ->{asn1_NOVALUE,Bytes3}

end,

%% attribute number 3 with type OCTET STRING
{Term3,Bytes5} = case Opt band (1 bsl 3) of
  _Opt3 when _Opt3 > 0 ->?RT_PER:decode_octet_string(Bytes4,[{'SizeConstraint',4}]);
0 ->{asn1_NOVALUE,Bytes4}

end,

%% attribute number 4 with type BIT STRING
{Term4,Bytes6} = case Opt band (1 bsl 2) of
  _Opt4 when _Opt4 > 0 ->?RT_PER:decode_bit_string(Bytes5,[{'SizeConstraint',{{1,160},[]}}],[]);
0 ->{asn1_NOVALUE,Bytes5}

end,

%% attribute number 5 with type OCTET STRING
{Term5,Bytes7} = case Opt band (1 bsl 1) of
  _Opt5 when _Opt5 > 0 ->?RT_PER:decode_octet_string(Bytes6,[{'SizeConstraint',4}]);
0 ->{asn1_NOVALUE,Bytes6}

end,

%% attribute number 6 with type SEQUENCE OF
{Term6,Bytes8} = case Opt band (1 bsl 0) of
  _Opt6 when _Opt6 > 0 ->'dec_E-RABDataForwardingItem_iE-Extensions'(Bytes7, telltype);
0 ->{asn1_NOVALUE,Bytes7}

end,
{Extensions,Bytes9} = ?RT_PER:getextension(Ext,Bytes8),
Bytes10= ?RT_PER:skipextensions(Bytes9,1,Extensions)
,
{{'E-RABDataForwardingItem',Term1,Term2,Term3,Term4,Term5,Term6},Bytes10}.


'enc_E-RABSubjecttoDataForwardingList'({'E-RABSubjecttoDataForwardingList',Val}) ->
'enc_E-RABSubjecttoDataForwardingList'(Val);

'enc_E-RABSubjecttoDataForwardingList'(Val) ->
[

   ?RT_PER:encode_length({1,256},length(Val)),
   'enc_E-RABSubjecttoDataForwardingList_components'(Val, [])
].
'enc_E-RABSubjecttoDataForwardingList_components'([], Acc) -> lists:reverse(Acc);

'enc_E-RABSubjecttoDataForwardingList_components'([H|T], Acc) ->
'enc_E-RABSubjecttoDataForwardingList_components'(T, ['enc_E-RABSubjecttoDataForwardingList_ProtocolIE-Field'(H)

 | Acc]).
'enc_E-RABSubjecttoDataForwardingList_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_145'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_E-RABSubjecttoDataForwardingList_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_145'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.



'dec_E-RABSubjecttoDataForwardingList'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{1,256}),
'dec_E-RABSubjecttoDataForwardingList_components'(Num, Bytes1, telltype, []).
'dec_E-RABSubjecttoDataForwardingList_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_E-RABSubjecttoDataForwardingList_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_E-RABSubjecttoDataForwardingList_ProtocolIE-Field'(Bytes, telltype),
   'dec_E-RABSubjecttoDataForwardingList_components'(Num-1, Remain, telltype, [Term|Acc]).
'enc_HandoverCommand'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverCommand', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverCommand_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverCommand_protocolIEs'({'HandoverCommand_protocolIEs',Val}) ->
'enc_HandoverCommand_protocolIEs'(Val);

'enc_HandoverCommand_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverCommand_protocolIEs_components'(Val, [])
].
'enc_HandoverCommand_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverCommand_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverCommand_protocolIEs_components'(T, ['enc_HandoverCommand_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverCommand_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_146'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverCommand_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_146'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverCommand_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverCommand_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverCommand_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverCommand_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverCommand_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverCommand_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverCommand'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverCommand_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverCommand',Term1},Bytes4}.

'enc_HandoverRequired'(Val) ->
Val1 = ?RT_PER:list_to_record('HandoverRequired', Val),
[
?RT_PER:setext(false), 
%% attribute number 1 with type SEQUENCE OF
'enc_HandoverRequired_protocolIEs'(?RT_PER:cindex(2,Val1,protocolIEs))].

'enc_HandoverRequired_protocolIEs'({'HandoverRequired_protocolIEs',Val}) ->
'enc_HandoverRequired_protocolIEs'(Val);

'enc_HandoverRequired_protocolIEs'(Val) ->
[

   ?RT_PER:encode_length({0,65535},length(Val)),
   'enc_HandoverRequired_protocolIEs_components'(Val, [])
].
'enc_HandoverRequired_protocolIEs_components'([], Acc) -> lists:reverse(Acc);

'enc_HandoverRequired_protocolIEs_components'([H|T], Acc) ->
'enc_HandoverRequired_protocolIEs_components'(T, ['enc_HandoverRequired_protocolIEs_ProtocolIE-Field'(H)

 | Acc]).
'enc_HandoverRequired_protocolIEs_ProtocolIE-Field'(Val) ->
Val1 = ?RT_PER:list_to_record('ProtocolIE-Field', Val),
Objid = 
  'S1AP':'getenc_internal_object_set_argument_147'(id, 
                                                ?RT_PER:cindex(2,Val1,id)),
[

%% attribute number 1 with type fixedtypevaluefieldidtypeINTEGERValueRange065535no
?RT_PER:encode_integer([{'ValueRange',{0,65535}}],?RT_PER:cindex(2,Val1,id)),

%% attribute number 2 with type fixedtypevaluefieldcriticalitytypeENUMERATEDreject0ignore1notify2no
case (case ?RT_PER:cindex(3,Val1,criticality) of {_,Enumval2}->Enumval2;_->?RT_PER:cindex(3,Val1,criticality) end) of
'reject' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 0);
'ignore' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 1);
'notify' -> ?RT_PER:encode_integer([{'ValueRange',{0,2}}], 2);

EnumVal -> exit({error,{asn1, {enumerated_not_in_range, EnumVal}}})
end,

%% attribute number 3 with type typefieldValue
?RT_PER:encode_open_type([],?RT_PER:complete(
   Objid('Value', ?RT_PER:cindex(4,Val1,value), [])))].

'dec_HandoverRequired_protocolIEs_ProtocolIE-Field'(Bytes,_) ->

%%  attribute number 1 with type id
{Term1,Bytes1} = ?RT_PER:decode_integer(Bytes,[{'ValueRange',{0,65535}}]),

%%  attribute number 2 with type criticality
{Term2,Bytes2} = ?RT_PER:decode_enumerated(Bytes1,[{'ValueRange',{0,2}}],{reject,ignore,notify}),

%%  attribute number 3 with type Value
{Tmpterm1, Bytes3} = ?RT_PER:decode_open_type(Bytes2, []),
DecObjidTerm1 =
   'S1AP':'getdec_internal_object_set_argument_147'(id, Term1),
Term3 = 
   case (catch DecObjidTerm1('Value', Tmpterm1, telltype,[])) of
      {'EXIT', Reason1} ->
         exit({'Type not compatible with table constraint',Reason1});
      {Tmpterm2,_} ->
         Tmpterm2
   end,

{{'ProtocolIE-Field',Term1,Term2,Term3},Bytes3}.


'dec_HandoverRequired_protocolIEs'(Bytes,_) ->

{Num,Bytes1} = ?RT_PER:decode_length(Bytes,{0,65535}),
'dec_HandoverRequired_protocolIEs_components'(Num, Bytes1, telltype, []).
'dec_HandoverRequired_protocolIEs_components'(0, Bytes, _, Acc) ->
   {lists:reverse(Acc), Bytes};
'dec_HandoverRequired_protocolIEs_components'(Num, Bytes, _, Acc) ->
   {Term,Remain} = 'dec_HandoverRequired_protocolIEs_ProtocolIE-Field'(Bytes, telltype),
   'dec_HandoverRequired_protocolIEs_components'(Num-1, Remain, telltype, [Term|Acc]).


'dec_HandoverRequired'(Bytes,_) ->
{Ext,Bytes1} = ?RT_PER:getext(Bytes),

%% attribute number 1 with type SEQUENCE OF
{Term1,Bytes2} = 'dec_HandoverRequired_protocolIEs'(Bytes1, telltype),
{Extensions,Bytes3} = ?RT_PER:getextension(Ext,Bytes2),
Bytes4= ?RT_PER:skipextensions(Bytes3,1,Extensions)
,
{{'HandoverRequired',Term1},Bytes4}.

'id-Target-ToSource-TransparentContainer-Secondary'() ->
139.

'id-Source-ToTarget-TransparentContainer-Secondary'() ->
138.

'id-DefaultPagingDRX'() ->
137.

'id-NASSecurityParameterstoE-UTRAN'() ->
136.

'id-NASSecurityParametersfromE-UTRAN'() ->
135.

'id-RRC-Establishment-Cause'() ->
134.

'id-MSClassmark3'() ->
133.

'id-MSClassmark2'() ->
132.

'id-TraceCollectionEntityIPAddress'() ->
131.

'id-SONConfigurationTransferMCT'() ->
130.

'id-SONConfigurationTransferECT'() ->
129.

'id-CSG-IdList'() ->
128.

'id-CSG-Id'() ->
127.

'id-NAS-DownlinkCount'() ->
126.

'id-SRVCCHOIndication'() ->
125.

'id-SRVCCOperationPossible'() ->
124.

'id-Target-ToSource-TransparentContainer'() ->
123.

'id-Inter-SystemInformationTransferTypeMDT'() ->
122.

'id-Inter-SystemInformationTransferTypeEDT'() ->
121.

'id-BroadcastCompletedAreaList'() ->
120.

'id-WarningMessageContents'() ->
119.

'id-DataCodingScheme'() ->
118.

'id-WarningSecurityInfo'() ->
117.

'id-WarningType'() ->
116.

'id-NumberofBroadcastRequest'() ->
115.

'id-RepetitionPeriod'() ->
114.

'id-WarningAreaList'() ->
113.

'id-SerialNumber'() ->
112.

'id-MessageIdentifier'() ->
111.

'id-E-RABReleasedList'() ->
110.

'id-CNDomain'() ->
109.

'id-CSFallbackIndicator'() ->
108.

'id-UESecurityCapabilities'() ->
107.

'id-SubscriberProfileIDforRFP'() ->
106.

'id-ServedGUMMEIs'() ->
105.

'id-Source-ToTarget-TransparentContainer'() ->
104.

'id-E-RABFailedToBeReleasedList'() ->
103.

'id-cdma2000OneXSRVCCInfo'() ->
102.

'id-OverloadResponse'() ->
101.

'id-EUTRAN-CGI'() ->
100.

'id-UE-S1AP-IDs'() ->
99.

'id-RequestType'() ->
98.

'id-cdma2000OneXRAND'() ->
97.

'id-S-TMSI'() ->
96.

'id-E-RABToBeSwitchedULList'() ->
95.

'id-E-RABToBeSwitchedULItem'() ->
94.

'id-UE-associatedLogicalS1-ConnectionListResAck'() ->
93.

'id-ResetType'() ->
92.

'id-UE-associatedLogicalS1-ConnectionItem'() ->
91.

'id-eNB-StatusTransfer-TransparentContainer'() ->
90.

'id-Bearers-SubjectToStatusTransfer-Item'() ->
89.

'id-SourceMME-UE-S1AP-ID'() ->
88.

'id-RelativeMMECapacity'() ->
87.

'id-E-UTRAN-Trace-ID'() ->
86.

'id-cdma2000HORequiredIndication'() ->
84.

'id-cdma2000HOStatus'() ->
83.

'id-UEIdentityIndexValue'() ->
80.

'id-Direct-Forwarding-Path-Availability'() ->
79.

'id-E-RABInformationListItem'() ->
78.

'id-GUMMEI-ID'() ->
75.

'id-UERadioCapability'() ->
74.

'id-SecurityKey'() ->
73.

'id-cdma2000SectorID'() ->
72.

'id-cdma2000RATType'() ->
71.

'id-cdma2000PDU'() ->
70.

'id-E-RABReleaseListBearerRelComp'() ->
69.

'id-TAI'() ->
67.

'id-uEaggregateMaximumBitrate'() ->
66.

'id-TimeToWait'() ->
65.

'id-SupportedTAs'() ->
64.

'id-ServedPLMNs'() ->
63.

'id-MMEname'() ->
61.

'id-eNBname'() ->
60.

'id-Global-ENB-ID'() ->
59.

'id-CriticalityDiagnostics'() ->
58.

'id-UTRANtoLTEHOInformationRes'() ->
57.

'id-GERANtoLTEHOInformationRes'() ->
55.

'id-E-RABToBeSetupListHOReq'() ->
53.

'id-E-RABToBeSetupItemCtxtSUReq'() ->
52.

'id-E-RABSetupListCtxtSURes'() ->
51.

'id-E-RABSetupItemCtxtSURes'() ->
50.

'id-E-RABReleaseItemHOCmd'() ->
49.

'id-E-RABFailedToSetupListCtxtSURes'() ->
48.

'id-TAIItem'() ->
47.

'id-TAIList'() ->
46.

'id-pagingDRX'() ->
44.

'id-UEPagingID'() ->
43.

'id-HandoverRestrictionList'() ->
41.

'id-SecurityContext'() ->
40.

'id-E-RABSetupItemBearerSURes'() ->
39.

'id-E-RABReleaseItem'() ->
38.

'id-E-RABModifyItemBearerModRes'() ->
37.

'id-E-RABToBeModifiedItemBearerModReq'() ->
36.

'id-E-RABItem'() ->
35.

'id-E-RABFailedToReleaseList'() ->
34.

'id-E-RABToBeReleasedList'() ->
33.

'id-E-RABFailedToModifyList'() ->
32.

'id-E-RABModifyListBearerModRes'() ->
31.

'id-E-RABToBeModifiedListBearerModReq'() ->
30.

'id-E-RABFailedToSetupListBearerSURes'() ->
29.

'id-E-RABSetupListBearerSURes'() ->
28.

'id-E-RABToBeSetupItemHOReq'() ->
27.

'id-NAS-PDU'() ->
26.

'id-TraceActivation'() ->
25.

'id-E-RABToBeSetupListCtxtSUReq'() ->
24.

'id-E-RABToBeSwitchedDLItem'() ->
23.

'id-E-RABToBeSwitchedDLList'() ->
22.

'id-E-RABFailedtoSetupItemHOReqAck'() ->
21.

'id-E-RABAdmittedItem'() ->
20.

'id-E-RABFailedToSetupListHOReqAck'() ->
19.

'id-E-RABAdmittedList'() ->
18.

'id-E-RABToBeSetupItemBearerSUReq'() ->
17.

'id-E-RABToBeSetupListBearerSUReq'() ->
16.

'id-E-RABReleaseItemBearerRelComp'() ->
15.

'id-E-RABDataForwardingItem'() ->
14.

'id-E-RABtoReleaseListHOCmd'() ->
13.

'id-E-RABSubjecttoDataForwardingList'() ->
12.

'id-eNB-UE-S1AP-ID'() ->
8.

'id-TargetID'() ->
4.

'id-SourceID'() ->
3.

'id-Cause'() ->
2.

'id-HandoverType'() ->
1.

'id-MME-UE-S1AP-ID'() ->
0.

'maxnoofMMECs'() ->
256.

'maxnoofGroupIDs'() ->
65535.

'maxnoofRATs'() ->
8.

'maxnoofeNBX2TLAs'() ->
2.

'maxnoofCellinEAI'() ->
65535.

'maxnoofCellinTAI'() ->
65535.

'maxnoofEmergencyAreaID'() ->
65535.

'maxnoofCellID'() ->
65535.

'maxnoofTAIforWarning'() ->
65535.

'maxnoofCells'() ->
16.

'maxNrOfIndividualS1ConnectionsToReset'() ->
256.

'maxnoofForbTACs'() ->
4096.

'maxnoofForbLACs'() ->
4096.

'maxnoofEPLMNsPlusOne'() ->
16.

'maxnoofEPLMNs'() ->
15.

'maxnoofPLMNsPerMME'() ->
32.

'maxnoofBPLMNs'() ->
6.

'maxNrOfErrors'() ->
256.

'maxnoofTACs'() ->
256.

'maxnoofTAIs'() ->
256.

'maxNrOfE-RABs'() ->
256.

'maxNrOfCSGs'() ->
256.

'maxProtocolIEs'() ->
65535.

'maxProtocolExtensions'() ->
65535.

'maxPrivateIEs'() ->
65535.

'id-CellTrafficTrace'() ->
42.

'id-MMEConfigurationTransfer'() ->
41.

'id-eNBConfigurationTransfer'() ->
40.

'id-PrivateMessage'() ->
39.

'id-MMEDirectInformationTransfer'() ->
38.

'id-eNBDirectInformationTransfer'() ->
37.

'id-WriteReplaceWarning'() ->
36.

'id-OverloadStop'() ->
35.

'id-OverloadStart'() ->
34.

'id-LocationReport'() ->
33.

'id-LocationReportingFailureIndication'() ->
32.

'id-LocationReportingControl'() ->
31.

'id-MMEConfigurationUpdate'() ->
30.

'id-ENBConfigurationUpdate'() ->
29.

'id-TraceFailureIndication'() ->
28.

'id-TraceStart'() ->
27.

'id-DeactivateTrace'() ->
26.

'id-MMEStatusTransfer'() ->
25.

'id-eNBStatusTransfer'() ->
24.

'id-UEContextRelease'() ->
23.

'id-UECapabilityInfoIndication'() ->
22.

'id-UEContextModification'() ->
21.

'id-UplinkS1cdma2000tunneling'() ->
20.

'id-DownlinkS1cdma2000tunneling'() ->
19.

'id-UEContextReleaseRequest'() ->
18.

'id-S1Setup'() ->
17.

'id-NASNonDeliveryIndication'() ->
16.

'id-ErrorIndication'() ->
15.

'id-Reset'() ->
14.

'id-uplinkNASTransport'() ->
13.

'id-initialUEMessage'() ->
12.

'id-downlinkNASTransport'() ->
11.

'id-Paging'() ->
10.

'id-InitialContextSetup'() ->
9.

'id-E-RABReleaseIndication'() ->
8.

'id-E-RABRelease'() ->
7.

'id-E-RABModify'() ->
6.

'id-E-RABSetup'() ->
5.

'id-HandoverCancel'() ->
4.

'id-PathSwitchRequest'() ->
3.

'id-HandoverNotification'() ->
2.

'id-HandoverResourceAllocation'() ->
1.

'id-HandoverPreparation'() ->
0.




%%================================
%%  privateMessage
%%================================
'enc_privateMessage'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_PrivateMessage'(Val);
'enc_privateMessage'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_privateMessage'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_privateMessage'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_PrivateMessage'(Bytes, telltype);
'dec_privateMessage'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_privateMessage'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  mMEConfigurationTransfer
%%================================
'enc_mMEConfigurationTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_MMEConfigurationTransfer'(Val);
'enc_mMEConfigurationTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_mMEConfigurationTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_mMEConfigurationTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEConfigurationTransfer'(Bytes, telltype);
'dec_mMEConfigurationTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_mMEConfigurationTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  eNBConfigurationTransfer
%%================================
'enc_eNBConfigurationTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationTransfer'(Val);
'enc_eNBConfigurationTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_eNBConfigurationTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_eNBConfigurationTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationTransfer'(Bytes, telltype);
'dec_eNBConfigurationTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_eNBConfigurationTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  mMEDirectInformationTransfer
%%================================
'enc_mMEDirectInformationTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_MMEDirectInformationTransfer'(Val);
'enc_mMEDirectInformationTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_mMEDirectInformationTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_mMEDirectInformationTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEDirectInformationTransfer'(Bytes, telltype);
'dec_mMEDirectInformationTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_mMEDirectInformationTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  eNBDirectInformationTransfer
%%================================
'enc_eNBDirectInformationTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ENBDirectInformationTransfer'(Val);
'enc_eNBDirectInformationTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_eNBDirectInformationTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_eNBDirectInformationTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBDirectInformationTransfer'(Bytes, telltype);
'dec_eNBDirectInformationTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_eNBDirectInformationTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  writeReplaceWarning
%%================================
'enc_writeReplaceWarning'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_WriteReplaceWarningRequest'(Val);
'enc_writeReplaceWarning'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_WriteReplaceWarningResponse'(Val);
'enc_writeReplaceWarning'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_writeReplaceWarning'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_WriteReplaceWarningRequest'(Bytes, telltype);
'dec_writeReplaceWarning'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_WriteReplaceWarningResponse'(Bytes, telltype);
'dec_writeReplaceWarning'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  overloadStop
%%================================
'enc_overloadStop'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_OverloadStop'(Val);
'enc_overloadStop'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_overloadStop'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_overloadStop'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_OverloadStop'(Bytes, telltype);
'dec_overloadStop'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_overloadStop'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  overloadStart
%%================================
'enc_overloadStart'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_OverloadStart'(Val);
'enc_overloadStart'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_overloadStart'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_overloadStart'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_OverloadStart'(Bytes, telltype);
'dec_overloadStart'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_overloadStart'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  locationReport
%%================================
'enc_locationReport'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_LocationReport'(Val);
'enc_locationReport'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_locationReport'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_locationReport'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_LocationReport'(Bytes, telltype);
'dec_locationReport'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_locationReport'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  locationReportingFailureIndication
%%================================
'enc_locationReportingFailureIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_LocationReportingFailureIndication'(Val);
'enc_locationReportingFailureIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_locationReportingFailureIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_locationReportingFailureIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_LocationReportingFailureIndication'(Bytes, telltype);
'dec_locationReportingFailureIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_locationReportingFailureIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  locationReportingControl
%%================================
'enc_locationReportingControl'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_LocationReportingControl'(Val);
'enc_locationReportingControl'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_locationReportingControl'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_locationReportingControl'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_LocationReportingControl'(Bytes, telltype);
'dec_locationReportingControl'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_locationReportingControl'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  cellTrafficTrace
%%================================
'enc_cellTrafficTrace'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_CellTrafficTrace'(Val);
'enc_cellTrafficTrace'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_cellTrafficTrace'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_cellTrafficTrace'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_CellTrafficTrace'(Bytes, telltype);
'dec_cellTrafficTrace'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_cellTrafficTrace'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  traceFailureIndication
%%================================
'enc_traceFailureIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_TraceFailureIndication'(Val);
'enc_traceFailureIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_traceFailureIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_traceFailureIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_TraceFailureIndication'(Bytes, telltype);
'dec_traceFailureIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_traceFailureIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  traceStart
%%================================
'enc_traceStart'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_TraceStart'(Val);
'enc_traceStart'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_traceStart'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_traceStart'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_TraceStart'(Bytes, telltype);
'dec_traceStart'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_traceStart'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  deactivateTrace
%%================================
'enc_deactivateTrace'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_DeactivateTrace'(Val);
'enc_deactivateTrace'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_deactivateTrace'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_deactivateTrace'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_DeactivateTrace'(Bytes, telltype);
'dec_deactivateTrace'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_deactivateTrace'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  mMEStatusTransfer
%%================================
'enc_mMEStatusTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_MMEStatusTransfer'(Val);
'enc_mMEStatusTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_mMEStatusTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_mMEStatusTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEStatusTransfer'(Bytes, telltype);
'dec_mMEStatusTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_mMEStatusTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  eNBStatusTransfer
%%================================
'enc_eNBStatusTransfer'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ENBStatusTransfer'(Val);
'enc_eNBStatusTransfer'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_eNBStatusTransfer'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_eNBStatusTransfer'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBStatusTransfer'(Bytes, telltype);
'dec_eNBStatusTransfer'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_eNBStatusTransfer'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uEContextRelease
%%================================
'enc_uEContextRelease'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UEContextReleaseCommand'(Val);
'enc_uEContextRelease'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_UEContextReleaseComplete'(Val);
'enc_uEContextRelease'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uEContextRelease'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextReleaseCommand'(Bytes, telltype);
'dec_uEContextRelease'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextReleaseComplete'(Bytes, telltype);
'dec_uEContextRelease'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uECapabilityInfoIndication
%%================================
'enc_uECapabilityInfoIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UECapabilityInfoIndication'(Val);
'enc_uECapabilityInfoIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_uECapabilityInfoIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uECapabilityInfoIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UECapabilityInfoIndication'(Bytes, telltype);
'dec_uECapabilityInfoIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_uECapabilityInfoIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uEContextModification
%%================================
'enc_uEContextModification'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UEContextModificationRequest'(Val);
'enc_uEContextModification'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_UEContextModificationResponse'(Val);
'enc_uEContextModification'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_UEContextModificationFailure'(Val).


'dec_uEContextModification'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextModificationRequest'(Bytes, telltype);
'dec_uEContextModification'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextModificationResponse'(Bytes, telltype);
'dec_uEContextModification'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextModificationFailure'(Bytes, telltype).





%%================================
%%  uplinkS1cdma2000tunneling
%%================================
'enc_uplinkS1cdma2000tunneling'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UplinkS1cdma2000tunneling'(Val);
'enc_uplinkS1cdma2000tunneling'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_uplinkS1cdma2000tunneling'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uplinkS1cdma2000tunneling'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UplinkS1cdma2000tunneling'(Bytes, telltype);
'dec_uplinkS1cdma2000tunneling'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_uplinkS1cdma2000tunneling'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  downlinkS1cdma2000tunneling
%%================================
'enc_downlinkS1cdma2000tunneling'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_DownlinkS1cdma2000tunneling'(Val);
'enc_downlinkS1cdma2000tunneling'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_downlinkS1cdma2000tunneling'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_downlinkS1cdma2000tunneling'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_DownlinkS1cdma2000tunneling'(Bytes, telltype);
'dec_downlinkS1cdma2000tunneling'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_downlinkS1cdma2000tunneling'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  mMEConfigurationUpdate
%%================================
'enc_mMEConfigurationUpdate'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_MMEConfigurationUpdate'(Val);
'enc_mMEConfigurationUpdate'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_MMEConfigurationUpdateAcknowledge'(Val);
'enc_mMEConfigurationUpdate'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_MMEConfigurationUpdateFailure'(Val).


'dec_mMEConfigurationUpdate'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEConfigurationUpdate'(Bytes, telltype);
'dec_mMEConfigurationUpdate'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEConfigurationUpdateAcknowledge'(Bytes, telltype);
'dec_mMEConfigurationUpdate'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_MMEConfigurationUpdateFailure'(Bytes, telltype).





%%================================
%%  eNBConfigurationUpdate
%%================================
'enc_eNBConfigurationUpdate'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdate'(Val);
'enc_eNBConfigurationUpdate'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdateAcknowledge'(Val);
'enc_eNBConfigurationUpdate'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ENBConfigurationUpdateFailure'(Val).


'dec_eNBConfigurationUpdate'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdate'(Bytes, telltype);
'dec_eNBConfigurationUpdate'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdateAcknowledge'(Bytes, telltype);
'dec_eNBConfigurationUpdate'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ENBConfigurationUpdateFailure'(Bytes, telltype).





%%================================
%%  s1Setup
%%================================
'enc_s1Setup'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_S1SetupRequest'(Val);
'enc_s1Setup'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_S1SetupResponse'(Val);
'enc_s1Setup'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_S1SetupFailure'(Val).


'dec_s1Setup'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_S1SetupRequest'(Bytes, telltype);
'dec_s1Setup'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_S1SetupResponse'(Bytes, telltype);
'dec_s1Setup'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_S1SetupFailure'(Bytes, telltype).





%%================================
%%  errorIndication
%%================================
'enc_errorIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_ErrorIndication'(Val);
'enc_errorIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_errorIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_errorIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_ErrorIndication'(Bytes, telltype);
'dec_errorIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_errorIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  reset
%%================================
'enc_reset'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_Reset'(Val);
'enc_reset'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_ResetAcknowledge'(Val);
'enc_reset'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_reset'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_Reset'(Bytes, telltype);
'dec_reset'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_ResetAcknowledge'(Bytes, telltype);
'dec_reset'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  handoverCancel
%%================================
'enc_handoverCancel'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverCancel'(Val);
'enc_handoverCancel'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverCancelAcknowledge'(Val);
'enc_handoverCancel'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_handoverCancel'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverCancel'(Bytes, telltype);
'dec_handoverCancel'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverCancelAcknowledge'(Bytes, telltype);
'dec_handoverCancel'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  nASNonDeliveryIndication
%%================================
'enc_nASNonDeliveryIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_NASNonDeliveryIndication'(Val);
'enc_nASNonDeliveryIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_nASNonDeliveryIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_nASNonDeliveryIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_NASNonDeliveryIndication'(Bytes, telltype);
'dec_nASNonDeliveryIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_nASNonDeliveryIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uplinkNASTransport
%%================================
'enc_uplinkNASTransport'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UplinkNASTransport'(Val);
'enc_uplinkNASTransport'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_uplinkNASTransport'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uplinkNASTransport'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UplinkNASTransport'(Bytes, telltype);
'dec_uplinkNASTransport'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_uplinkNASTransport'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  initialUEMessage
%%================================
'enc_initialUEMessage'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_InitialUEMessage'(Val);
'enc_initialUEMessage'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_initialUEMessage'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_initialUEMessage'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_InitialUEMessage'(Bytes, telltype);
'dec_initialUEMessage'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_initialUEMessage'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  downlinkNASTransport
%%================================
'enc_downlinkNASTransport'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_DownlinkNASTransport'(Val);
'enc_downlinkNASTransport'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_downlinkNASTransport'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_downlinkNASTransport'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_DownlinkNASTransport'(Bytes, telltype);
'dec_downlinkNASTransport'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_downlinkNASTransport'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  paging
%%================================
'enc_paging'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_Paging'(Val);
'enc_paging'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_paging'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_paging'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_Paging'(Bytes, telltype);
'dec_paging'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_paging'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  uEContextReleaseRequest
%%================================
'enc_uEContextReleaseRequest'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_UEContextReleaseRequest'(Val);
'enc_uEContextReleaseRequest'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_uEContextReleaseRequest'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_uEContextReleaseRequest'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_UEContextReleaseRequest'(Bytes, telltype);
'dec_uEContextReleaseRequest'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_uEContextReleaseRequest'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  initialContextSetup
%%================================
'enc_initialContextSetup'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_InitialContextSetupRequest'(Val);
'enc_initialContextSetup'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_InitialContextSetupResponse'(Val);
'enc_initialContextSetup'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_InitialContextSetupFailure'(Val).


'dec_initialContextSetup'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_InitialContextSetupRequest'(Bytes, telltype);
'dec_initialContextSetup'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_InitialContextSetupResponse'(Bytes, telltype);
'dec_initialContextSetup'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_InitialContextSetupFailure'(Bytes, telltype).





%%================================
%%  e-RABReleaseIndication
%%================================
'enc_e-RABReleaseIndication'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_E-RABReleaseIndication'(Val);
'enc_e-RABReleaseIndication'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_e-RABReleaseIndication'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_e-RABReleaseIndication'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABReleaseIndication'(Bytes, telltype);
'dec_e-RABReleaseIndication'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_e-RABReleaseIndication'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  e-RABRelease
%%================================
'enc_e-RABRelease'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_E-RABReleaseCommand'(Val);
'enc_e-RABRelease'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_E-RABReleaseResponse'(Val);
'enc_e-RABRelease'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_e-RABRelease'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABReleaseCommand'(Bytes, telltype);
'dec_e-RABRelease'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABReleaseResponse'(Bytes, telltype);
'dec_e-RABRelease'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  e-RABModify
%%================================
'enc_e-RABModify'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_E-RABModifyRequest'(Val);
'enc_e-RABModify'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_E-RABModifyResponse'(Val);
'enc_e-RABModify'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_e-RABModify'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABModifyRequest'(Bytes, telltype);
'dec_e-RABModify'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABModifyResponse'(Bytes, telltype);
'dec_e-RABModify'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  e-RABSetup
%%================================
'enc_e-RABSetup'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_E-RABSetupRequest'(Val);
'enc_e-RABSetup'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_E-RABSetupResponse'(Val);
'enc_e-RABSetup'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_e-RABSetup'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABSetupRequest'(Bytes, telltype);
'dec_e-RABSetup'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_E-RABSetupResponse'(Bytes, telltype);
'dec_e-RABSetup'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  pathSwitchRequest
%%================================
'enc_pathSwitchRequest'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_PathSwitchRequest'(Val);
'enc_pathSwitchRequest'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_PathSwitchRequestAcknowledge'(Val);
'enc_pathSwitchRequest'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_PathSwitchRequestFailure'(Val).


'dec_pathSwitchRequest'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_PathSwitchRequest'(Bytes, telltype);
'dec_pathSwitchRequest'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_PathSwitchRequestAcknowledge'(Bytes, telltype);
'dec_pathSwitchRequest'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_PathSwitchRequestFailure'(Bytes, telltype).





%%================================
%%  handoverNotification
%%================================
'enc_handoverNotification'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverNotify'(Val);
'enc_handoverNotification'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}];
'enc_handoverNotification'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   [{octets,Val}].


'dec_handoverNotification'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverNotify'(Bytes, telltype);
'dec_handoverNotification'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]};
'dec_handoverNotification'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   {Bytes,[]}.





%%================================
%%  handoverResourceAllocation
%%================================
'enc_handoverResourceAllocation'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverRequest'(Val);
'enc_handoverResourceAllocation'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverRequestAcknowledge'(Val);
'enc_handoverResourceAllocation'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverFailure'(Val).


'dec_handoverResourceAllocation'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverRequest'(Bytes, telltype);
'dec_handoverResourceAllocation'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverRequestAcknowledge'(Bytes, telltype);
'dec_handoverResourceAllocation'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverFailure'(Bytes, telltype).





%%================================
%%  handoverPreparation
%%================================
'enc_handoverPreparation'('InitiatingMessage',Val,_RestPrimFieldName) ->
   'enc_HandoverRequired'(Val);
'enc_handoverPreparation'('SuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverCommand'(Val);
'enc_handoverPreparation'('UnsuccessfulOutcome',Val,_RestPrimFieldName) ->
   'enc_HandoverPreparationFailure'(Val).


'dec_handoverPreparation'('InitiatingMessage',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverRequired'(Bytes, telltype);
'dec_handoverPreparation'('SuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverCommand'(Bytes, telltype);
'dec_handoverPreparation'('UnsuccessfulOutcome',Bytes,_,_RestPrimFieldName) ->
   'dec_HandoverPreparationFailure'(Bytes, telltype).





%%================================
%%  S1AP-ELEMENTARY-PROCEDURES-CLASS-2
%%================================
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,42) ->
    fun 'enc_cellTrafficTrace'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,26) ->
    fun 'enc_deactivateTrace'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,11) ->
    fun 'enc_downlinkNASTransport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,19) ->
    fun 'enc_downlinkS1cdma2000tunneling'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,8) ->
    fun 'enc_e-RABReleaseIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,40) ->
    fun 'enc_eNBConfigurationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,37) ->
    fun 'enc_eNBDirectInformationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,24) ->
    fun 'enc_eNBStatusTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,15) ->
    fun 'enc_errorIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,2) ->
    fun 'enc_handoverNotification'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,12) ->
    fun 'enc_initialUEMessage'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,33) ->
    fun 'enc_locationReport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,31) ->
    fun 'enc_locationReportingControl'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,32) ->
    fun 'enc_locationReportingFailureIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,41) ->
    fun 'enc_mMEConfigurationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,38) ->
    fun 'enc_mMEDirectInformationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,25) ->
    fun 'enc_mMEStatusTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,16) ->
    fun 'enc_nASNonDeliveryIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,34) ->
    fun 'enc_overloadStart'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,35) ->
    fun 'enc_overloadStop'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,10) ->
    fun 'enc_paging'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,39) ->
    fun 'enc_privateMessage'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,28) ->
    fun 'enc_traceFailureIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,27) ->
    fun 'enc_traceStart'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,22) ->
    fun 'enc_uECapabilityInfoIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,18) ->
    fun 'enc_uEContextReleaseRequest'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,13) ->
    fun 'enc_uplinkNASTransport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,20) ->
    fun 'enc_uplinkS1cdma2000tunneling'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,42) ->
    fun 'dec_cellTrafficTrace'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,26) ->
    fun 'dec_deactivateTrace'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,11) ->
    fun 'dec_downlinkNASTransport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,19) ->
    fun 'dec_downlinkS1cdma2000tunneling'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,8) ->
    fun 'dec_e-RABReleaseIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,40) ->
    fun 'dec_eNBConfigurationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,37) ->
    fun 'dec_eNBDirectInformationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,24) ->
    fun 'dec_eNBStatusTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,15) ->
    fun 'dec_errorIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,2) ->
    fun 'dec_handoverNotification'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,12) ->
    fun 'dec_initialUEMessage'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,33) ->
    fun 'dec_locationReport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,31) ->
    fun 'dec_locationReportingControl'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,32) ->
    fun 'dec_locationReportingFailureIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,41) ->
    fun 'dec_mMEConfigurationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,38) ->
    fun 'dec_mMEDirectInformationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,25) ->
    fun 'dec_mMEStatusTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,16) ->
    fun 'dec_nASNonDeliveryIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,34) ->
    fun 'dec_overloadStart'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,35) ->
    fun 'dec_overloadStop'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,10) ->
    fun 'dec_paging'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,39) ->
    fun 'dec_privateMessage'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,28) ->
    fun 'dec_traceFailureIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,27) ->
    fun 'dec_traceStart'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,22) ->
    fun 'dec_uECapabilityInfoIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,18) ->
    fun 'dec_uEContextReleaseRequest'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,13) ->
    fun 'dec_uplinkNASTransport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(procedureCode,20) ->
    fun 'dec_uplinkS1cdma2000tunneling'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-2'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1AP-ELEMENTARY-PROCEDURES-CLASS-1
%%================================
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,6) ->
    fun 'enc_e-RABModify'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,7) ->
    fun 'enc_e-RABRelease'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,5) ->
    fun 'enc_e-RABSetup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,29) ->
    fun 'enc_eNBConfigurationUpdate'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,4) ->
    fun 'enc_handoverCancel'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,0) ->
    fun 'enc_handoverPreparation'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,1) ->
    fun 'enc_handoverResourceAllocation'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,9) ->
    fun 'enc_initialContextSetup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,30) ->
    fun 'enc_mMEConfigurationUpdate'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,3) ->
    fun 'enc_pathSwitchRequest'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,14) ->
    fun 'enc_reset'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,17) ->
    fun 'enc_s1Setup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,21) ->
    fun 'enc_uEContextModification'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,23) ->
    fun 'enc_uEContextRelease'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,36) ->
    fun 'enc_writeReplaceWarning'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,6) ->
    fun 'dec_e-RABModify'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,7) ->
    fun 'dec_e-RABRelease'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,5) ->
    fun 'dec_e-RABSetup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,29) ->
    fun 'dec_eNBConfigurationUpdate'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,4) ->
    fun 'dec_handoverCancel'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,0) ->
    fun 'dec_handoverPreparation'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,1) ->
    fun 'dec_handoverResourceAllocation'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,9) ->
    fun 'dec_initialContextSetup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,30) ->
    fun 'dec_mMEConfigurationUpdate'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,3) ->
    fun 'dec_pathSwitchRequest'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,14) ->
    fun 'dec_reset'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,17) ->
    fun 'dec_s1Setup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,21) ->
    fun 'dec_uEContextModification'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,23) ->
    fun 'dec_uEContextRelease'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(procedureCode,36) ->
    fun 'dec_writeReplaceWarning'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES-CLASS-1'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1AP-ELEMENTARY-PROCEDURES
%%================================
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,42) ->
    fun 'enc_cellTrafficTrace'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,26) ->
    fun 'enc_deactivateTrace'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,11) ->
    fun 'enc_downlinkNASTransport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,19) ->
    fun 'enc_downlinkS1cdma2000tunneling'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,6) ->
    fun 'enc_e-RABModify'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,7) ->
    fun 'enc_e-RABRelease'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,8) ->
    fun 'enc_e-RABReleaseIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,5) ->
    fun 'enc_e-RABSetup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,40) ->
    fun 'enc_eNBConfigurationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,29) ->
    fun 'enc_eNBConfigurationUpdate'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,37) ->
    fun 'enc_eNBDirectInformationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,24) ->
    fun 'enc_eNBStatusTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,15) ->
    fun 'enc_errorIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,4) ->
    fun 'enc_handoverCancel'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,2) ->
    fun 'enc_handoverNotification'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,0) ->
    fun 'enc_handoverPreparation'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,1) ->
    fun 'enc_handoverResourceAllocation'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,9) ->
    fun 'enc_initialContextSetup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,12) ->
    fun 'enc_initialUEMessage'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,33) ->
    fun 'enc_locationReport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,31) ->
    fun 'enc_locationReportingControl'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,32) ->
    fun 'enc_locationReportingFailureIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,41) ->
    fun 'enc_mMEConfigurationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,30) ->
    fun 'enc_mMEConfigurationUpdate'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,38) ->
    fun 'enc_mMEDirectInformationTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,25) ->
    fun 'enc_mMEStatusTransfer'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,16) ->
    fun 'enc_nASNonDeliveryIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,34) ->
    fun 'enc_overloadStart'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,35) ->
    fun 'enc_overloadStop'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,10) ->
    fun 'enc_paging'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,3) ->
    fun 'enc_pathSwitchRequest'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,39) ->
    fun 'enc_privateMessage'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,14) ->
    fun 'enc_reset'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,17) ->
    fun 'enc_s1Setup'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,28) ->
    fun 'enc_traceFailureIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,27) ->
    fun 'enc_traceStart'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,22) ->
    fun 'enc_uECapabilityInfoIndication'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,21) ->
    fun 'enc_uEContextModification'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,23) ->
    fun 'enc_uEContextRelease'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,18) ->
    fun 'enc_uEContextReleaseRequest'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,13) ->
    fun 'enc_uplinkNASTransport'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,20) ->
    fun 'enc_uplinkS1cdma2000tunneling'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,36) ->
    fun 'enc_writeReplaceWarning'/3;
'getenc_S1AP-ELEMENTARY-PROCEDURES'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,42) ->
    fun 'dec_cellTrafficTrace'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,26) ->
    fun 'dec_deactivateTrace'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,11) ->
    fun 'dec_downlinkNASTransport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,19) ->
    fun 'dec_downlinkS1cdma2000tunneling'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,6) ->
    fun 'dec_e-RABModify'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,7) ->
    fun 'dec_e-RABRelease'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,8) ->
    fun 'dec_e-RABReleaseIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,5) ->
    fun 'dec_e-RABSetup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,40) ->
    fun 'dec_eNBConfigurationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,29) ->
    fun 'dec_eNBConfigurationUpdate'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,37) ->
    fun 'dec_eNBDirectInformationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,24) ->
    fun 'dec_eNBStatusTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,15) ->
    fun 'dec_errorIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,4) ->
    fun 'dec_handoverCancel'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,2) ->
    fun 'dec_handoverNotification'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,0) ->
    fun 'dec_handoverPreparation'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,1) ->
    fun 'dec_handoverResourceAllocation'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,9) ->
    fun 'dec_initialContextSetup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,12) ->
    fun 'dec_initialUEMessage'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,33) ->
    fun 'dec_locationReport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,31) ->
    fun 'dec_locationReportingControl'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,32) ->
    fun 'dec_locationReportingFailureIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,41) ->
    fun 'dec_mMEConfigurationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,30) ->
    fun 'dec_mMEConfigurationUpdate'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,38) ->
    fun 'dec_mMEDirectInformationTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,25) ->
    fun 'dec_mMEStatusTransfer'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,16) ->
    fun 'dec_nASNonDeliveryIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,34) ->
    fun 'dec_overloadStart'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,35) ->
    fun 'dec_overloadStop'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,10) ->
    fun 'dec_paging'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,3) ->
    fun 'dec_pathSwitchRequest'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,39) ->
    fun 'dec_privateMessage'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,14) ->
    fun 'dec_reset'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,17) ->
    fun 'dec_s1Setup'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,28) ->
    fun 'dec_traceFailureIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,27) ->
    fun 'dec_traceStart'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,22) ->
    fun 'dec_uECapabilityInfoIndication'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,21) ->
    fun 'dec_uEContextModification'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,23) ->
    fun 'dec_uEContextRelease'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,18) ->
    fun 'dec_uEContextReleaseRequest'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,13) ->
    fun 'dec_uplinkNASTransport'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,20) ->
    fun 'dec_uplinkS1cdma2000tunneling'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(procedureCode,36) ->
    fun 'dec_writeReplaceWarning'/4;
'getdec_S1AP-ELEMENTARY-PROCEDURES'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  X2TNLConfigurationInfo-ExtIEs
%%================================
'getenc_X2TNLConfigurationInfo-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_X2TNLConfigurationInfo-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UESecurityCapabilities-ExtIEs
%%================================
'getenc_UESecurityCapabilities-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UESecurityCapabilities-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UE-associatedLogicalS1-ConnectionItemExtIEs
%%================================
'getenc_UE-associatedLogicalS1-ConnectionItemExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UE-associatedLogicalS1-ConnectionItemExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UE-S1AP-ID-pair-ExtIEs
%%================================
'getenc_UE-S1AP-ID-pair-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UE-S1AP-ID-pair-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEAggregate-MaximumBitrates-ExtIEs
%%================================
'getenc_UEAggregate-MaximumBitrates-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEAggregate-MaximumBitrates-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TraceActivation-ExtIEs
%%================================
'getenc_TraceActivation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TraceActivation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs
%%================================
'getenc_TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TargeteNB-ToSourceeNB-TransparentContainer-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TargetRNC-ID-ExtIEs
%%================================
'getenc_TargetRNC-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TargetRNC-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TargeteNB-ID-ExtIEs
%%================================
'getenc_TargeteNB-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TargeteNB-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CompletedCellinTAI-Item-ExtIEs
%%================================
'getenc_CompletedCellinTAI-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CompletedCellinTAI-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TAI-Broadcast-Item-ExtIEs
%%================================
'getenc_TAI-Broadcast-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TAI-Broadcast-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TAI-ExtIEs
%%================================
'getenc_TAI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TAI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S-TMSI-ExtIEs
%%================================
'getenc_S-TMSI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S-TMSI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SupportedTAs-Item-ExtIEs
%%================================
'getenc_SupportedTAs-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SupportedTAs-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ServedGUMMEIsItem-ExtIEs
%%================================
'getenc_ServedGUMMEIsItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ServedGUMMEIsItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs
%%================================
'getenc_SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SourceeNB-ToTargeteNB-TransparentContainer-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SourceeNB-ID-ExtIEs
%%================================
'getenc_SourceeNB-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SourceeNB-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SONConfigurationTransfer-ExtIEs
%%================================
'getenc_SONConfigurationTransfer-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SONConfigurationTransfer-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SONInformationReply-ExtIEs
%%================================
'getenc_SONInformationReply-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SONInformationReply-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  SecurityContext-ExtIEs
%%================================
'getenc_SecurityContext-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_SecurityContext-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  RIMTransfer-ExtIEs
%%================================
'getenc_RIMTransfer-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_RIMTransfer-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  RequestType-ExtIEs
%%================================
'getenc_RequestType-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_RequestType-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LastVisitedEUTRANCellInformation-ExtIEs
%%================================
'getenc_LastVisitedEUTRANCellInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LastVisitedEUTRANCellInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LAI-ExtIEs
%%================================
'getenc_LAI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LAI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRestrictionList-ExtIEs
%%================================
'getenc_HandoverRestrictionList-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRestrictionList-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GUMMEI-ExtIEs
%%================================
'getenc_GUMMEI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GUMMEI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GBR-QosInformation-ExtIEs
%%================================
'getenc_GBR-QosInformation-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GBR-QosInformation-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ForbiddenLAs-Item-ExtIEs
%%================================
'getenc_ForbiddenLAs-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ForbiddenLAs-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ForbiddenTAs-Item-ExtIEs
%%================================
'getenc_ForbiddenTAs-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ForbiddenTAs-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  EUTRAN-CGI-ExtIEs
%%================================
'getenc_EUTRAN-CGI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_EUTRAN-CGI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABQoSParameters-ExtIEs
%%================================
'getenc_E-RABQoSParameters-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABQoSParameters-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABItem-ExtIEs
%%================================
'getenc_E-RABItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABItemIEs
%%================================
'getenc_E-RABItemIEs'(id,35) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABItem'(Val)
      end
   end;
'getenc_E-RABItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABItemIEs'(id,35) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABItem'(Val, telltype)
      end
   end;
'getdec_E-RABItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABInformationListItem-ExtIEs
%%================================
'getenc_E-RABInformationListItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABInformationListItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABInformationListIEs
%%================================
'getenc_E-RABInformationListIEs'(id,78) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABInformationListItem'(Val)
      end
   end;
'getenc_E-RABInformationListIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABInformationListIEs'(id,78) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABInformationListItem'(Val, telltype)
      end
   end;
'getdec_E-RABInformationListIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENB-StatusTransfer-TransparentContainer-ExtIEs
%%================================
'getenc_ENB-StatusTransfer-TransparentContainer-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENB-StatusTransfer-TransparentContainer-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GlobalENB-ID-ExtIEs
%%================================
'getenc_GlobalENB-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GlobalENB-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  GERAN-Cell-ID-ExtIEs
%%================================
'getenc_GERAN-Cell-ID-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_GERAN-Cell-ID-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CompletedCellinEAI-Item-ExtIEs
%%================================
'getenc_CompletedCellinEAI-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CompletedCellinEAI-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  EmergencyAreaID-Broadcast-Item-ExtIEs
%%================================
'getenc_EmergencyAreaID-Broadcast-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_EmergencyAreaID-Broadcast-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CriticalityDiagnostics-IE-Item-ExtIEs
%%================================
'getenc_CriticalityDiagnostics-IE-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CriticalityDiagnostics-IE-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CriticalityDiagnostics-ExtIEs
%%================================
'getenc_CriticalityDiagnostics-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CriticalityDiagnostics-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  COUNTvalue-ExtIEs
%%================================
'getenc_COUNTvalue-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_COUNTvalue-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CSG-IdList-Item-ExtIEs
%%================================
'getenc_CSG-IdList-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CSG-IdList-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CGI-ExtIEs
%%================================
'getenc_CGI-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CGI-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellType-ExtIEs
%%================================
'getenc_CellType-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellType-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  Cdma2000OneXSRVCCInfo-ExtIEs
%%================================
'getenc_Cdma2000OneXSRVCCInfo-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_Cdma2000OneXSRVCCInfo-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellID-Broadcast-Item-ExtIEs
%%================================
'getenc_CellID-Broadcast-Item-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellID-Broadcast-Item-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  Bearers-SubjectToStatusTransfer-ItemExtIEs
%%================================
'getenc_Bearers-SubjectToStatusTransfer-ItemExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_Bearers-SubjectToStatusTransfer-ItemExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  Bearers-SubjectToStatusTransfer-ItemIEs
%%================================
'getenc_Bearers-SubjectToStatusTransfer-ItemIEs'(id,89) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Bearers-SubjectToStatusTransfer-Item'(Val)
      end
   end;
'getenc_Bearers-SubjectToStatusTransfer-ItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_Bearers-SubjectToStatusTransfer-ItemIEs'(id,89) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Bearers-SubjectToStatusTransfer-Item'(Val, telltype)
      end
   end;
'getdec_Bearers-SubjectToStatusTransfer-ItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  AllocationAndRetentionPriority-ExtIEs
%%================================
'getenc_AllocationAndRetentionPriority-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_AllocationAndRetentionPriority-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEConfigurationTransferIEs
%%================================
'getenc_MMEConfigurationTransferIEs'(id,130) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SONConfigurationTransfer'(Val)
      end
   end;
'getenc_MMEConfigurationTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEConfigurationTransferIEs'(id,130) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SONConfigurationTransfer'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationTransferIEs
%%================================
'getenc_ENBConfigurationTransferIEs'(id,129) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SONConfigurationTransfer'(Val)
      end
   end;
'getenc_ENBConfigurationTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationTransferIEs'(id,129) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SONConfigurationTransfer'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEDirectInformationTransferIEs
%%================================
'getenc_MMEDirectInformationTransferIEs'(id,122) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Inter-SystemInformationTransferType'(Val)
      end
   end;
'getenc_MMEDirectInformationTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEDirectInformationTransferIEs'(id,122) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Inter-SystemInformationTransferType'(Val, telltype)
      end
   end;
'getdec_MMEDirectInformationTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBDirectInformationTransferIEs
%%================================
'getenc_ENBDirectInformationTransferIEs'(id,121) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Inter-SystemInformationTransferType'(Val)
      end
   end;
'getenc_ENBDirectInformationTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBDirectInformationTransferIEs'(id,121) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Inter-SystemInformationTransferType'(Val, telltype)
      end
   end;
'getdec_ENBDirectInformationTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  WriteReplaceWarningResponseIEs
%%================================
'getenc_WriteReplaceWarningResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_WriteReplaceWarningResponseIEs'(id,111) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MessageIdentifier'(Val)
      end
   end;
'getenc_WriteReplaceWarningResponseIEs'(id,112) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SerialNumber'(Val)
      end
   end;
'getenc_WriteReplaceWarningResponseIEs'(id,120) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_BroadcastCompletedAreaList'(Val)
      end
   end;
'getenc_WriteReplaceWarningResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_WriteReplaceWarningResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningResponseIEs'(id,111) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MessageIdentifier'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningResponseIEs'(id,112) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SerialNumber'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningResponseIEs'(id,120) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_BroadcastCompletedAreaList'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  WriteReplaceWarningRequestIEs
%%================================
'getenc_WriteReplaceWarningRequestIEs'(id,111) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MessageIdentifier'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,112) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SerialNumber'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,113) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningAreaList'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,114) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RepetitionPeriod'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,115) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NumberofBroadcastRequest'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,116) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningType'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,117) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningSecurityInfo'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,118) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_DataCodingScheme'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(id,119) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningMessageContents'(Val)
      end
   end;
'getenc_WriteReplaceWarningRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_WriteReplaceWarningRequestIEs'(id,111) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MessageIdentifier'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,112) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SerialNumber'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,113) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningAreaList'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,114) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RepetitionPeriod'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,115) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NumberofBroadcastRequest'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,116) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningType'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,117) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningSecurityInfo'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,118) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_DataCodingScheme'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(id,119) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningMessageContents'(Val, telltype)
      end
   end;
'getdec_WriteReplaceWarningRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  OverloadStopIEs
%%================================
'getenc_OverloadStopIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_OverloadStopIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  OverloadStartIEs
%%================================
'getenc_OverloadStartIEs'(id,101) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_OverloadResponse'(Val)
      end
   end;
'getenc_OverloadStartIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_OverloadStartIEs'(id,101) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_OverloadResponse'(Val, telltype)
      end
   end;
'getdec_OverloadStartIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LocationReportIEs
%%================================
'getenc_LocationReportIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportIEs'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_LocationReportIEs'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_LocationReportIEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_LocationReportIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LocationReportIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportIEs'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_LocationReportIEs'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_LocationReportIEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_LocationReportIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LocationReportingFailureIndicationIEs
%%================================
'getenc_LocationReportingFailureIndicationIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportingFailureIndicationIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_LocationReportingFailureIndicationIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportingFailureIndicationIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LocationReportingFailureIndicationIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportingFailureIndicationIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_LocationReportingFailureIndicationIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportingFailureIndicationIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  LocationReportingControlIEs
%%================================
'getenc_LocationReportingControlIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportingControlIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_LocationReportingControlIEs'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_LocationReportingControlIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_LocationReportingControlIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportingControlIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_LocationReportingControlIEs'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_LocationReportingControlIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  CellTrafficTraceIEs
%%================================
'getenc_CellTrafficTraceIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_CellTrafficTraceIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_CellTrafficTraceIEs'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_CellTrafficTraceIEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_CellTrafficTraceIEs'(id,131) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TransportLayerAddress'(Val)
      end
   end;
'getenc_CellTrafficTraceIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_CellTrafficTraceIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_CellTrafficTraceIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_CellTrafficTraceIEs'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_CellTrafficTraceIEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_CellTrafficTraceIEs'(id,131) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TransportLayerAddress'(Val, telltype)
      end
   end;
'getdec_CellTrafficTraceIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  DeactivateTraceIEs
%%================================
'getenc_DeactivateTraceIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DeactivateTraceIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DeactivateTraceIEs'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_DeactivateTraceIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_DeactivateTraceIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DeactivateTraceIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DeactivateTraceIEs'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_DeactivateTraceIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TraceFailureIndicationIEs
%%================================
'getenc_TraceFailureIndicationIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_TraceFailureIndicationIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_TraceFailureIndicationIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_TraceFailureIndicationIEs'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_TraceFailureIndicationIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TraceFailureIndicationIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_TraceFailureIndicationIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_TraceFailureIndicationIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_TraceFailureIndicationIEs'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_TraceFailureIndicationIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TraceStartIEs
%%================================
'getenc_TraceStartIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_TraceStartIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_TraceStartIEs'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_TraceStartIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TraceStartIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_TraceStartIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_TraceStartIEs'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_TraceStartIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEStatusTransferIEs
%%================================
'getenc_MMEStatusTransferIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_MMEStatusTransferIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_MMEStatusTransferIEs'(id,90) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-StatusTransfer-TransparentContainer'(Val)
      end
   end;
'getenc_MMEStatusTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEStatusTransferIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_MMEStatusTransferIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_MMEStatusTransferIEs'(id,90) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-StatusTransfer-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_MMEStatusTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBStatusTransferIEs
%%================================
'getenc_ENBStatusTransferIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_ENBStatusTransferIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_ENBStatusTransferIEs'(id,90) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-StatusTransfer-TransparentContainer'(Val)
      end
   end;
'getenc_ENBStatusTransferIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBStatusTransferIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_ENBStatusTransferIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_ENBStatusTransferIEs'(id,90) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-StatusTransfer-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_ENBStatusTransferIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UECapabilityInfoIndicationIEs
%%================================
'getenc_UECapabilityInfoIndicationIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UECapabilityInfoIndicationIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UECapabilityInfoIndicationIEs'(id,74) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UERadioCapability'(Val)
      end
   end;
'getenc_UECapabilityInfoIndicationIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UECapabilityInfoIndicationIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UECapabilityInfoIndicationIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UECapabilityInfoIndicationIEs'(id,74) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UERadioCapability'(Val, telltype)
      end
   end;
'getdec_UECapabilityInfoIndicationIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UplinkS1cdma2000tunnelingIEs
%%================================
'getenc_UplinkS1cdma2000tunnelingIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,70) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000PDU'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,71) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000RATType'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,72) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000SectorID'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,84) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000HORequiredIndication'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,97) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000OneXRAND'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(id,102) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000OneXSRVCCInfo'(Val)
      end
   end;
'getenc_UplinkS1cdma2000tunnelingIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UplinkS1cdma2000tunnelingIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,70) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000PDU'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,71) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000RATType'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,72) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000SectorID'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,84) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000HORequiredIndication'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,97) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000OneXRAND'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(id,102) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000OneXSRVCCInfo'(Val, telltype)
      end
   end;
'getdec_UplinkS1cdma2000tunnelingIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  DownlinkS1cdma2000tunnelingIEs
%%================================
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSubjecttoDataForwardingList'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,70) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000PDU'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,71) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000RATType'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(id,83) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000HOStatus'(Val)
      end
   end;
'getenc_DownlinkS1cdma2000tunnelingIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_DownlinkS1cdma2000tunnelingIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSubjecttoDataForwardingList'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(id,70) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000PDU'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(id,71) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000RATType'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(id,83) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000HOStatus'(Val, telltype)
      end
   end;
'getdec_DownlinkS1cdma2000tunnelingIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEConfigurationUpdateFailureIEs
%%================================
'getenc_MMEConfigurationUpdateFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateFailureIEs'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEConfigurationUpdateFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateFailureIEs'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEConfigurationUpdateAcknowledgeIEs
%%================================
'getenc_MMEConfigurationUpdateAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEConfigurationUpdateAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  MMEConfigurationUpdateIEs
%%================================
'getenc_MMEConfigurationUpdateIEs'(id,61) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MMEname'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateIEs'(id,87) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RelativeMMECapacity'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateIEs'(id,105) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedGUMMEIs'(Val)
      end
   end;
'getenc_MMEConfigurationUpdateIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_MMEConfigurationUpdateIEs'(id,61) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MMEname'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateIEs'(id,87) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RelativeMMECapacity'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateIEs'(id,105) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedGUMMEIs'(Val, telltype)
      end
   end;
'getdec_MMEConfigurationUpdateIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdateFailureIEs
%%================================
'getenc_ENBConfigurationUpdateFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailureIEs'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdateFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailureIEs'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdateAcknowledgeIEs
%%================================
'getenc_ENBConfigurationUpdateAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdateAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ENBConfigurationUpdateIEs
%%================================
'getenc_ENBConfigurationUpdateIEs'(id,60) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENBname'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateIEs'(id,64) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SupportedTAs'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateIEs'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateIEs'(id,137) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_ENBConfigurationUpdateIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ENBConfigurationUpdateIEs'(id,60) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENBname'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateIEs'(id,64) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SupportedTAs'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateIEs'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateIEs'(id,137) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_ENBConfigurationUpdateIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1SetupFailureIEs
%%================================
'getenc_S1SetupFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_S1SetupFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_S1SetupFailureIEs'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_S1SetupFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1SetupFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_S1SetupFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_S1SetupFailureIEs'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_S1SetupFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1SetupResponseIEs
%%================================
'getenc_S1SetupResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_S1SetupResponseIEs'(id,61) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MMEname'(Val)
      end
   end;
'getenc_S1SetupResponseIEs'(id,87) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RelativeMMECapacity'(Val)
      end
   end;
'getenc_S1SetupResponseIEs'(id,105) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedGUMMEIs'(Val)
      end
   end;
'getenc_S1SetupResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1SetupResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_S1SetupResponseIEs'(id,61) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MMEname'(Val, telltype)
      end
   end;
'getdec_S1SetupResponseIEs'(id,87) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RelativeMMECapacity'(Val, telltype)
      end
   end;
'getdec_S1SetupResponseIEs'(id,105) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedGUMMEIs'(Val, telltype)
      end
   end;
'getdec_S1SetupResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  S1SetupRequestIEs
%%================================
'getenc_S1SetupRequestIEs'(id,59) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Global-ENB-ID'(Val)
      end
   end;
'getenc_S1SetupRequestIEs'(id,60) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENBname'(Val)
      end
   end;
'getenc_S1SetupRequestIEs'(id,64) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SupportedTAs'(Val)
      end
   end;
'getenc_S1SetupRequestIEs'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_S1SetupRequestIEs'(id,137) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_S1SetupRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_S1SetupRequestIEs'(id,59) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Global-ENB-ID'(Val, telltype)
      end
   end;
'getdec_S1SetupRequestIEs'(id,60) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENBname'(Val, telltype)
      end
   end;
'getdec_S1SetupRequestIEs'(id,64) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SupportedTAs'(Val, telltype)
      end
   end;
'getdec_S1SetupRequestIEs'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_S1SetupRequestIEs'(id,137) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_S1SetupRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ErrorIndicationIEs
%%================================
'getenc_ErrorIndicationIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_ErrorIndicationIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ErrorIndicationIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_ErrorIndicationIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ErrorIndicationIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ErrorIndicationIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_ErrorIndicationIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ErrorIndicationIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_ErrorIndicationIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ErrorIndicationIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UE-associatedLogicalS1-ConnectionItemResAck
%%================================
'getenc_UE-associatedLogicalS1-ConnectionItemResAck'(id,91) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionItem'(Val)
      end
   end;
'getenc_UE-associatedLogicalS1-ConnectionItemResAck'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UE-associatedLogicalS1-ConnectionItemResAck'(id,91) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionItem'(Val, telltype)
      end
   end;
'getdec_UE-associatedLogicalS1-ConnectionItemResAck'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResetAcknowledgeIEs
%%================================
'getenc_ResetAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_ResetAcknowledgeIEs'(id,93) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionListResAck'(Val)
      end
   end;
'getenc_ResetAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResetAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_ResetAcknowledgeIEs'(id,93) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionListResAck'(Val, telltype)
      end
   end;
'getdec_ResetAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UE-associatedLogicalS1-ConnectionItemRes
%%================================
'getenc_UE-associatedLogicalS1-ConnectionItemRes'(id,91) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionItem'(Val)
      end
   end;
'getenc_UE-associatedLogicalS1-ConnectionItemRes'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UE-associatedLogicalS1-ConnectionItemRes'(id,91) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionItem'(Val, telltype)
      end
   end;
'getdec_UE-associatedLogicalS1-ConnectionItemRes'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  ResetIEs
%%================================
'getenc_ResetIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_ResetIEs'(id,92) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ResetType'(Val)
      end
   end;
'getenc_ResetIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_ResetIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_ResetIEs'(id,92) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ResetType'(Val, telltype)
      end
   end;
'getdec_ResetIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  NASNonDeliveryIndication-IEs
%%================================
'getenc_NASNonDeliveryIndication-IEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_NASNonDeliveryIndication-IEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_NASNonDeliveryIndication-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_NASNonDeliveryIndication-IEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_NASNonDeliveryIndication-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_NASNonDeliveryIndication-IEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_NASNonDeliveryIndication-IEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_NASNonDeliveryIndication-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_NASNonDeliveryIndication-IEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_NASNonDeliveryIndication-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UplinkNASTransport-IEs
%%================================
'getenc_UplinkNASTransport-IEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UplinkNASTransport-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UplinkNASTransport-IEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_UplinkNASTransport-IEs'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_UplinkNASTransport-IEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_UplinkNASTransport-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UplinkNASTransport-IEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UplinkNASTransport-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UplinkNASTransport-IEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_UplinkNASTransport-IEs'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_UplinkNASTransport-IEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_UplinkNASTransport-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  InitialUEMessage-IEs
%%================================
'getenc_InitialUEMessage-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,75) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUMMEI'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,96) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_S-TMSI'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,127) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-Id'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(id,134) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RRC-Establishment-Cause'(Val)
      end
   end;
'getenc_InitialUEMessage-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_InitialUEMessage-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,75) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUMMEI'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,96) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_S-TMSI'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,127) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-Id'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(id,134) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RRC-Establishment-Cause'(Val, telltype)
      end
   end;
'getdec_InitialUEMessage-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  DownlinkNASTransport-IEs
%%================================
'getenc_DownlinkNASTransport-IEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DownlinkNASTransport-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_DownlinkNASTransport-IEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_DownlinkNASTransport-IEs'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_DownlinkNASTransport-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_DownlinkNASTransport-IEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DownlinkNASTransport-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_DownlinkNASTransport-IEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_DownlinkNASTransport-IEs'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_DownlinkNASTransport-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextModificationFailureIEs
%%================================
'getenc_UEContextModificationFailureIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_UEContextModificationFailureIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_UEContextModificationFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextModificationFailureIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_UEContextModificationFailureIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_UEContextModificationFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextModificationResponseIEs
%%================================
'getenc_UEContextModificationResponseIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationResponseIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_UEContextModificationResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextModificationResponseIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationResponseIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_UEContextModificationResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextModificationRequestIEs
%%================================
'getenc_UEContextModificationRequestIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(id,73) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityKey'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(id,106) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SubscriberProfileIDforRFP'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(id,108) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSFallbackIndicator'(Val)
      end
   end;
'getenc_UEContextModificationRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextModificationRequestIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(id,73) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityKey'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(id,106) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SubscriberProfileIDforRFP'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(id,108) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSFallbackIndicator'(Val, telltype)
      end
   end;
'getdec_UEContextModificationRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextReleaseComplete-IEs
%%================================
'getenc_UEContextReleaseComplete-IEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextReleaseComplete-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextReleaseComplete-IEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_UEContextReleaseComplete-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextReleaseComplete-IEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseComplete-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseComplete-IEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseComplete-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextReleaseCommand-IEs
%%================================
'getenc_UEContextReleaseCommand-IEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_UEContextReleaseCommand-IEs'(id,99) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-S1AP-IDs'(Val)
      end
   end;
'getenc_UEContextReleaseCommand-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextReleaseCommand-IEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseCommand-IEs'(id,99) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-S1AP-IDs'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseCommand-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  UEContextReleaseRequest-IEs
%%================================
'getenc_UEContextReleaseRequest-IEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextReleaseRequest-IEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_UEContextReleaseRequest-IEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_UEContextReleaseRequest-IEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_UEContextReleaseRequest-IEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseRequest-IEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseRequest-IEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_UEContextReleaseRequest-IEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TAIItemExtIEs
%%================================
'getenc_TAIItemExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TAIItemExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  TAIItemIEs
%%================================
'getenc_TAIItemIEs'(id,47) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAIItem'(Val)
      end
   end;
'getenc_TAIItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_TAIItemIEs'(id,47) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAIItem'(Val, telltype)
      end
   end;
'getdec_TAIItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  PagingIEs
%%================================
'getenc_PagingIEs'(id,43) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEPagingID'(Val)
      end
   end;
'getenc_PagingIEs'(id,44) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_PagingIEs'(id,46) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAIList'(Val)
      end
   end;
'getenc_PagingIEs'(id,80) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEIdentityIndexValue'(Val)
      end
   end;
'getenc_PagingIEs'(id,109) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CNDomain'(Val)
      end
   end;
'getenc_PagingIEs'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_PagingIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_PagingIEs'(id,43) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEPagingID'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(id,44) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(id,46) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAIList'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(id,80) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEIdentityIndexValue'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(id,109) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CNDomain'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_PagingIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  InitialContextSetupFailureIEs
%%================================
'getenc_InitialContextSetupFailureIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_InitialContextSetupFailureIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_InitialContextSetupFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_InitialContextSetupFailureIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupFailureIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupItemCtxtSUResExtIEs
%%================================
'getenc_E-RABSetupItemCtxtSUResExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupItemCtxtSUResExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupItemCtxtSUResIEs
%%================================
'getenc_E-RABSetupItemCtxtSUResIEs'(id,50) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupItemCtxtSURes'(Val)
      end
   end;
'getenc_E-RABSetupItemCtxtSUResIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupItemCtxtSUResIEs'(id,50) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupItemCtxtSURes'(Val, telltype)
      end
   end;
'getdec_E-RABSetupItemCtxtSUResIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  InitialContextSetupResponseIEs
%%================================
'getenc_InitialContextSetupResponseIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupResponseIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupResponseIEs'(id,48) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_InitialContextSetupResponseIEs'(id,51) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupListCtxtSURes'(Val)
      end
   end;
'getenc_InitialContextSetupResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_InitialContextSetupResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_InitialContextSetupResponseIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupResponseIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupResponseIEs'(id,48) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupResponseIEs'(id,51) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupListCtxtSURes'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemCtxtSUReqExtIEs
%%================================
'getenc_E-RABToBeSetupItemCtxtSUReqExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemCtxtSUReqExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemCtxtSUReqIEs
%%================================
'getenc_E-RABToBeSetupItemCtxtSUReqIEs'(id,52) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemCtxtSUReq'(Val)
      end
   end;
'getenc_E-RABToBeSetupItemCtxtSUReqIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemCtxtSUReqIEs'(id,52) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemCtxtSUReq'(Val, telltype)
      end
   end;
'getdec_E-RABToBeSetupItemCtxtSUReqIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  InitialContextSetupRequestIEs
%%================================
'getenc_InitialContextSetupRequestIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListCtxtSUReq'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,73) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityKey'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,74) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UERadioCapability'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,106) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SubscriberProfileIDforRFP'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,108) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSFallbackIndicator'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(id,124) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_InitialContextSetupRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_InitialContextSetupRequestIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListCtxtSUReq'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,73) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityKey'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,74) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UERadioCapability'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,106) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SubscriberProfileIDforRFP'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,108) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSFallbackIndicator'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(id,124) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_InitialContextSetupRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABReleaseIndicationIEs
%%================================
'getenc_E-RABReleaseIndicationIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseIndicationIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseIndicationIEs'(id,110) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_E-RABReleaseIndicationIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABReleaseIndicationIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseIndicationIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseIndicationIEs'(id,110) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseIndicationIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABReleaseItemBearerRelCompExtIEs
%%================================
'getenc_E-RABReleaseItemBearerRelCompExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABReleaseItemBearerRelCompExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABReleaseItemBearerRelCompIEs
%%================================
'getenc_E-RABReleaseItemBearerRelCompIEs'(id,15) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABReleaseItemBearerRelComp'(Val)
      end
   end;
'getenc_E-RABReleaseItemBearerRelCompIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABReleaseItemBearerRelCompIEs'(id,15) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABReleaseItemBearerRelComp'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseItemBearerRelCompIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABReleaseResponseIEs
%%================================
'getenc_E-RABReleaseResponseIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseResponseIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseResponseIEs'(id,34) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_E-RABReleaseResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_E-RABReleaseResponseIEs'(id,69) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABReleaseListBearerRelComp'(Val)
      end
   end;
'getenc_E-RABReleaseResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABReleaseResponseIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseResponseIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseResponseIEs'(id,34) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseResponseIEs'(id,69) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABReleaseListBearerRelComp'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABReleaseCommandIEs
%%================================
'getenc_E-RABReleaseCommandIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseCommandIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABReleaseCommandIEs'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_E-RABReleaseCommandIEs'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_E-RABReleaseCommandIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_E-RABReleaseCommandIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABReleaseCommandIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseCommandIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseCommandIEs'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseCommandIEs'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseCommandIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_E-RABReleaseCommandIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABModifyItemBearerModResExtIEs
%%================================
'getenc_E-RABModifyItemBearerModResExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABModifyItemBearerModResExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABModifyItemBearerModResIEs
%%================================
'getenc_E-RABModifyItemBearerModResIEs'(id,37) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABModifyItemBearerModRes'(Val)
      end
   end;
'getenc_E-RABModifyItemBearerModResIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABModifyItemBearerModResIEs'(id,37) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABModifyItemBearerModRes'(Val, telltype)
      end
   end;
'getdec_E-RABModifyItemBearerModResIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABModifyResponseIEs
%%================================
'getenc_E-RABModifyResponseIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABModifyResponseIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABModifyResponseIEs'(id,31) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABModifyListBearerModRes'(Val)
      end
   end;
'getenc_E-RABModifyResponseIEs'(id,32) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_E-RABModifyResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_E-RABModifyResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABModifyResponseIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABModifyResponseIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABModifyResponseIEs'(id,31) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABModifyListBearerModRes'(Val, telltype)
      end
   end;
'getdec_E-RABModifyResponseIEs'(id,32) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_E-RABModifyResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_E-RABModifyResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeModifyItemBearerModReqExtIEs
%%================================
'getenc_E-RABToBeModifyItemBearerModReqExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeModifyItemBearerModReqExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeModifiedItemBearerModReqIEs
%%================================
'getenc_E-RABToBeModifiedItemBearerModReqIEs'(id,36) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeModifiedItemBearerModReq'(Val)
      end
   end;
'getenc_E-RABToBeModifiedItemBearerModReqIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeModifiedItemBearerModReqIEs'(id,36) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeModifiedItemBearerModReq'(Val, telltype)
      end
   end;
'getdec_E-RABToBeModifiedItemBearerModReqIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABModifyRequestIEs
%%================================
'getenc_E-RABModifyRequestIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABModifyRequestIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABModifyRequestIEs'(id,30) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeModifiedListBearerModReq'(Val)
      end
   end;
'getenc_E-RABModifyRequestIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_E-RABModifyRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABModifyRequestIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABModifyRequestIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABModifyRequestIEs'(id,30) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeModifiedListBearerModReq'(Val, telltype)
      end
   end;
'getdec_E-RABModifyRequestIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_E-RABModifyRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupItemBearerSUResExtIEs
%%================================
'getenc_E-RABSetupItemBearerSUResExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupItemBearerSUResExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupItemBearerSUResIEs
%%================================
'getenc_E-RABSetupItemBearerSUResIEs'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupItemBearerSURes'(Val)
      end
   end;
'getenc_E-RABSetupItemBearerSUResIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupItemBearerSUResIEs'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupItemBearerSURes'(Val, telltype)
      end
   end;
'getdec_E-RABSetupItemBearerSUResIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupResponseIEs
%%================================
'getenc_E-RABSetupResponseIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABSetupResponseIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABSetupResponseIEs'(id,28) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupListBearerSURes'(Val)
      end
   end;
'getenc_E-RABSetupResponseIEs'(id,29) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_E-RABSetupResponseIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_E-RABSetupResponseIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupResponseIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABSetupResponseIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABSetupResponseIEs'(id,28) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupListBearerSURes'(Val, telltype)
      end
   end;
'getdec_E-RABSetupResponseIEs'(id,29) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_E-RABSetupResponseIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_E-RABSetupResponseIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemBearerSUReqExtIEs
%%================================
'getenc_E-RABToBeSetupItemBearerSUReqExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemBearerSUReqExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemBearerSUReqIEs
%%================================
'getenc_E-RABToBeSetupItemBearerSUReqIEs'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemBearerSUReq'(Val)
      end
   end;
'getenc_E-RABToBeSetupItemBearerSUReqIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemBearerSUReqIEs'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemBearerSUReq'(Val, telltype)
      end
   end;
'getdec_E-RABToBeSetupItemBearerSUReqIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABSetupRequestIEs
%%================================
'getenc_E-RABSetupRequestIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABSetupRequestIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_E-RABSetupRequestIEs'(id,16) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListBearerSUReq'(Val)
      end
   end;
'getenc_E-RABSetupRequestIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_E-RABSetupRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABSetupRequestIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABSetupRequestIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_E-RABSetupRequestIEs'(id,16) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListBearerSUReq'(Val, telltype)
      end
   end;
'getdec_E-RABSetupRequestIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_E-RABSetupRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverCancelAcknowledgeIEs
%%================================
'getenc_HandoverCancelAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCancelAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCancelAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverCancelAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverCancelAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancelAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancelAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverCancelAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverCancelIEs
%%================================
'getenc_HandoverCancelIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCancelIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverCancelIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCancelIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverCancelIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancelIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverCancelIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCancelIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  PathSwitchRequestFailureIEs
%%================================
'getenc_PathSwitchRequestFailureIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_PathSwitchRequestFailureIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_PathSwitchRequestFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_PathSwitchRequestFailureIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestFailureIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSwitchedULItem-ExtIEs
%%================================
'getenc_E-RABToBeSwitchedULItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSwitchedULItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSwitchedULItemIEs
%%================================
'getenc_E-RABToBeSwitchedULItemIEs'(id,94) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedULItem'(Val)
      end
   end;
'getenc_E-RABToBeSwitchedULItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSwitchedULItemIEs'(id,94) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedULItem'(Val, telltype)
      end
   end;
'getdec_E-RABToBeSwitchedULItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  PathSwitchRequestAcknowledgeIEs
%%================================
'getenc_PathSwitchRequestAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityContext'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(id,95) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedULList'(Val)
      end
   end;
'getenc_PathSwitchRequestAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_PathSwitchRequestAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityContext'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(id,95) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedULList'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSwitchedDLItem-ExtIEs
%%================================
'getenc_E-RABToBeSwitchedDLItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSwitchedDLItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSwitchedDLItemIEs
%%================================
'getenc_E-RABToBeSwitchedDLItemIEs'(id,23) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedDLItem'(Val)
      end
   end;
'getenc_E-RABToBeSwitchedDLItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSwitchedDLItemIEs'(id,23) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedDLItem'(Val, telltype)
      end
   end;
'getdec_E-RABToBeSwitchedDLItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  PathSwitchRequestIEs
%%================================
'getenc_PathSwitchRequestIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedDLList'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(id,88) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_PathSwitchRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_PathSwitchRequestIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedDLList'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(id,88) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_PathSwitchRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverNotifyIEs
%%================================
'getenc_HandoverNotifyIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverNotifyIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverNotifyIEs'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_HandoverNotifyIEs'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_HandoverNotifyIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverNotifyIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverNotifyIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverNotifyIEs'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_HandoverNotifyIEs'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_HandoverNotifyIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverFailureIEs
%%================================
'getenc_HandoverFailureIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverFailureIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABFailedToSetupItemHOReqAckExtIEs
%%================================
'getenc_E-RABFailedToSetupItemHOReqAckExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABFailedToSetupItemHOReqAckExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABFailedtoSetupItemHOReqAckIEs
%%================================
'getenc_E-RABFailedtoSetupItemHOReqAckIEs'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABFailedToSetupItemHOReqAck'(Val)
      end
   end;
'getenc_E-RABFailedtoSetupItemHOReqAckIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABFailedtoSetupItemHOReqAckIEs'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABFailedToSetupItemHOReqAck'(Val, telltype)
      end
   end;
'getdec_E-RABFailedtoSetupItemHOReqAckIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABAdmittedItem-ExtIEs
%%================================
'getenc_E-RABAdmittedItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABAdmittedItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABAdmittedItemIEs
%%================================
'getenc_E-RABAdmittedItemIEs'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABAdmittedItem'(Val)
      end
   end;
'getenc_E-RABAdmittedItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABAdmittedItemIEs'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABAdmittedItem'(Val, telltype)
      end
   end;
'getdec_E-RABAdmittedItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRequestAcknowledgeIEs
%%================================
'getenc_HandoverRequestAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(id,18) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABAdmittedList'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(id,19) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABFailedtoSetupListHOReqAck'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(id,123) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverRequestAcknowledgeIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRequestAcknowledgeIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(id,18) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABAdmittedList'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(id,19) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABFailedtoSetupListHOReqAck'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(id,123) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverRequestAcknowledgeIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemHOReq-ExtIEs
%%================================
'getenc_E-RABToBeSetupItemHOReq-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemHOReq-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABToBeSetupItemHOReqIEs
%%================================
'getenc_E-RABToBeSetupItemHOReqIEs'(id,27) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemHOReq'(Val)
      end
   end;
'getenc_E-RABToBeSetupItemHOReqIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABToBeSetupItemHOReqIEs'(id,27) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemHOReq'(Val, telltype)
      end
   end;
'getdec_E-RABToBeSetupItemHOReqIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRequestIEs
%%================================
'getenc_HandoverRequestIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityContext'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,53) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListHOReq'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,104) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,124) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(id,136) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NASSecurityParameterstoE-UTRAN'(Val)
      end
   end;
'getenc_HandoverRequestIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRequestIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityContext'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,53) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListHOReq'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,104) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,124) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(id,136) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NASSecurityParameterstoE-UTRAN'(Val, telltype)
      end
   end;
'getdec_HandoverRequestIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverPreparationFailureIEs
%%================================
'getenc_HandoverPreparationFailureIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverPreparationFailureIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverPreparationFailureIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverPreparationFailureIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverPreparationFailureIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverPreparationFailureIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailureIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailureIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailureIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverPreparationFailureIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABDataForwardingItem-ExtIEs
%%================================
'getenc_E-RABDataForwardingItem-ExtIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABDataForwardingItem-ExtIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  E-RABDataForwardingItemIEs
%%================================
'getenc_E-RABDataForwardingItemIEs'(id,14) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABDataForwardingItem'(Val)
      end
   end;
'getenc_E-RABDataForwardingItemIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_E-RABDataForwardingItemIEs'(id,14) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABDataForwardingItem'(Val, telltype)
      end
   end;
'getdec_E-RABDataForwardingItemIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverCommandIEs
%%================================
'getenc_HandoverCommandIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSubjecttoDataForwardingList'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,13) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,123) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,135) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NASSecurityParametersfromE-UTRAN'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(id,139) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverCommandIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverCommandIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSubjecttoDataForwardingList'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,13) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,123) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,135) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NASSecurityParametersfromE-UTRAN'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(id,139) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverCommandIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  HandoverRequiredIEs
%%================================
'getenc_HandoverRequiredIEs'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,4) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TargetID'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,79) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Direct-Forwarding-Path-Availability'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,104) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,125) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCHOIndication'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,132) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MSClassmark2'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,133) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MSClassmark3'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(id,138) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_HandoverRequiredIEs'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_HandoverRequiredIEs'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,4) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TargetID'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,79) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Direct-Forwarding-Path-Availability'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,104) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,125) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCHOIndication'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,132) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MSClassmark2'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,133) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MSClassmark3'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(id,138) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_HandoverRequiredIEs'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_79
%%================================
'getenc_internal_object_set_argument_79'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_79'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_79'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_internal_object_set_argument_79'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_79'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_79'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_79'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_79'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_139
%%================================
'getenc_internal_object_set_argument_139'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id,18) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABAdmittedList'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id,19) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABFailedtoSetupListHOReqAck'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id,123) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_139'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_139'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id,18) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABAdmittedList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id,19) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABFailedtoSetupListHOReqAck'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id,123) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_139'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_89
%%================================
'getenc_internal_object_set_argument_89'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,75) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_GUMMEI'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,96) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_S-TMSI'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,127) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-Id'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id,134) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RRC-Establishment-Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_89'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_89'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,75) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_GUMMEI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,96) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_S-TMSI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,127) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-Id'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id,134) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RRC-Establishment-Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_89'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_129
%%================================
'getenc_internal_object_set_argument_129'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityContext'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id,95) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedULList'(Val)
      end
   end;
'getenc_internal_object_set_argument_129'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_129'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityContext'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id,95) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedULList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_129'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_59
%%================================
'getenc_internal_object_set_argument_59'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_59'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_119
%%================================
'getenc_internal_object_set_argument_119'(id,39) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupItemBearerSURes'(Val)
      end
   end;
'getenc_internal_object_set_argument_119'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_119'(id,39) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupItemBearerSURes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_119'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_69
%%================================
'getenc_internal_object_set_argument_69'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_69'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_69'(id,90) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-StatusTransfer-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_69'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_69'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_69'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_69'(id,90) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-StatusTransfer-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_69'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_109
%%================================
'getenc_internal_object_set_argument_109'(id,15) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABReleaseItemBearerRelComp'(Val)
      end
   end;
'getenc_internal_object_set_argument_109'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_109'(id,15) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABReleaseItemBearerRelComp'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_109'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_99
%%================================
'getenc_internal_object_set_argument_99'(id,43) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEPagingID'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id,44) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id,46) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAIList'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id,80) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEIdentityIndexValue'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id,109) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CNDomain'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_internal_object_set_argument_99'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_99'(id,43) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEPagingID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id,44) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id,46) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAIList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id,80) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEIdentityIndexValue'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id,109) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CNDomain'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_99'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_9
%%================================
'getenc_internal_object_set_argument_9'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_9'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_39
%%================================
'getenc_internal_object_set_argument_39'(id,35) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_39'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_39'(id,35) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_39'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_49
%%================================
'getenc_internal_object_set_argument_49'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_49'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_19
%%================================
'getenc_internal_object_set_argument_19'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_19'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_29
%%================================
'getenc_internal_object_set_argument_29'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_29'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_78
%%================================
'getenc_internal_object_set_argument_78'(id,60) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENBname'(Val)
      end
   end;
'getenc_internal_object_set_argument_78'(id,64) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SupportedTAs'(Val)
      end
   end;
'getenc_internal_object_set_argument_78'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_internal_object_set_argument_78'(id,137) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_internal_object_set_argument_78'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_78'(id,60) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENBname'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_78'(id,64) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SupportedTAs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_78'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_78'(id,137) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_78'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_138
%%================================
'getenc_internal_object_set_argument_138'(id,20) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABAdmittedItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_138'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_138'(id,20) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABAdmittedItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_138'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_88
%%================================
'getenc_internal_object_set_argument_88'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_88'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_88'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_88'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_internal_object_set_argument_88'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_88'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_88'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_88'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_88'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_88'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_88'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_88'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_128
%%================================
'getenc_internal_object_set_argument_128'(id,94) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedULItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_128'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_128'(id,94) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedULItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_128'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_58
%%================================
'getenc_internal_object_set_argument_58'(id,111) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MessageIdentifier'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,112) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SerialNumber'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,113) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningAreaList'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,114) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RepetitionPeriod'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,115) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NumberofBroadcastRequest'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,116) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningType'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,117) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningSecurityInfo'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,118) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_DataCodingScheme'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id,119) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_WarningMessageContents'(Val)
      end
   end;
'getenc_internal_object_set_argument_58'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_58'(id,111) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MessageIdentifier'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,112) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SerialNumber'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,113) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningAreaList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,114) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RepetitionPeriod'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,115) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NumberofBroadcastRequest'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,116) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,117) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningSecurityInfo'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,118) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_DataCodingScheme'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id,119) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_WarningMessageContents'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_58'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_118
%%================================
'getenc_internal_object_set_argument_118'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_118'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_68
%%================================
'getenc_internal_object_set_argument_68'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_68'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_68'(id,90) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-StatusTransfer-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_68'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_68'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_68'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_68'(id,90) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-StatusTransfer-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_68'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_108
%%================================
'getenc_internal_object_set_argument_108'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_108'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_98
%%================================
'getenc_internal_object_set_argument_98'(id,47) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAIItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_98'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_98'(id,47) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAIItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_98'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_8
%%================================
'getenc_internal_object_set_argument_8'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_8'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_38
%%================================
'getenc_internal_object_set_argument_38'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_38'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_48
%%================================
'getenc_internal_object_set_argument_48'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_48'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_18
%%================================
'getenc_internal_object_set_argument_18'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_18'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_28
%%================================
'getenc_internal_object_set_argument_28'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_28'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_147
%%================================
'getenc_internal_object_set_argument_147'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,4) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TargetID'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,79) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Direct-Forwarding-Path-Availability'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,104) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,125) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCHOIndication'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,132) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MSClassmark2'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,133) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MSClassmark3'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id,138) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_147'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_147'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,4) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TargetID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,79) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Direct-Forwarding-Path-Availability'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,104) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,125) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCHOIndication'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,132) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MSClassmark2'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,133) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MSClassmark3'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id,138) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_147'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_77
%%================================
'getenc_internal_object_set_argument_77'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_77'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_77'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_77'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_137
%%================================
'getenc_internal_object_set_argument_137'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_137'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_87
%%================================
'getenc_internal_object_set_argument_87'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_87'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_87'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_87'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_87'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_87'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_87'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_87'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_87'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_87'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_127
%%================================
'getenc_internal_object_set_argument_127'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_127'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_57
%%================================
'getenc_internal_object_set_argument_57'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_57'(id,111) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MessageIdentifier'(Val)
      end
   end;
'getenc_internal_object_set_argument_57'(id,112) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SerialNumber'(Val)
      end
   end;
'getenc_internal_object_set_argument_57'(id,120) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_BroadcastCompletedAreaList'(Val)
      end
   end;
'getenc_internal_object_set_argument_57'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_57'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_57'(id,111) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MessageIdentifier'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_57'(id,112) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SerialNumber'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_57'(id,120) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_BroadcastCompletedAreaList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_57'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_117
%%================================
'getenc_internal_object_set_argument_117'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_117'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_117'(id,30) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeModifiedListBearerModReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_117'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_117'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_117'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_117'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_117'(id,30) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeModifiedListBearerModReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_117'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_117'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_67
%%================================
'getenc_internal_object_set_argument_67'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_67'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_67'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_internal_object_set_argument_67'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_67'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_67'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_67'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_67'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_107
%%================================
'getenc_internal_object_set_argument_107'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_107'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_107'(id,110) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_107'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_107'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_107'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_107'(id,110) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_107'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_97
%%================================
'getenc_internal_object_set_argument_97'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_97'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_7
%%================================
'getenc_internal_object_set_argument_7'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_7'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_37
%%================================
'getenc_internal_object_set_argument_37'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_37'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_47
%%================================
'getenc_internal_object_set_argument_47'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_47'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_17
%%================================
'getenc_internal_object_set_argument_17'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_17'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_27
%%================================
'getenc_internal_object_set_argument_27'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_27'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_146
%%================================
'getenc_internal_object_set_argument_146'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSubjecttoDataForwardingList'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,13) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,123) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,135) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NASSecurityParametersfromE-UTRAN'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id,139) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Target-ToSource-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_146'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_146'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSubjecttoDataForwardingList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,13) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,123) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,135) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NASSecurityParametersfromE-UTRAN'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id,139) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Target-ToSource-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_146'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_76
%%================================
'getenc_internal_object_set_argument_76'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_76'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_76'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_internal_object_set_argument_76'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_76'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_76'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_76'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_76'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_136
%%================================
'getenc_internal_object_set_argument_136'(id,21) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABFailedToSetupItemHOReqAck'(Val)
      end
   end;
'getenc_internal_object_set_argument_136'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_136'(id,21) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABFailedToSetupItemHOReqAck'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_136'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_86
%%================================
'getenc_internal_object_set_argument_86'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_86'(id,92) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ResetType'(Val)
      end
   end;
'getenc_internal_object_set_argument_86'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_86'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_86'(id,92) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ResetType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_86'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_126
%%================================
'getenc_internal_object_set_argument_126'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_126'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_126'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_126'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_126'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_126'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_126'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_126'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_126'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_126'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_56
%%================================
'getenc_internal_object_set_argument_56'(id,121) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Inter-SystemInformationTransferType'(Val)
      end
   end;
'getenc_internal_object_set_argument_56'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_56'(id,121) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Inter-SystemInformationTransferType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_56'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_116
%%================================
'getenc_internal_object_set_argument_116'(id,36) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeModifiedItemBearerModReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_116'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_116'(id,36) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeModifiedItemBearerModReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_116'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_66
%%================================
'getenc_internal_object_set_argument_66'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_66'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_66'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_66'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_66'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_66'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_66'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_66'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_66'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_66'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_106
%%================================
'getenc_internal_object_set_argument_106'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,24) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListCtxtSUReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,73) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityKey'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,74) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UERadioCapability'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,106) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SubscriberProfileIDforRFP'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,108) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSFallbackIndicator'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id,124) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_internal_object_set_argument_106'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_106'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,24) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListCtxtSUReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,73) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityKey'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,74) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UERadioCapability'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,106) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SubscriberProfileIDforRFP'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,108) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSFallbackIndicator'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id,124) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_106'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_96
%%================================
'getenc_internal_object_set_argument_96'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_96'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_96'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_96'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_96'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_96'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_96'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_96'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_6
%%================================
'getenc_internal_object_set_argument_6'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_6'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_36
%%================================
'getenc_internal_object_set_argument_36'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_36'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_46
%%================================
'getenc_internal_object_set_argument_46'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_46'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_16
%%================================
'getenc_internal_object_set_argument_16'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_16'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_26
%%================================
'getenc_internal_object_set_argument_26'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_26'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_145
%%================================
'getenc_internal_object_set_argument_145'(id,14) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABDataForwardingItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_145'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_145'(id,14) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABDataForwardingItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_145'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_75
%%================================
'getenc_internal_object_set_argument_75'(id,61) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MMEname'(Val)
      end
   end;
'getenc_internal_object_set_argument_75'(id,87) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RelativeMMECapacity'(Val)
      end
   end;
'getenc_internal_object_set_argument_75'(id,105) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedGUMMEIs'(Val)
      end
   end;
'getenc_internal_object_set_argument_75'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_75'(id,61) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MMEname'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_75'(id,87) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RelativeMMECapacity'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_75'(id,105) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedGUMMEIs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_75'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_135
%%================================
'getenc_internal_object_set_argument_135'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_135'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_85
%%================================
'getenc_internal_object_set_argument_85'(id,91) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_85'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_85'(id,91) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_85'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_125
%%================================
'getenc_internal_object_set_argument_125'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_125'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_125'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_125'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_125'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_125'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_125'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_125'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_55
%%================================
'getenc_internal_object_set_argument_55'(id,122) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Inter-SystemInformationTransferType'(Val)
      end
   end;
'getenc_internal_object_set_argument_55'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_55'(id,122) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Inter-SystemInformationTransferType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_55'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_115
%%================================
'getenc_internal_object_set_argument_115'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_115'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_65
%%================================
'getenc_internal_object_set_argument_65'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_65'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_65'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_65'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_65'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_65'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_65'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_65'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_105
%%================================
'getenc_internal_object_set_argument_105'(id,52) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemCtxtSUReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_105'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_105'(id,52) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemCtxtSUReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_105'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_95
%%================================
'getenc_internal_object_set_argument_95'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_95'(id,99) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-S1AP-IDs'(Val)
      end
   end;
'getenc_internal_object_set_argument_95'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_95'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_95'(id,99) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-S1AP-IDs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_95'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_5
%%================================
'getenc_internal_object_set_argument_5'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_5'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_35
%%================================
'getenc_internal_object_set_argument_35'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_35'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_45
%%================================
'getenc_internal_object_set_argument_45'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_45'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_15
%%================================
'getenc_internal_object_set_argument_15'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_15'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_25
%%================================
'getenc_internal_object_set_argument_25'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_25'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_144
%%================================
'getenc_internal_object_set_argument_144'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_144'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_74
%%================================
'getenc_internal_object_set_argument_74'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_74'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_74'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_74'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_134
%%================================
'getenc_internal_object_set_argument_134'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_134'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_134'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_134'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_134'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_134'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_134'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_134'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_84
%%================================
'getenc_internal_object_set_argument_84'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_84'(id,93) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionListResAck'(Val)
      end
   end;
'getenc_internal_object_set_argument_84'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_84'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_84'(id,93) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionListResAck'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_84'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_124
%%================================
'getenc_internal_object_set_argument_124'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_124'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_124'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_124'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_124'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_124'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_124'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_124'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_54
%%================================
'getenc_internal_object_set_argument_54'(id,129) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SONConfigurationTransfer'(Val)
      end
   end;
'getenc_internal_object_set_argument_54'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_54'(id,129) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SONConfigurationTransfer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_54'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_114
%%================================
'getenc_internal_object_set_argument_114'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_114'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_114'(id,31) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABModifyListBearerModRes'(Val)
      end
   end;
'getenc_internal_object_set_argument_114'(id,32) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_114'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_114'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_114'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_114'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_114'(id,31) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABModifyListBearerModRes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_114'(id,32) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_114'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_114'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_64
%%================================
'getenc_internal_object_set_argument_64'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_64'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_64'(id,86) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-UTRAN-Trace-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_64'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_64'(id,131) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TransportLayerAddress'(Val)
      end
   end;
'getenc_internal_object_set_argument_64'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_64'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_64'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_64'(id,86) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-UTRAN-Trace-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_64'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_64'(id,131) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TransportLayerAddress'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_64'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_104
%%================================
'getenc_internal_object_set_argument_104'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_104'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_94
%%================================
'getenc_internal_object_set_argument_94'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_94'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_94'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_94'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_94'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_94'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_94'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_94'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_4
%%================================
'getenc_internal_object_set_argument_4'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_4'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_34
%%================================
'getenc_internal_object_set_argument_34'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_34'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_44
%%================================
'getenc_internal_object_set_argument_44'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_44'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_14
%%================================
'getenc_internal_object_set_argument_14'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_14'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_24
%%================================
'getenc_internal_object_set_argument_24'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_24'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_143
%%================================
'getenc_internal_object_set_argument_143'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_143'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_143'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_143'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_143'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_143'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_143'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_143'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_143'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_143'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_73
%%================================
'getenc_internal_object_set_argument_73'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_73'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_73'(id,65) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TimeToWait'(Val)
      end
   end;
'getenc_internal_object_set_argument_73'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_73'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_73'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_73'(id,65) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TimeToWait'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_73'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_133
%%================================
'getenc_internal_object_set_argument_133'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_133'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_133'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_internal_object_set_argument_133'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_133'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_133'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_133'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_133'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_133'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_133'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_83
%%================================
'getenc_internal_object_set_argument_83'(id,91) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UE-associatedLogicalS1-ConnectionItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_83'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_83'(id,91) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UE-associatedLogicalS1-ConnectionItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_83'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_123
%%================================
'getenc_internal_object_set_argument_123'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_123'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_123'(id,16) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListBearerSUReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_123'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_123'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_123'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_123'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_123'(id,16) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListBearerSUReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_123'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_123'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_53
%%================================
'getenc_internal_object_set_argument_53'(id,130) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SONConfigurationTransfer'(Val)
      end
   end;
'getenc_internal_object_set_argument_53'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_53'(id,130) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SONConfigurationTransfer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_53'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_113
%%================================
'getenc_internal_object_set_argument_113'(id,37) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABModifyItemBearerModRes'(Val)
      end
   end;
'getenc_internal_object_set_argument_113'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_113'(id,37) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABModifyItemBearerModRes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_113'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_63
%%================================
'getenc_internal_object_set_argument_63'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_63'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_63'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_internal_object_set_argument_63'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_63'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_63'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_63'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_63'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_103
%%================================
'getenc_internal_object_set_argument_103'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_103'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_103'(id,48) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_103'(id,51) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupListCtxtSURes'(Val)
      end
   end;
'getenc_internal_object_set_argument_103'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_103'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_103'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_103'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_103'(id,48) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_103'(id,51) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupListCtxtSURes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_103'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_103'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_93
%%================================
'getenc_internal_object_set_argument_93'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id,73) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityKey'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id,106) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SubscriberProfileIDforRFP'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id,108) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSFallbackIndicator'(Val)
      end
   end;
'getenc_internal_object_set_argument_93'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_93'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id,73) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityKey'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id,106) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SubscriberProfileIDforRFP'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id,108) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSFallbackIndicator'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_93'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_3
%%================================
'getenc_internal_object_set_argument_3'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_3'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_33
%%================================
'getenc_internal_object_set_argument_33'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_33'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_43
%%================================
'getenc_internal_object_set_argument_43'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_43'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_13
%%================================
'getenc_internal_object_set_argument_13'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_13'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_23
%%================================
'getenc_internal_object_set_argument_23'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_23'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_142
%%================================
'getenc_internal_object_set_argument_142'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,1) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverType'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,25) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TraceActivation'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,40) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SecurityContext'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,53) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupListHOReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,104) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Source-ToTarget-TransparentContainer'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,124) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SRVCCOperationPossible'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id,136) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NASSecurityParameterstoE-UTRAN'(Val)
      end
   end;
'getenc_internal_object_set_argument_142'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_142'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,1) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,25) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TraceActivation'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,40) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SecurityContext'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,53) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupListHOReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,104) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Source-ToTarget-TransparentContainer'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,124) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SRVCCOperationPossible'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id,136) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NASSecurityParameterstoE-UTRAN'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_142'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_72
%%================================
'getenc_internal_object_set_argument_72'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id,12) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSubjecttoDataForwardingList'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id,70) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id,71) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000RATType'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id,83) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000HOStatus'(Val)
      end
   end;
'getenc_internal_object_set_argument_72'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_72'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id,12) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSubjecttoDataForwardingList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id,70) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id,71) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000RATType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id,83) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000HOStatus'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_72'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_132
%%================================
'getenc_internal_object_set_argument_132'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id,22) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedDLList'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id,88) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id,107) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UESecurityCapabilities'(Val)
      end
   end;
'getenc_internal_object_set_argument_132'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_132'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id,22) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedDLList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id,88) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id,107) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UESecurityCapabilities'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_132'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_82
%%================================
'getenc_internal_object_set_argument_82'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_82'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_82'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_82'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_82'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_82'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_82'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_82'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_82'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_82'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_122
%%================================
'getenc_internal_object_set_argument_122'(id,17) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemBearerSUReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_122'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_122'(id,17) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemBearerSUReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_122'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_112
%%================================
'getenc_internal_object_set_argument_112'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_112'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_62
%%================================
'getenc_internal_object_set_argument_62'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_62'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_62'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_62'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_62'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_62'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_62'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_62'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_102
%%================================
'getenc_internal_object_set_argument_102'(id,50) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupItemCtxtSURes'(Val)
      end
   end;
'getenc_internal_object_set_argument_102'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_102'(id,50) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupItemCtxtSURes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_102'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_92
%%================================
'getenc_internal_object_set_argument_92'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_92'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_92'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_92'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_92'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_92'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_92'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_92'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_2
%%================================
'getenc_internal_object_set_argument_2'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_2'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_32
%%================================
'getenc_internal_object_set_argument_32'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_32'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_42
%%================================
'getenc_internal_object_set_argument_42'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_42'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_12
%%================================
'getenc_internal_object_set_argument_12'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_12'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_22
%%================================
'getenc_internal_object_set_argument_22'(id,78) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABInformationListItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_22'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_22'(id,78) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABInformationListItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_22'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_141
%%================================
'getenc_internal_object_set_argument_141'(id,27) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSetupItemHOReq'(Val)
      end
   end;
'getenc_internal_object_set_argument_141'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_141'(id,27) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSetupItemHOReq'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_141'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_71
%%================================
'getenc_internal_object_set_argument_71'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,70) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,71) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000RATType'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,72) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000SectorID'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,84) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000HORequiredIndication'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,97) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000OneXRAND'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id,102) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cdma2000OneXSRVCCInfo'(Val)
      end
   end;
'getenc_internal_object_set_argument_71'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_71'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,70) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,71) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000RATType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,72) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000SectorID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,84) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000HORequiredIndication'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,97) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000OneXRAND'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id,102) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cdma2000OneXSRVCCInfo'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_71'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_131
%%================================
'getenc_internal_object_set_argument_131'(id,23) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABToBeSwitchedDLItem'(Val)
      end
   end;
'getenc_internal_object_set_argument_131'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_131'(id,23) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABToBeSwitchedDLItem'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_131'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_81
%%================================
'getenc_internal_object_set_argument_81'(id,59) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Global-ENB-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_81'(id,60) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENBname'(Val)
      end
   end;
'getenc_internal_object_set_argument_81'(id,64) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_SupportedTAs'(Val)
      end
   end;
'getenc_internal_object_set_argument_81'(id,128) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CSG-IdList'(Val)
      end
   end;
'getenc_internal_object_set_argument_81'(id,137) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_PagingDRX'(Val)
      end
   end;
'getenc_internal_object_set_argument_81'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_81'(id,59) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Global-ENB-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_81'(id,60) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENBname'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_81'(id,64) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_SupportedTAs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_81'(id,128) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CSG-IdList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_81'(id,137) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_PagingDRX'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_81'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_121
%%================================
'getenc_internal_object_set_argument_121'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_121'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_51
%%================================
'getenc_internal_object_set_argument_51'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_51'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_111
%%================================
'getenc_internal_object_set_argument_111'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_111'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_111'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_111'(id,33) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_111'(id,66) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UEAggregateMaximumBitrate'(Val)
      end
   end;
'getenc_internal_object_set_argument_111'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_111'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_111'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_111'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_111'(id,33) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_111'(id,66) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UEAggregateMaximumBitrate'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_111'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_61
%%================================
'getenc_internal_object_set_argument_61'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_61'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_61'(id,67) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_TAI'(Val)
      end
   end;
'getenc_internal_object_set_argument_61'(id,98) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RequestType'(Val)
      end
   end;
'getenc_internal_object_set_argument_61'(id,100) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_EUTRAN-CGI'(Val)
      end
   end;
'getenc_internal_object_set_argument_61'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_61'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_61'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_61'(id,67) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_TAI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_61'(id,98) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RequestType'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_61'(id,100) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_EUTRAN-CGI'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_61'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_101
%%================================
'getenc_internal_object_set_argument_101'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_101'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_91
%%================================
'getenc_internal_object_set_argument_91'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_91'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_91'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_91'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_91'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_91'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_91'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_91'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_91'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_91'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_1
%%================================
'getenc_internal_object_set_argument_1'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_1'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_31
%%================================
'getenc_internal_object_set_argument_31'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_31'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_41
%%================================
'getenc_internal_object_set_argument_41'(id,89) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Bearers-SubjectToStatusTransfer-Item'(Val)
      end
   end;
'getenc_internal_object_set_argument_41'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_41'(id,89) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Bearers-SubjectToStatusTransfer-Item'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_41'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_11
%%================================
'getenc_internal_object_set_argument_11'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_11'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_21
%%================================
'getenc_internal_object_set_argument_21'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_21'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_140
%%================================
'getenc_internal_object_set_argument_140'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_140'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_70
%%================================
'getenc_internal_object_set_argument_70'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_70'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_70'(id,74) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_UERadioCapability'(Val)
      end
   end;
'getenc_internal_object_set_argument_70'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_70'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_70'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_70'(id,74) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_UERadioCapability'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_70'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_130
%%================================
'getenc_internal_object_set_argument_130'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_130'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_80
%%================================
'getenc_internal_object_set_argument_80'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_80'(id,61) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MMEname'(Val)
      end
   end;
'getenc_internal_object_set_argument_80'(id,87) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_RelativeMMECapacity'(Val)
      end
   end;
'getenc_internal_object_set_argument_80'(id,105) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ServedGUMMEIs'(Val)
      end
   end;
'getenc_internal_object_set_argument_80'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_80'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_80'(id,61) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MMEname'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_80'(id,87) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_RelativeMMECapacity'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_80'(id,105) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ServedGUMMEIs'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_80'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_120
%%================================
'getenc_internal_object_set_argument_120'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_120'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_120'(id,28) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABSetupListBearerSURes'(Val)
      end
   end;
'getenc_internal_object_set_argument_120'(id,29) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_120'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_120'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_120'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_120'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_120'(id,28) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABSetupListBearerSURes'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_120'(id,29) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_120'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_120'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_50
%%================================
'getenc_internal_object_set_argument_50'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_50'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_110
%%================================
'getenc_internal_object_set_argument_110'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_110'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_110'(id,34) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABList'(Val)
      end
   end;
'getenc_internal_object_set_argument_110'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_110'(id,69) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_E-RABReleaseListBearerRelComp'(Val)
      end
   end;
'getenc_internal_object_set_argument_110'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_110'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_110'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_110'(id,34) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_110'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_110'(id,69) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_E-RABReleaseListBearerRelComp'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_110'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_60
%%================================
'getenc_internal_object_set_argument_60'(id,101) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_OverloadResponse'(Val)
      end
   end;
'getenc_internal_object_set_argument_60'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_60'(id,101) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_OverloadResponse'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_60'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_100
%%================================
'getenc_internal_object_set_argument_100'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_100'(id,2) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_Cause'(Val)
      end
   end;
'getenc_internal_object_set_argument_100'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_100'(id,58) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_CriticalityDiagnostics'(Val)
      end
   end;
'getenc_internal_object_set_argument_100'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_100'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_100'(id,2) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_Cause'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_100'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_100'(id,58) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_CriticalityDiagnostics'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_100'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_90
%%================================
'getenc_internal_object_set_argument_90'(id,0) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_MME-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_90'(id,8) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_ENB-UE-S1AP-ID'(Val)
      end
   end;
'getenc_internal_object_set_argument_90'(id,26) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_NAS-PDU'(Val)
      end
   end;
'getenc_internal_object_set_argument_90'(id,41) ->
   fun(Type, Val, _) ->
      case Type of
         'Value' ->
            'enc_HandoverRestrictionList'(Val)
      end
   end;
'getenc_internal_object_set_argument_90'(id, ErrV) ->
    fun(C,V,_) -> exit({'Type not compatible with table constraint',{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.

'getdec_internal_object_set_argument_90'(id,0) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_MME-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_90'(id,8) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_ENB-UE-S1AP-ID'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_90'(id,26) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_NAS-PDU'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_90'(id,41) ->
   fun(Type, Val, _, _) ->
      case Type of
         'Value' ->
            'dec_HandoverRestrictionList'(Val, telltype)
      end
   end;
'getdec_internal_object_set_argument_90'(id, ErrV) ->
  fun(C,V,_,_) -> exit({{component,C},{value,V},{unique_name_and_value,id,ErrV}}) end.





%%================================
%%  internal_object_set_argument_30
%%================================
'getenc_internal_object_set_argument_30'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_30'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_40
%%================================
'getenc_internal_object_set_argument_40'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_40'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_10
%%================================
'getenc_internal_object_set_argument_10'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_10'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.





%%================================
%%  internal_object_set_argument_20
%%================================
'getenc_internal_object_set_argument_20'(_, _) ->
   fun(_, Val, _) ->
      [{octets,Val}]
   end.

'getdec_internal_object_set_argument_20'(_, _) ->
   fun(Attr1, Bytes, _,_) ->
      {Bytes,Attr1}
   end.


